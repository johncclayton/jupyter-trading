[
  {
    "name": "ABS",
    "category": "function",
    "signature": "ABS(BBBot(len1, mult)",
    "description": "BBBot(len2, mult))upper = ABS(BBTop(len1, mult) - BBTop(len2, mult))",
    "snippet": "Data:\n    Example_ABS: ABS(...)",
    "sources": [
      "manual.txt:3387",
      "samples/clenow_stocks_on_move.rts:36",
      "samples/clenow_stocks_on_move_dynamic.rts:36",
      "samples/dalio_all_weather_maxdiff.rts:28",
      "samples/flipper.rts:45",
      "samples/supertrend.rts:33"
    ]
  },
  {
    "name": "ADX",
    "category": "function",
    "signature": "ADX()",
    "description": "Wilder's average directional index\u00b7 ATR - Wilder's average true range\u00b7 BBBot - Bollinger band bottom\u00b7 BBPct - Bollinger band percent (%B)\u00b7 BBTop - Bollinger band top\u00b7 BBTrend - Bollinger band trend\u00b7 BBWidth - Bollinger band width\u00b7 CCI - commodity channel index\u00b7 CRSI - Connors RSI indicator\u00b7 HVOL - historical volatility\u00b7 KBBot - Keltner band bottom\u00b7 KBTop - Keltner band top",
    "snippet": "Data:\n    Example_ADX: ADX(...)",
    "sources": [
      "manual.txt:3176",
      "samples/bensdorp_book.rts:34"
    ]
  },
  {
    "name": "AEMA",
    "category": "function",
    "signature": "AEMA()",
    "description": "adaptive exponential moving average\u00b7 AESD - adaptive exponential standard deviation\u00b7 BBBotF - Bollinger band bottom as a function\u00b7 BBPctF - Bollinger band percent (%B) as a function\u00b7 BBTopF - Bollinger band top as a function\u00b7 BBTrendF - Bollinger band trend as a function\u00b7 BBWidthF - Bollinger band width as a function\u00b7 Correl - correlation of two series\u00b7 CorrelAvg - average correlation of a stock to a group of stocks\u00b7 CorrelMed - median correlation of a stock to a group of stocks\u00b7 CorrelMin - lowest correlation of a stock to a group of stocks\u00b7 CorrelMinSym - symbol of stock with lowest correlation to the current stock\u00b7 CorrelMax - highest correlation of a stock to a group of stocks\u00b7 CorrelMaxSym - symbol of stock with highest correlation to the current stock\u00b7 CountTrue - count of all bars for which expression was true\u00b7 DEMA - double exponential moving average\u00b7 EMA or XAvg - exponential moving average\u00b7 ESD - exponential standard deviation\u00b7 HMA or HAvg - Hull moving average\u00b7 Highest or HHV - highest value\u00b7 KAMA - Kaufman adaptive moving averate",
    "snippet": "Data:\n    Example_AEMA: AEMA(...)",
    "sources": [
      "manual.txt:3179"
    ]
  },
  {
    "name": "ATR",
    "category": "function",
    "signature": "ATR(length)",
    "description": "Average True Range volatility indicator.",
    "snippet": "Data:\n    Volatility14: ATR(14)",
    "sources": [
      "manual.txt:3016",
      "samples/bensdorp_book.rts:29",
      "samples/clenow_stocks_on_move.rts:29",
      "samples/clenow_stocks_on_move_dynamic.rts:29",
      "samples/futures_trend_follow_csi.rts:25",
      "samples/futures_trend_follow_simple.rts:18",
      "samples/futures_volume_rank.rts:16",
      "samples/gc_kelly.rts:21",
      "samples/goal_30_15.rts:23",
      "samples/goal_30_15_asx.rts:24",
      "samples/goal_30_15_tsx.rts:22",
      "samples/higher_lows.rts:22",
      "samples/mr_sample_common.rts:21",
      "samples/mr_sample_orders_alera.rts:20",
      "samples/mr_sample_orders_basket.rts:21",
      "samples/mr_sample_scan.rts:22",
      "samples/mr_sample_test_scan.rts:24",
      "samples/multi_filter_scan.rts:14",
      "samples/multi_moc_top_down.rts:38",
      "samples/simple_day_trade.rts:27",
      "samples/supertrend.rts:22",
      "samples/tf_dynamic_size.rts:27",
      "samples/tf_sell_half_at_1R.rts:19",
      "samples/trend_following_basics.rts:31",
      "samples/turtles.rts:27",
      "samples/two_accounts.rts:33",
      "samples/two_accounts_rebalance.rts:33",
      "samples/weekly_moc_asx.rts:37",
      "samples/weekly_moc_asx_daily_daily.rts:29",
      "samples/weekly_moc_asx_daily_weekly.rts:28"
    ]
  },
  {
    "name": "Abs",
    "category": "function",
    "signature": "Abs()",
    "description": "absolute value of a number\u00b7 ArcCos - determines which angle has the specified cosine\u00b7 ArcSin - determines which angle has the specified sine\u00b7 ArcTan - determines which angle has the specified tangent\u00b7 Assert - require a condition to be true for the script to continue\u00b7 Bound - limit the range of a value\u00b7 CDF - cumulative distribution function\u00b7 Combined - evaluate stats expression using combined strategy results\u00b7 Cosine - trigonometric cosine of a number of degrees\u00b7 Cross - value1[1] < value2[1] and value1 > value2",
    "snippet": "Data:\n    Example_Abs: Abs(...)",
    "sources": [
      "manual.txt:3184",
      "samples/clenow_stocks_on_move.rts:36",
      "samples/clenow_stocks_on_move_dynamic.rts:36",
      "samples/dalio_all_weather_maxdiff.rts:28",
      "samples/flipper.rts:45",
      "samples/supertrend.rts:33"
    ]
  },
  {
    "name": "AccountSize",
    "category": "function",
    "signature": "AccountSize()",
    "description": "starting capital amount\u00b7 AccountType - specifies the type of account being modeled\u00b7 AllowSameName - allow user-defined items to replace prior ones with the same name in the same section type\u00b7 AlwaysImport - causes data to be re-imported before a script runs in any mode\u00b7 BarSize - default test data timeframe\u00b7 CashIntPct - interest rate received for positive daily excess cash\u00b7 Currency - account base currency for multi-currency system models\u00b7 DataFile - test data file path\u00b7 DateDisplay - how dates are displayed in the user interface, scans, trade lists, etc.\u00b7 DateInput - how dates are parsed when day/month vs. month/day is ambiguous\u00b7 DateSym - symbol to use for \"Earliest\" or \"Latest\" in StartDate or EndDate",
    "snippet": "Data:\n    Example_AccountSize: AccountSize(...)",
    "sources": [
      "manual.txt:3163",
      "samples/actual_trades.rts:18",
      "samples/bensdorp_book.rts:13",
      "samples/clenow_stocks_on_move.rts:19",
      "samples/clenow_stocks_on_move_dynamic.rts:19",
      "samples/dividend_capture.rts:19",
      "samples/es_compare.rts:18",
      "samples/futures_trend_follow_csi.rts:15",
      "samples/futures_trend_follow_simple.rts:29",
      "samples/futures_volume_rank.rts:25",
      "samples/gc_kelly.rts:25",
      "samples/goal_30_15.rts:19",
      "samples/goal_30_15_asx.rts:18",
      "samples/goal_30_15_tsx.rts:18",
      "samples/hybrid_asset_allocation.rts:21",
      "samples/hybrid_asset_allocation_dynamic.rts:20",
      "samples/mhp_classic.rts:17",
      "samples/multi_moc_top_down.rts:18",
      "samples/ndx_plus_wtf_script.rts:20",
      "samples/ndx_plus_wtf_tradelists.rts:18",
      "samples/ndx_rotate.rts:20",
      "samples/ndx_rotate_factor_test.rts:11",
      "samples/ndx_rotate_make_tradelist.rts:19",
      "samples/ndx_rotate_rebalance.rts:11",
      "samples/ndx_rotate_weekly_reduce.rts:13",
      "samples/oc_all_actual.rts:21",
      "samples/optimal_diversity.rts:21",
      "samples/radge_bbo.rts:17",
      "samples/sector_etfs_breadth.rts:19",
      "samples/simple_day_trade.rts:18",
      "samples/spy_tlt_uis.rts:34",
      "samples/turtles.rts:16",
      "samples/two_accounts.rts:17",
      "samples/two_accounts_rebalance.rts:17",
      "samples/vigilant_asset_allocation.rts:18",
      "samples/vx_futures.rts:16",
      "samples/vxx_long_short.rts:14",
      "samples/weekly_trend_follow.rts:16",
      "samples/weekly_trend_follow_make_tradelist.rts:17"
    ]
  },
  {
    "name": "AdjClose",
    "category": "function",
    "signature": "AdjClose()",
    "description": "this field is the adjusted close priceRealClose - this field is the unadjusted (as-traded) close priceSplit - this field is the split ratio (real close / adjusted close)Dividend - this field is the dividend amount (should be 0 except on ex-dividend dates)Extra - this field is the value that can be referenced as ExtraNotesCSV field order must be specified for CSV Import to work. If CSV data files include header rows with column labels, these are simply ignored.Here is a partial example of a CSV import specification showing how this looks:",
    "snippet": "Data:\n    Example_AdjClose: AdjClose(...)",
    "sources": [
      "manual.txt:3485"
    ]
  },
  {
    "name": "Adjustment",
    "category": "function",
    "signature": "Adjustment()",
    "description": "Norgate data adjustment type\u00b7 CIIFamily - Norgate corresponding industry index family\u00b7 CIILevel - Norgate corresponding industry index level\u00b7 Classification - Scheme to use when querying Norgate for sector and industry\u00b7 Constituency - Norgate index constituency symbol list\u00b7 CSVDateFmt - CSV date format (M/D/Y vs. D/M/Y if ambiguous)\u00b7 CSVDelim - CSV column delimiter\u00b7 CSVFields - CSV field order (comma-separated list)\u00b7 CSVFile - CSV data file path for for single-file import\u00b7 CSVNumFmt - CSV number separator\u00b7 DataPath - CSV or MetaStock data folder location\u00b7 DataSource - data source name\u00b7 EndDate - latest end date\u00b7 EventListFile - event list file path\u00b7 ExcludeIf - import filter formula (exclude symbol if true)\u00b7 ExcludeList - excluded symbol list or file path\u00b7 Fundamentals - Norgate current fundamental item list\u00b7 KeepAdjusted - keep all bar values split-adjusted in the data file\u00b7 KeepNonIncluded - keep all symbols found in local file data path\u00b7 KeepRedundant - keep redundant symbols for the same company\u00b7 IncludeList - included symbol list or file path\u00b7 LogFile - path\\name of import log file to create\u00b7 NoWeekends - remove weekend bars\u00b7 Padding - type of padding (if any) to use for missing bars\u00b7 RemoveLatest - removes global latest bar from any symbol that has it\u00b7 SaveAs - path\\name of imported data (.RTD) file to save\u00b7 StartDate - earliest start date\u00b7 SymInfoFile - symbol information file path\u00b7 Update - Norgate data update request",
    "snippet": "Data:\n    Example_Adjustment: Adjustment(...)",
    "sources": [
      "manual.txt:3167",
      "samples/dividend_capture.rts:10",
      "samples/dividend_yield_series.rts:9",
      "samples/hybrid_asset_allocation.rts:7",
      "samples/hybrid_asset_allocation_dynamic.rts:7",
      "samples/import_norgate.rts:12",
      "samples/import_tiingo.rts:21",
      "samples/tf_dynamic_size.rts:3",
      "samples/yield_rank.rts:9"
    ]
  },
  {
    "name": "Allocation",
    "category": "function",
    "signature": "Allocation()",
    "description": "dollars allocated to this strategy\u00b7 AllowMissingBar - allow backtests to trade and orders to be generated after missing bars \u00b7 AllowNoVolume - allow entry and exit transactions on zero-volume days (typically padding bars)\u00b7 Ambiguity - assumption to use when sequence of entry/target/stop is unknowable\u00b7 BarSize - strategy-specific timeframe\u00b7 CalendarSym - symbol to use as the market date list for this strategy\u00b7 CashInOut - daily deposit and/or withdrawal specification by formula (excluded from backtest stats)\u00b7 CashList - CSV file with list of specific deposit and/or withdrawal amounts (excluded from backtest stats)\u00b7 Category - position category value for use with MaxCatExp, MaxCatInv, and MaxSameCat\u00b7 CloseSlip - slippage for at-close market transactions\u00b7 Commission - commission per entry or exit transaction in dollars\u00b7 Compounded - optionally overrides the automatically-determined S.Compounded setting\u00b7 DebugEntry - log output from a running test at EntrySetup evaluation time\u00b7 DebugExit - log output from a running test at ExitRule evaluation time\u00b7 DebugTargetStop - log output from running a test at ExitLimit / ExitStop evaluation time\u00b7 DynamicSizing - determines whether strategy operates in a special dynamic sizing mode\u00b7 EntryLimit - price to use when entering a position with a limit order\u00b7 EntryScore - ranking value for entry-time constraints (does not impact setup selection)\u00b7 EntrySetup - true/false condition for whether a stock is a setup this period\u00b7 EntrySkip - condition for whether to skip an entry (does not impact setup selection)\u00b7 EntryStop - price to use when entering a position with a stop order\u00b7 EntryTime - logical time of day at which positions are to be entered (typically next open)\u00b7 EntryTradeValue - calculates a value to store in T.ValueIn item in the trade list record for this entry\u00b7 ExitLimit - price to use when exiting a position with a limit order\u00b7 ExitLimitQty - share or contract quantity for partial limit-price exits\u00b7 ExitLimitTime - exit limit execution time\u00b7 ExitQty - share or contract quantity for partial at-market exits\u00b7 ExitRule - true/false condition for whether to exit a position\u00b7 ExitStop - price to use when exiting a position with a stop order\u00b7 ExitStopQty - share or contract quantity for partial stop-price exits\u00b7 ExitStopTime - exit stop execution time\u00b7 ExitTime - logical time of day at which positions are to be conditionally exited (typically next",
    "snippet": "Data:\n    Example_Allocation: Allocation(...)",
    "sources": [
      "manual.txt:3169",
      "samples/combined.rts:31",
      "samples/combined_multi_bar_size.rts:30",
      "samples/combined_rebalance.rts:17",
      "samples/dividend_capture.rts:43",
      "samples/futures_volume_rank.rts:47",
      "samples/hybrid_asset_allocation.rts:2",
      "samples/hybrid_asset_allocation_dynamic.rts:2",
      "samples/keller_baa.rts:2",
      "samples/mr_sample_common.rts:39",
      "samples/mr_sample_orders_alera.rts:37",
      "samples/mr_sample_orders_basket.rts:38",
      "samples/mr_sample_test_scan.rts:42",
      "samples/mr_sample_tracking_alloc.rts:3",
      "samples/radge_bbo.rts:25",
      "samples/two_accounts.rts:55",
      "samples/two_accounts_rebalance.rts:55",
      "samples/vigilant_asset_allocation.rts:2"
    ]
  },
  {
    "name": "Arg1",
    "category": "function",
    "signature": "Arg1()",
    "description": "Arg9",
    "snippet": "Data:\n    Example_Arg1: Arg1(...)",
    "sources": [
      "manual.txt:663",
      "samples/combined_rebalance.rts:18"
    ]
  },
  {
    "name": "Avg",
    "category": "function",
    "signature": "Avg(C, len)",
    "description": "(mult * StdDev(C, len)).To calculate BBBot for something other than Close use BBBotF.This function supports one-pass calculation when used in the Data Section with a non-variable count.",
    "snippet": "Data:\n    Example_Avg: Avg(...)",
    "sources": [
      "manual.txt:3373",
      "samples/bensdorp_book.rts:20",
      "samples/breadth.rts:15",
      "samples/ehlers_windows.rts:28",
      "samples/gics_indu_rank.rts:18",
      "samples/keller_baa.rts:30",
      "samples/mhp_classic.rts:20",
      "samples/mr_sample_common.rts:24",
      "samples/mr_sample_orders_alera.rts:23",
      "samples/mr_sample_orders_basket.rts:24",
      "samples/mr_sample_scan.rts:25",
      "samples/mr_sample_test_scan.rts:27",
      "samples/mr_sample_tracking.rts:10",
      "samples/mr_sample_tracking_alloc.rts:17",
      "samples/multi_filter_scan.rts:17",
      "samples/ndx_plus_wtf_script.rts:24",
      "samples/ndx_rotate.rts:23",
      "samples/ndx_rotate_make_tradelist.rts:25",
      "samples/ndx_rotate_rebalance.rts:18",
      "samples/ndx_rotate_weekly_reduce.rts:18",
      "samples/Sample1.rts:19",
      "samples/Sample2.rts:16",
      "samples/Sample2a.rts:17",
      "samples/sample_scan.rts:14",
      "samples/sector_etfs_breadth.rts:41",
      "samples/spy_tlt_uis.rts:17",
      "samples/trend_following_basics.rts:34",
      "samples/turtles.rts:30",
      "samples/two_accounts.rts:26",
      "samples/two_accounts_rebalance.rts:26"
    ]
  },
  {
    "name": "BBTop",
    "category": "function",
    "signature": "BBTop(len, mult)",
    "description": "BBBot(len, mult)).The return value is:\u00b7 >1 if close is above the top band\u00b7 1 if close equals the top band\u00b7 0.5 if close equals the moving average\u00b7 0 if close equals the bottom band\u00b7 <0 if close is below the bottom bandTo calculate BBPct for something other than Close use BBPctF.This function supports one-pass calculation when used in the Data Section with a non-variable count.",
    "snippet": "Data:\n    Example_BBTop: BBTop(...)",
    "sources": [
      "manual.txt:3378",
      "samples/radge_bbo.rts:31"
    ]
  },
  {
    "name": "Back",
    "category": "function",
    "signature": "Back()",
    "description": "Adjust\" tabc. Configure your rolling criteria, timing, etc. (above is just an example -- do it however you prefer)d. Type a symbol root or click on Market Specs to select one or moree. Click OK",
    "snippet": "Data:\n    Example_Back: Back(...)",
    "sources": [
      "manual.txt:2594",
      "samples/combined.rts:66",
      "samples/combined_multi_bar_size.rts:63",
      "samples/combined_rebalance.rts:67",
      "samples/futures_trend_follow_csi.rts:2",
      "samples/futures_trend_follow_simple.rts:2",
      "samples/ndx_plus_wtf_tradelists.rts:2",
      "samples/oc_all_actual.rts:2",
      "samples/sector_etfs_breadth.rts:22",
      "samples/weekly_moc_asx_daily_daily.rts:32"
    ]
  },
  {
    "name": "Bar",
    "category": "function",
    "signature": "Bar()",
    "description": "Size-Specific Items",
    "snippet": "Data:\n    Example_Bar: Bar(...)",
    "sources": [
      "manual.txt:371",
      "samples/combined.rts:3",
      "samples/combined_multi_bar_size.rts:2",
      "samples/dividend_capture.rts:9",
      "samples/djia_earnings.rts:5",
      "samples/futures_calendar_spread.rts:15",
      "samples/import_norgate.rts:5",
      "samples/mr_sample_scan.rts:15",
      "samples/trend_following_basics.rts:21",
      "samples/weekly_moc_asx.rts:4",
      "samples/weekly_moc_asx_daily_daily.rts:22",
      "samples/weekly_moc_asx_daily_weekly.rts:22"
    ]
  },
  {
    "name": "BarDate",
    "category": "function",
    "signature": "BarDate()",
    "description": "date of the current bar\u00b7 BarNum - number of this bar from start of data\u00b7 BarsLeft - number of bars remaining before the end of data\u00b7 Close or C - bar close price\u00b7 Day - day number\u00b7 DayOfWeek - day of week (Monday is 1)",
    "snippet": "Data:\n    Example_BarDate: BarDate(...)",
    "sources": [
      "manual.txt:3173",
      "samples/cl_term_structure.rts:14",
      "samples/futures_calendar_spread.rts:17",
      "samples/ndx_plus_wtf_script.rts:64",
      "samples/opex_and_vxex.rts:21",
      "samples/trend_following_basics.rts:82",
      "samples/vx_term_structure.rts:20",
      "samples/weekly_trend_follow.rts:44",
      "samples/weekly_trend_follow_make_tradelist.rts:48"
    ]
  },
  {
    "name": "BarsHeld",
    "category": "function",
    "signature": "BarsHeld()",
    "description": "age of current position in bars\u00b7 Category - category specified for current position\u00b7 EntryDate - date on which current position was entered\u00b7 FillFraction - equity fraction of current position at time of fill\u00b7 FillPrice - entry fill price of current position\u00b7 FillPriceAvg - average fill price of current position if multiple positions\u00b7 FillPriceMax - highest fill price of current position if multiple positions\u00b7 FillPriceMin - lowest fill price of current position if multiple positions\u00b7 FillQty - shares or contracts in current position at time of entry\u00b7 FillValue - dollar value of current position at time of fill\u00b7 FxRatio - foreign exchange currency ratio for this position on this date\u00b7 IsExit - whether the formula being evaluated pertains to a position being exited\u00b7 IsOrder - whether the current stock is a setup that was not skipped today\u00b7 IsSetup - whether the current is a setup today\u00b7 OrderRank - top-down order rank number for this position's entry across all strategies\u00b7 OrderSum - evaluates a formula for each non-skipped setup and returns the sum values\u00b7 PrevExitLimit - previous exit limit price for use in trailing target calculations\u00b7 PrevExitStop - previous exit stop price for use in trailing stop calculations\u00b7 PositionSum - evaluates a formula for each open position and returns the sum of values\u00b7 SetupRank - rank number by SetupScore for this position when it was entered",
    "snippet": "Data:\n    Example_BarsHeld: BarsHeld(...)",
    "sources": [
      "manual.txt:3192",
      "samples/bensdorp_book.rts:102",
      "samples/futures_trend_follow_csi.rts:49",
      "samples/futures_trend_follow_simple.rts:37",
      "samples/goal_30_15.rts:61",
      "samples/goal_30_15_asx.rts:62",
      "samples/goal_30_15_tsx.rts:60",
      "samples/higher_lows.rts:48",
      "samples/keltner_pullback.rts:53",
      "samples/mhp_classic.rts:43",
      "samples/mr_sample.rts:18",
      "samples/mr_sample_debug.rts:22",
      "samples/mr_sample_long_only.rts:21",
      "samples/mr_sample_orders.rts:27",
      "samples/mr_sample_orders_alera.rts:49",
      "samples/mr_sample_orders_basket.rts:50",
      "samples/mr_sample_short_only.rts:19",
      "samples/mr_sample_test_scan.rts:53",
      "samples/mr_sample_tracking.rts:20",
      "samples/mr_sample_tracking_alloc.rts:13",
      "samples/ndx_plus_wtf_script.rts:49",
      "samples/oex_tf_auto_track.rts:78",
      "samples/oex_tf_fresh_signal.rts:27",
      "samples/oex_tf_top_down.rts:51",
      "samples/scale_in.rts:16",
      "samples/tf_dynamic_size.rts:33",
      "samples/tf_sell_half_at_1R.rts:28",
      "samples/trend_following_basics.rts:38",
      "samples/turtles.rts:69",
      "samples/two_accounts.rts:97",
      "samples/two_accounts_rebalance.rts:97",
      "samples/weekly_trend_follow.rts:30",
      "samples/weekly_trend_follow_make_tradelist.rts:34"
    ]
  },
  {
    "name": "Benchmark",
    "category": "function",
    "signature": "Benchmark()",
    "description": "the strategy is a Benchmark\u00b7 StatsGroup - the strategy is a StatsGroup or Combined\u00b7 Strategy - the strategy is a regular Strategy",
    "snippet": "Data:\n    Example_Benchmark: Benchmark(...)",
    "sources": [
      "manual.txt:3305",
      "samples/cii_rotate.rts:65",
      "samples/clenow_stocks_on_move.rts:70",
      "samples/clenow_stocks_on_move_dynamic.rts:62",
      "samples/es_compare.rts:32",
      "samples/futures_volume_rank.rts:51",
      "samples/hybrid_asset_allocation.rts:12",
      "samples/hybrid_asset_allocation_dynamic.rts:11",
      "samples/mr_sample_benchmark.rts:1",
      "samples/mr_sample_tracking.rts:2",
      "samples/mr_sample_tracking_alloc.rts:1",
      "samples/ndx_rotate_weekly_reduce.rts:3",
      "samples/oex_tf_auto_track.rts:33",
      "samples/oex_tf_fresh_signal.rts:23",
      "samples/optimal_diversity.rts:44",
      "samples/radge_bbo.rts:23",
      "samples/scale_in.rts:38",
      "samples/sector_etfs.rts:8",
      "samples/sector_etfs_breadth.rts:8",
      "samples/spy_tlt_uis.rts:69",
      "samples/tf_dynamic_size.rts:6",
      "samples/trend_following_basics.rts:75",
      "samples/turtles.rts:19",
      "samples/vigilant_asset_allocation.rts:9"
    ]
  },
  {
    "name": "Bound",
    "category": "function",
    "signature": "Bound(value, valmin, valmax)",
    "description": "valmin) / (valmax - valmin) * (scalemax - scalemin) + scaleminExampleNormalizedTurnover: Rescale(Close * Volume, 1e5, 1e12, 1, 10, 1)",
    "snippet": "Data:\n    Example_Bound: Bound(...)",
    "sources": [
      "manual.txt:4069",
      "samples/sctr.rts:20"
    ]
  },
  {
    "name": "CATM",
    "category": "function",
    "signature": "CATM()",
    "description": "202105, assuming that the trade occurred before that date.The SymChangeList file has two required and two optional columns: OldSymbol, NewSymbol, ChangeDate, Exchange. It doesn't matter what the columns are called or whether there's a header row.The ChangeDate column is optional. If supplied, RealTest will only apply the symbol change to imported trades which occurred prior to that date.The Exchange column is optional (ChangeDate must also be provided but can be left blank). If supplied it overrides the exchange for this symbol when orders are generated.Here is an example of a SymChanges.csv file used for trade lists:",
    "snippet": "Data:\n    Example_CATM: CATM(...)",
    "sources": [
      "manual.txt:4387"
    ]
  },
  {
    "name": "CII",
    "category": "function",
    "signature": "CII()",
    "description": "corresponding industry index symbol string\u00b7 ?Currency - currency in which security trades\u00b7 ?Domicile - country name string\u00b7 ?Exchange - exchange name string\u00b7 ?EconSect - economic sector name string\u00b7 ?EquityType - security equity type (Common, Unit, etc.)\u00b7 ?IndGroup - industry group name string\u00b7 ?Industry - industry name string\u00b7 ?ListingType - security listing type (Primary, ADR, etc.)\u00b7 ?Name - security/company name string\u00b7 ?ReportingCurrency - currency in which security reports earnings\u00b7 ?Sector - business sector name string\u00b7 ?Symbol - security symbol string\u00b7 ?Type - security type string\u00b7 InfoID - Norgate Asset ID for this symbol",
    "snippet": "Data:\n    Example_CII: CII(...)",
    "sources": [
      "manual.txt:3189",
      "samples/cii_rotate.rts:1",
      "samples/industry_indices.rts:37"
    ]
  },
  {
    "name": "CategoryCross",
    "category": "function",
    "signature": "CategoryCross()",
    "description": "Sectional FunctionsDescription",
    "snippet": "Data:\n    Example_CategoryCross: CategoryCross(...)",
    "sources": [
      "manual.txt:3210"
    ]
  },
  {
    "name": "CategoryGeneral",
    "category": "function",
    "signature": "CategoryGeneral()",
    "description": "Purpose FunctionsDescriptionAbsolute Value of a numberSyntaxAbs(value)Parametersvalue - formula",
    "snippet": "Data:\n    Example_CategoryGeneral: CategoryGeneral(...)",
    "sources": [
      "manual.txt:3313"
    ]
  },
  {
    "name": "CategoryMulti",
    "category": "function",
    "signature": "CategoryMulti()",
    "description": "Bar FunctionsDescriptionAdaptive Exponential Moving AverageSyntaxAEMA(expr, factor)Parametersexpr - data series formulafactor - weighting factor formulaNotesAn AEMA is an EMA that supports a variable weighting factor. In other words, an EMA is an AEMA with a constant weight.The count of an EMA becomes a weight factor using the formula factor = 2 / (count + 1).Conversely the factor of an AEMA can be converted to a EMA count using count = (2 - factor) / factor.In both cases the average series is created by repeatedly calculating newAverage = oldAverage + factor * (newValue - oldAverage).The key difference between the functions is that while the EMA count is evaluated only once before the series of values is calculated, the AEMA factor is reevaluated for every bar of the series, thus making it adaptive.This function supports one-pass calculation when used in the Data Section with a non-variable count.",
    "snippet": "Data:\n    Example_CategoryMulti: CategoryMulti(...)",
    "sources": [
      "manual.txt:3325"
    ]
  },
  {
    "name": "ChoicesInstrument",
    "category": "function",
    "signature": "ChoicesInstrument()",
    "description": "commission values are interpreted as being in the currency of the instrument being traded (default)Account - commission values are interpreted as being in the base currency of the accountNotesSome brokers, including IB (Interactive Brokers), charge trade commissions in the currency of the instrument being traded. Other brokers may charge commissions in the account's base currency. This setting lets you tell RealTest which way your broker does it.CommCurrency also determines how commission values in Imported Trade Lists are interpreted.See also Testing Multi-Currency Strategies.",
    "snippet": "Data:\n    Example_ChoicesInstrument: ChoicesInstrument(...)",
    "sources": [
      "manual.txt:3441"
    ]
  },
  {
    "name": "Close",
    "category": "function",
    "signature": "Close()",
    "description": "BBBot(len, mult)) / (BBTop(len, mult) - BBBot(len, mult)).The return value is:\u00b7 >1 if close is above the top band\u00b7 1 if close equals the top band\u00b7 0.5 if close equals the moving average\u00b7 0 if close equals the bottom band\u00b7 <0 if close is below the bottom bandTo calculate BBPct for something other than Close use BBPctF.This function supports one-pass calculation when used in the Data Section with a non-variable count.",
    "snippet": "Data:\n    Example_Close: Close(...)",
    "sources": [
      "manual.txt:3378",
      "samples/cl_term_structure.rts:47",
      "samples/clenow_stocks_on_move.rts:51",
      "samples/dalio_all_weather_maxdiff.rts:26",
      "samples/ehlers_windows.rts:26",
      "samples/hybrid_asset_allocation_dynamic.rts:42",
      "samples/import_csv.rts:8",
      "samples/import_multi.rts:22",
      "samples/import_tiingo.rts:6",
      "samples/mr_sample_test_scan.rts:76",
      "samples/stockbee_mm.rts:52",
      "samples/vigilant_asset_allocation.rts:28",
      "samples/weekly_moc_asx_daily_daily.rts:46"
    ]
  },
  {
    "name": "Constant",
    "category": "function",
    "signature": "Constant()",
    "description": "a literal date Latest - always use the most recent available date",
    "snippet": "Data:\n    Example_Constant: Constant(...)",
    "sources": [
      "manual.txt:3561",
      "samples/clenow_stocks_on_move.rts:55"
    ]
  },
  {
    "name": "Cross",
    "category": "function",
    "signature": "Cross()",
    "description": "Sectional Functions",
    "snippet": "Data:\n    Example_Cross: Cross(...)",
    "sources": [
      "manual.txt:428"
    ]
  },
  {
    "name": "CrossesAbove",
    "category": "function",
    "signature": "CrossesAbove(series1, series2)",
    "description": "True when series1 crosses from below to above series2.",
    "snippet": "Strategy: Trend\n    EntrySetup: CrossesAbove(C, MA(C, 50))",
    "sources": [
      "manual.txt:N/A"
    ]
  },
  {
    "name": "CrossesBelow",
    "category": "function",
    "signature": "CrossesBelow(series1, series2)",
    "description": "True when series1 crosses from above to below series2.",
    "snippet": "ExitRule: CrossesBelow(C, MA(C, 90))",
    "sources": [
      "manual.txt:N/A"
    ]
  },
  {
    "name": "DataType",
    "category": "function",
    "signature": "DataType()",
    "description": "causes value to be treated as a specific type (price vs. volume)\u00b7 Date - get the numeric date for a given year, month, day\u00b7 DateBars - count of bars since (or until) a specific date\u00b7 Days - number of calendar days between two dates\u00b7 DebugEval - stop script execution and log the details of a strategy formula's evaluation when a condition is met\u00b7 Exp - exponential function (e^x)\u00b7 Extern - evaluate expression for a different stock/contract or strategy\u00b7 ICDF - inverse cumulative distribution function\u00b7 IF - conditional branch\u00b7 InSet - whether a value is in a specific set of values\u00b7 IsNan - true if value can't be evaluated, false if it can\u00b7 Item - refer to a Data or Library item by name\u00b7 Log - natural logarithm of a number\u00b7 Logit - inverse logistic function\u00b7 Max - largest of a group of values\u00b7 MaxN - Nth largest of a group of values\u00b7 Min - smallest of a group of values\u00b7 MinN - Nth smallest of a group of values\u00b7 NoNan - evaluate an expression with no possibility of a nan (not a number) result\u00b7 NthOfMonth - whether current bar date is nth specific weekday of current month\u00b7 Random - random number from min to max rounded to step\u00b7 Reason - return both a value and a string for use in e.g. ExitLimit\u00b7 Rescale - map a value from one scale to another\u00b7 Round - round value to nearest step\u00b7 Select - multi-part conditional branch\u00b7 Sign - sign of a number (1 or -1)\u00b7 Sine - trigonometric sine of a number of degrees\u00b7 Sqr - square root of a number\u00b7 StratRef - find the number of a given strategy, and/or allow dynamic Extern strategy references\u00b7 Switch - value switch function\u00b7 SymRef - find the number of a given symbol, and/or allow dynamic Extern symbol references\u00b7 Tangent - trigonometric tangent of a number of degrees\u00b7 TanH - hyberbolic tangent of a number\u00b7 TargetPrice - calculate the value of tomorrow's close that would cause an indicator to reach a specific level\u00b7 Text - literal text for scan output, with optional embedded numeric values\u00b7 This - anchored term in multi-bar function\u00b7 Top - top N digits of a number",
    "snippet": "Data:\n    Example_DataType: DataType(...)",
    "sources": [
      "manual.txt:3185"
    ]
  },
  {
    "name": "DayOfYear",
    "category": "function",
    "signature": "DayOfYear()",
    "description": "day of year\u00b7 Dividend - dividend amount ($/share)\u00b7 EndOfMonth - true if next bar will end in a different month than this one\u00b7 EndOfQuarter - true if next bar will end in a different quarter than this one\u00b7 EndOfWeek - true if next bar will end in a different week than this one\u00b7 EndOfYear - true if next bar will end in a different year than this one\u00b7 Event - user-defined value from Event List file\u00b7 Extra - bar extra value from CSV import\u00b7 FunBar - relative bar number within a multi-bar function calculation\u00b7 High or H - bar high price\u00b7 InXXX - index constituency flag (Norgate) as set during import\u00b7 Low or L - bar low price\u00b7 Month - month number\u00b7 NextOpen - next bar open price\u00b7 Open or O - bar open price\u00b7 Range or R - bar intraday range\u00b7 Split - bar split factor (unadjusted / adjusted)\u00b7 TrueRange or TR - bar range including prior close\u00b7 Volume or V - bar volume\u00b7 Week - week of year\u00b7 Year - year number",
    "snippet": "Data:\n    Example_DayOfYear: DayOfYear(...)",
    "sources": [
      "manual.txt:3174"
    ]
  },
  {
    "name": "DaysPerYear",
    "category": "function",
    "signature": "DaysPerYear()",
    "description": "number of market days per year for stats purposes\u00b7 EndDate - last date of test\u00b7 EndOfTestExits - controls whether open positions are exited at the end of a backtest\u00b7 ExchangeMap - details about specific exchanges for which you may want to generate orders\u00b7 HolidayList - list of holidays (only required for order generation)\u00b7 KeepTrades - types of trades to store in each results record\u00b7 MarginIntPct - interest rate charged for negative daily excess cash (margin loan)\u00b7 NumBars - number of market dates to test\u00b7 OptimizeSettings - various settings applying to Optimize Mode\u00b7 OrderClerkFolder - path of folder to use with OrderClerk\u00b7 OrdersComment - string to add to the top of the order list when orders are generated\u00b7 OrdersFile - path\\name of order list file to generate\u00b7 OrdersLiveData - allows order generation for \"ThisClose\" entry and exit times\u00b7 OrdersMode - specifies the format of generated orders\u00b7 OrdersNetLiq - path\\name of a text file containing the current live Net Liquidation Value of a brokerage account\u00b7 OrdersTemplate - path\\name of CSV order list template file\u00b7 RandomSeed - provides a way to use the same sequence of random numbers every time a script is run\u00b7 ReportContent - specify which content items to include in summary reports\u00b7 ReportsFolder - path of folder in which Test Summary Reports are create\u00b7 ResultsFile - path\\name of RTR file to open or create before running a test\u00b7 RiskFreeRateSym - symbol of data series to store in the test statistics for later use when calculating Sharpe\u00b7 SaveChartsTo - path of folder in which to automatically save a chart for every row of the scan\u00b7 SavePositionsAs - path\\name of CSV file to create at end of a test to list open positions\u00b7 SaveScanAs - path\\name of CSV file to create and write scan output to\u00b7 SaveStatsAs - path\\name of CSV file to create and write stats details to\u00b7 SaveTestListAs - path\\name of CSV file to create with the list of test results as they appear in the results window\u00b7 SaveTradesAs - path\\name of CSV file to create and write the trade list to\u00b7 SaveTradesType - format to use for SaveTradesAs output file\u00b7 ScanNoDefCols - allows the default Date and Symbol columns to be optionally omitted\u00b7 ScanNoHeader - allows creation of a CSV file with no header row\u00b7 ScanNoWindow - allows scanning directly to CSV without displaying the output in a window\u00b7 SkipTestIf - allows tests to be skipped in multi-parameter optimizations (e.g. useless parameter combinations)\u00b7 StartDate - first date of test\u00b7 SymChangeList - path\\name of CSV file containing list of symbol changes to use when processing imported trades\u00b7 TestName - give the test a name",
    "snippet": "Data:\n    Example_DaysPerYear: DaysPerYear(...)",
    "sources": [
      "manual.txt:3164"
    ]
  },
  {
    "name": "Double",
    "category": "function",
    "signature": "Double()",
    "description": "click on the row of stats in the Results window to open the stats graphs.The Daily Stats Graph shows the equity curve:",
    "snippet": "Data:\n    Example_Double: Double(...)",
    "sources": [
      "manual.txt:2254",
      "samples/dividend_yield_series.rts:27"
    ]
  },
  {
    "name": "EMA",
    "category": "function",
    "signature": "EMA(C,len1)",
    "description": "EMA(C,len2)\u00b7 MACDH - MACDH = MACD(len1,len2) - MACDS(len1, len2, len3)\u00b7 MACDS - MACDS = MACD(len1,len2) - EMA(MACD(len1,len2),len3)\u00b7 MDI - Wilder's negative directional index\u00b7 OBV - on balance volume\u00b7 PDI - Wilder's positive directional index\u00b7 RRSI - reverse RSI (price required for RSI to reach level)\u00b7 RSI - Wilder's relative strength index\u00b7 SAR - Wilder's parabolic stop and reverse\u00b7 SigSpike - Grimes' Sigma Spike indicator\u00b7 STOC - stochastics\u00b7 SuperTrend - Olivier Seban's SuperTrend indicator",
    "snippet": "Data:\n    Example_EMA: EMA(...)",
    "sources": [
      "manual.txt:3177",
      "samples/goal_30_15.rts:26",
      "samples/goal_30_15_asx.rts:27",
      "samples/goal_30_15_tsx.rts:25",
      "samples/mr_sample_common.rts:22",
      "samples/mr_sample_orders_alera.rts:21",
      "samples/mr_sample_orders_basket.rts:22",
      "samples/mr_sample_scan.rts:23",
      "samples/mr_sample_test_scan.rts:25",
      "samples/multi_filter_scan.rts:15",
      "samples/multi_moc_top_down.rts:40",
      "samples/sctr.rts:8",
      "samples/two_accounts.rts:34",
      "samples/two_accounts_rebalance.rts:34"
    ]
  },
  {
    "name": "EconomicSector",
    "category": "function",
    "signature": "EconomicSector()",
    "description": "use economic sector indicesIndustryGroup - use industry group indicesSpecificIndustry - use specific industry indicesSubIndustry - use sub-industry indicesNotesUsed in conjunction with CIIFamily to add corresponding index references to each import stock symbol.Causes the relevant index symbols to be automatically added to the import as well.Automatically-added index symbols are placed in virtual ListNum = 99.The specific industry index for the current symbol can be referenced using Extern(&99, expression).",
    "snippet": "Data:\n    Example_EconomicSector: EconomicSector(...)",
    "sources": [
      "manual.txt:3427"
    ]
  },
  {
    "name": "EndOfMonth",
    "category": "function",
    "signature": "EndOfMonth",
    "description": "Condition true on the last trading day of the month.",
    "snippet": "Strategy: AllWeather\n    EntrySetup: EndOfMonth",
    "sources": [
      "manual.txt:926",
      "samples/annual_taxes.rts:11",
      "samples/cii_rotate.rts:62",
      "samples/combined.rts:53",
      "samples/combined_multi_bar_size.rts:3",
      "samples/combined_rebalance.rts:18",
      "samples/dalio_all_weather.rts:26",
      "samples/dalio_all_weather_maxdiff.rts:33",
      "samples/management_fees.rts:11",
      "samples/ndx_plus_wtf_script.rts:45",
      "samples/ndx_rotate.rts:37",
      "samples/ndx_rotate_factor_test.rts:57",
      "samples/ndx_rotate_make_tradelist.rts:39",
      "samples/ndx_rotate_rebalance.rts:33",
      "samples/ndx_rotate_weekly_reduce.rts:33",
      "samples/sector_etfs.rts:29",
      "samples/sector_etfs_breadth.rts:47",
      "samples/spy_tlt_uis.rts:54",
      "samples/two_accounts.rts:78",
      "samples/two_accounts_rebalance.rts:78"
    ]
  },
  {
    "name": "EntryScore",
    "category": "strategy_statement",
    "signature": "EntryScore: numeric_expression",
    "description": "Ranking score applied after EntrySetup is true.",
    "snippet": "Strategy: Rotation\n    EntryScore: ROC(C, 63)",
    "sources": [
      "samples/turtles.rts:89"
    ]
  },
  {
    "name": "EntrySetup",
    "category": "strategy_statement",
    "signature": "EntrySetup: condition",
    "description": "Boolean condition required for entries.",
    "snippet": "Strategy: Momentum\n    EntrySetup: C > MA(C, 200)",
    "sources": [
      "manual.txt:2923",
      "samples/anchored_vwap.rts:34",
      "samples/bensdorp_book.rts:100",
      "samples/cii_rotate.rts:62",
      "samples/clenow_stocks_on_move.rts:64",
      "samples/clenow_stocks_on_move_dynamic.rts:64",
      "samples/combined.rts:33",
      "samples/combined_multi_bar_size.rts:32",
      "samples/combined_rebalance.rts:28",
      "samples/dalio_all_weather.rts:26",
      "samples/dalio_all_weather_maxdiff.rts:33",
      "samples/dividend_capture.rts:46",
      "samples/es_compare.rts:29",
      "samples/flipper.rts:40",
      "samples/futures_trend_follow_csi.rts:48",
      "samples/futures_trend_follow_simple.rts:34",
      "samples/futures_volume_rank.rts:53",
      "samples/gc_kelly.rts:33",
      "samples/goal_30_15.rts:59",
      "samples/goal_30_15_asx.rts:60",
      "samples/goal_30_15_tsx.rts:58",
      "samples/higher_lows.rts:46",
      "samples/hybrid_asset_allocation.rts:45",
      "samples/hybrid_asset_allocation_dynamic.rts:48",
      "samples/keller_baa.rts:37",
      "samples/keltner_pullback.rts:50",
      "samples/martingale.rts:24",
      "samples/mhp_classic.rts:42",
      "samples/mr_sample.rts:15",
      "samples/mr_sample_benchmark.rts:6",
      "samples/mr_sample_debug.rts:31",
      "samples/mr_sample_hedged.rts:12",
      "samples/mr_sample_long_only.rts:18",
      "samples/mr_sample_orders.rts:24",
      "samples/mr_sample_orders_alera.rts:46",
      "samples/mr_sample_orders_basket.rts:47",
      "samples/mr_sample_short_only.rts:16",
      "samples/mr_sample_test_scan.rts:62",
      "samples/mr_sample_tracking.rts:17",
      "samples/mr_sample_tracking_alloc.rts:10",
      "samples/multi_moc_top_down.rts:84",
      "samples/ndx_plus_wtf_script.rts:45",
      "samples/ndx_rotate.rts:37",
      "samples/ndx_rotate_factor_test.rts:57",
      "samples/ndx_rotate_make_tradelist.rts:39",
      "samples/ndx_rotate_weekly_reduce.rts:33",
      "samples/oex_tf_auto_track.rts:76",
      "samples/oex_tf_fresh_signal.rts:26",
      "samples/oex_tf_top_down.rts:49",
      "samples/optimal_diversity.rts:38",
      "samples/radge_bbo.rts:26",
      "samples/Sample1.rts:19",
      "samples/Sample2.rts:16",
      "samples/Sample2a.rts:17",
      "samples/scale_in.rts:24",
      "samples/sector_etfs.rts:41",
      "samples/sector_etfs_breadth.rts:63",
      "samples/simple_day_trade.rts:41",
      "samples/spy_tlt_uis.rts:58",
      "samples/supertrend.rts:47",
      "samples/tf_dynamic_size.rts:39",
      "samples/tf_sell_half_at_1R.rts:27",
      "samples/trend_following_basics.rts:72",
      "samples/turtles.rts:66",
      "samples/two_accounts.rts:67",
      "samples/two_accounts_rebalance.rts:67",
      "samples/vigilant_asset_allocation.rts:40",
      "samples/vx_futures.rts:52",
      "samples/vxx_long_short.rts:33",
      "samples/weekly_moc_asx.rts:47",
      "samples/weekly_moc_asx_daily_daily.rts:44",
      "samples/weekly_moc_asx_daily_weekly.rts:39",
      "samples/weekly_trend_follow.rts:37",
      "samples/weekly_trend_follow_make_tradelist.rts:41"
    ]
  },
  {
    "name": "EntrySkip",
    "category": "strategy_statement",
    "signature": "EntrySkip: condition",
    "description": "Skips new entries while condition remains true.",
    "snippet": "Strategy: Guarded\n    EntrySkip: MarketDrawdown > 0.15",
    "sources": [
      "manual.txt:2724",
      "samples/turtles.rts:90"
    ]
  },
  {
    "name": "European",
    "category": "function",
    "signature": "European()",
    "description": "format \"CSV\" files to be imported by RealTest. When you add CSVNumFmt: Comma to your CSV Import definition, semicolon becomes the default CSVDelim and comma is used as the decimal separator.Such files sometimes use point as the date field separator, and RealTest also supports this format automatically. See also CSVDateFmt for D/M/Y date field order specification.",
    "snippet": "Data:\n    Example_European: European(...)",
    "sources": [
      "manual.txt:3491"
    ]
  },
  {
    "name": "Excel",
    "category": "function",
    "signature": "Excel()",
    "description": "style date definition string M/d/yyDateInput DMY or MDY MDYEndDate date settings panelExchangeMap folder path and file name noneHolidayList folder path and file name noneKeepTrades see topic for choices settings panelMarginIntPct number noneNumBars number settings panelOptimizeSettings various variousOrderClerkFolder folder path noneOrdersFile folder path and file name noneOrdersFreeCash folder path and file name noneOrdersLiveData True or False FalseOrdersMktAsLmtPct number noneOrdersMode see topic for choices TextOrdersNetLiq folder path and file name noneOrdersTemplate folder path and file name noneOrdersUseQtyIn True or False FalseRandomSeed number noneReportsFolder folder path none",
    "snippet": "Data:\n    Example_Excel: Excel(...)",
    "sources": [
      "manual.txt:3058"
    ]
  },
  {
    "name": "ExitRule",
    "category": "strategy_statement",
    "signature": "ExitRule: condition",
    "description": "Exit trigger for positions.",
    "snippet": "Strategy: Momentum\n    ExitRule: C < MA(C, 100)",
    "sources": [
      "manual.txt:3636",
      "samples/anchored_vwap.rts:35",
      "samples/bensdorp_book.rts:113",
      "samples/cii_rotate.rts:63",
      "samples/clenow_stocks_on_move.rts:65",
      "samples/clenow_stocks_on_move_dynamic.rts:65",
      "samples/combined.rts:36",
      "samples/combined_multi_bar_size.rts:35",
      "samples/combined_rebalance.rts:31",
      "samples/dalio_all_weather.rts:27",
      "samples/dalio_all_weather_maxdiff.rts:34",
      "samples/dividend_capture.rts:48",
      "samples/es_compare.rts:30",
      "samples/flipper.rts:42",
      "samples/futures_trend_follow_simple.rts:37",
      "samples/futures_volume_rank.rts:54",
      "samples/goal_30_15.rts:61",
      "samples/goal_30_15_asx.rts:62",
      "samples/goal_30_15_tsx.rts:60",
      "samples/hybrid_asset_allocation.rts:46",
      "samples/hybrid_asset_allocation_dynamic.rts:49",
      "samples/keller_baa.rts:42",
      "samples/keltner_pullback.rts:53",
      "samples/mhp_classic.rts:44",
      "samples/mr_sample.rts:18",
      "samples/mr_sample_benchmark.rts:7",
      "samples/mr_sample_debug.rts:34",
      "samples/mr_sample_hedged.rts:13",
      "samples/mr_sample_long_only.rts:21",
      "samples/mr_sample_orders.rts:27",
      "samples/mr_sample_orders_alera.rts:49",
      "samples/mr_sample_orders_basket.rts:50",
      "samples/mr_sample_short_only.rts:19",
      "samples/mr_sample_test_scan.rts:65",
      "samples/mr_sample_tracking.rts:20",
      "samples/mr_sample_tracking_alloc.rts:13",
      "samples/multi_moc_top_down.rts:72",
      "samples/ndx_plus_wtf_script.rts:46",
      "samples/ndx_rotate.rts:38",
      "samples/ndx_rotate_factor_test.rts:59",
      "samples/ndx_rotate_make_tradelist.rts:40",
      "samples/ndx_rotate_weekly_reduce.rts:35",
      "samples/oex_tf_auto_track.rts:78",
      "samples/oex_tf_fresh_signal.rts:27",
      "samples/oex_tf_top_down.rts:51",
      "samples/optimal_diversity.rts:42",
      "samples/radge_bbo.rts:50",
      "samples/Sample1.rts:20",
      "samples/Sample2.rts:17",
      "samples/Sample2a.rts:18",
      "samples/sector_etfs.rts:42",
      "samples/sector_etfs_breadth.rts:64",
      "samples/simple_day_trade.rts:44",
      "samples/spy_tlt_uis.rts:54",
      "samples/supertrend.rts:48",
      "samples/tf_dynamic_size.rts:43",
      "samples/turtles.rts:68",
      "samples/two_accounts.rts:70",
      "samples/two_accounts_rebalance.rts:70",
      "samples/vigilant_asset_allocation.rts:42",
      "samples/vx_futures.rts:53",
      "samples/vxx_long_short.rts:34",
      "samples/weekly_moc_asx.rts:49",
      "samples/weekly_moc_asx_daily_daily.rts:47",
      "samples/weekly_moc_asx_daily_weekly.rts:41"
    ]
  },
  {
    "name": "ExitStop",
    "category": "strategy_statement",
    "signature": "ExitStop: price_expression",
    "description": "Protective stop price for open positions.",
    "snippet": "Strategy: Momentum\n    ExitStop: EntryPrice * 0.9",
    "sources": [
      "manual.txt:4055",
      "samples/bensdorp_book.rts:102",
      "samples/futures_trend_follow_csi.rts:49",
      "samples/gc_kelly.rts:35",
      "samples/higher_lows.rts:47",
      "samples/keltner_pullback.rts:55",
      "samples/ndx_plus_wtf_script.rts:59",
      "samples/scale_in.rts:16",
      "samples/tf_dynamic_size.rts:42",
      "samples/tf_sell_half_at_1R.rts:28",
      "samples/trend_following_basics.rts:73",
      "samples/turtles.rts:69",
      "samples/weekly_trend_follow.rts:39",
      "samples/weekly_trend_follow_make_tradelist.rts:43"
    ]
  },
  {
    "name": "ExitTradeValue",
    "category": "function",
    "signature": "ExitTradeValue()",
    "description": "calculates a value to store in T.ValueOut item in the trade list record for this exit\u00b7 FeesInOut - daily deposit and/or withdrawal specification by formula (included in backtest stats)\u00b7 FeesList - CSV file with list of specific deposit and/or withdrawal amounts (included in backtest stats)\u00b7 FuturesMargin - dollar margin required to open a futures position\u00b7 GreedyScoring - determines whether strategy uses a special variant of the setup selection process\u00b7 IgnoreDividends - exclude dividends from trade and test P/L calculations\u00b7 LimitExtra - extra excursion beyond a limit price required to assume order was filled\u00b7 LimitSlip - slippage for at-limit-price transactions (typically 0)\u00b7 MarkToMarket - whether strategy equity includes open-position mark-to-market value\u00b7 MaxCatExp - maximum same-category percent investment\u00b7 MaxCatInv - maximum same-category dollar investment\u00b7 MaxEntries - maximum position entries to allow (rarely used)\u00b7 MaxExposure - maximum percent investment\u00b7 MaxInvested - maximum dollar investment\u00b7 MaxLongExp - maximum long percent investment\u00b7 MaxLongInv - maximum long dollar investment\u00b7 MaxNetExp - maximum net long-short percent investment\u00b7 MaxNetInv - maximum net long-short dollar investment\u00b7 MaxNewExp - maximum new exposure per day \u00b7 MaxNewInv - maximum new investment per day \u00b7 MaxNewPos - maximum new positions per day \u00b7 MaxPerTurn - how many setups per selection turn a strategy can add\u00b7 MaxPositions - maximum open positions \u00b7 MaxSameCat - maximum same-category position count\u00b7 MaxSameSym - maximum same-symbol position count\u00b7 MaxSetups - maximum entry setups per day \u00b7 MaxShortExp - maximum short percent investment\u00b7 MaxShortInv - maximum short dollar investment\u00b7 MaxSymExp - maximum same symbol percent investment\u00b7 MaxSymInv - maximum same-symbol dollar investment\u00b7 MinFreeCash - minimum free cash in the account\u00b7 MinNetExp - minimum net long-short percent investment\u00b7 MinNetInv - minimum net long-short dollar investment\u00b7 OpenSlip - slippage for at-open market transactions\u00b7 OrdersMktAsLmtPct - allows generated market orders to optionally be converted to limit orders\u00b7 OrderNote - string to add to the text of each order and as the \"note\" value in CSV order lists",
    "snippet": "Data:\n    Example_ExitTradeValue: ExitTradeValue(...)",
    "sources": [
      "manual.txt:3170",
      "samples/mr_sample_long_only.rts:25",
      "samples/mr_sample_short_only.rts:23"
    ]
  },
  {
    "name": "Extern",
    "category": "function",
    "signature": "Extern(selector, expression)",
    "description": "Evaluates an expression on a different symbol or timeframe.",
    "snippet": "Data:\n    SPY_weekly: Extern(~Weekly, C)",
    "sources": [
      "manual.txt:2599",
      "samples/bensdorp_book.rts:42",
      "samples/beta_indicator.rts:17",
      "samples/cii_rotate.rts:29",
      "samples/cl_term_structure.rts:28",
      "samples/clenow_stocks_on_move.rts:40",
      "samples/clenow_stocks_on_move_dynamic.rts:40",
      "samples/combined.rts:25",
      "samples/combined_multi_bar_size.rts:24",
      "samples/combined_rebalance.rts:13",
      "samples/correl_multi.rts:25",
      "samples/es_compare.rts:29",
      "samples/flipper.rts:33",
      "samples/futures_calendar_spread.rts:13",
      "samples/futures_volume_rank.rts:41",
      "samples/hybrid_asset_allocation.rts:34",
      "samples/hybrid_asset_allocation_dynamic.rts:33",
      "samples/industry_indices.rts:10",
      "samples/keller_baa.rts:39",
      "samples/mr_sample_hedged.rts:9",
      "samples/mr_sample_test_scan.rts:50",
      "samples/mr_sample_tracking.rts:10",
      "samples/mr_sample_tracking_alloc.rts:17",
      "samples/ndx_plus_wtf_script.rts:25",
      "samples/ndx_rotate.rts:24",
      "samples/ndx_rotate_factor_test.rts:35",
      "samples/ndx_rotate_make_tradelist.rts:26",
      "samples/ndx_rotate_rebalance.rts:19",
      "samples/ndx_rotate_weekly_reduce.rts:19",
      "samples/oex_tf_auto_track.rts:62",
      "samples/oex_tf_fresh_signal.rts:32",
      "samples/optimal_diversity.rts:29",
      "samples/radge_bbo.rts:29",
      "samples/scale_in.rts:28",
      "samples/sector_etfs_breadth.rts:46",
      "samples/tf_dynamic_size.rts:30",
      "samples/trend_following_basics.rts:72",
      "samples/turtles.rts:38",
      "samples/two_accounts.rts:27",
      "samples/two_accounts_rebalance.rts:27",
      "samples/vx_futures.rts:30",
      "samples/vx_term_structure.rts:34",
      "samples/vxx_long_short.rts:24",
      "samples/weekly_trend_follow.rts:20",
      "samples/weekly_trend_follow_make_tradelist.rts:24"
    ]
  },
  {
    "name": "False",
    "category": "function",
    "signature": "False()",
    "description": "not adjusted, i.e. as-traded (default)True - adjustedNotesRealTest assumes that tradelist prices are not split-adjusted, as in most cases they will have come from actual trades that occurred in the market.This setting is mainly for use when exporting a trade list from other software such as AmiBroker and then importing it to RealTest.",
    "snippet": "Data:\n    Example_False: False(...)",
    "sources": [
      "manual.txt:4495",
      "samples/cii_rotate.rts:42",
      "samples/combined.rts:20",
      "samples/combined_multi_bar_size.rts:24",
      "samples/combined_rebalance.rts:9",
      "samples/ibd_rs.rts:10",
      "samples/import_norgate.rts:14",
      "samples/mr_sample_test_scan.rts:17",
      "samples/mr_sample_tracking.rts:11",
      "samples/multi_moc_top_down.rts:17",
      "samples/ndx_plus_wtf_script.rts:19",
      "samples/ndx_rotate.rts:19",
      "samples/ndx_rotate_factor_test.rts:10",
      "samples/ndx_rotate_make_tradelist.rts:18",
      "samples/ndx_rotate_rebalance.rts:10",
      "samples/ndx_rotate_weekly_reduce.rts:11",
      "samples/radge_bbo.rts:19",
      "samples/simple_day_trade.rts:17",
      "samples/spy_tlt_uis.rts:33",
      "samples/turtles.rts:18"
    ]
  },
  {
    "name": "Find",
    "category": "function",
    "signature": "Find()",
    "description": "find a string within another string and return its offset\u00b7 Format - embed numeric or string values within a string using formatting codes\u00b7 FormatDate - convert a date to a string in any format\u00b7 GetField - extract a delimited substring from a string\u00b7 Left - get the left end of a string\u00b7 Length - get the number of characters in a string\u00b7 Match - see if a string matches a pattern\u00b7 Mid - extract part of a string\u00b7 Replace - replace text wherever it is found in a string\u00b7 Right - get the right end of a string\u00b7 ToDate - parse a string and return a date value\u00b7 ToLower - convert a string to lowercase\u00b7 ToNum - find a number within a string\u00b7 ToUpper - convert a string to uppercase",
    "snippet": "Data:\n    Example_Find: Find(...)",
    "sources": [
      "manual.txt:3187",
      "samples/dividend_capture.rts:24",
      "samples/gics_indu_rank.rts:2",
      "samples/import_tiingo.rts:8",
      "samples/Sample2.rts:3",
      "samples/Sample2a.rts:3"
    ]
  },
  {
    "name": "Format",
    "category": "function",
    "signature": "Format()",
    "description": "WidthGoverns the maximum width constant that is placed in the generated HTML code.v",
    "snippet": "Data:\n    Example_Format: Format(...)",
    "sources": [
      "manual.txt:2560",
      "samples/import_ms.rts:6",
      "samples/mr_sample_debug.rts:36",
      "samples/oc_all_actual.rts:61"
    ]
  },
  {
    "name": "General",
    "category": "function",
    "signature": "General()",
    "description": "Purpose Functions",
    "snippet": "Data:\n    Example_General: General(...)",
    "sources": [
      "manual.txt:464",
      "samples/import_multi.rts:38"
    ]
  },
  {
    "name": "Highest",
    "category": "function",
    "signature": "Highest(series, length)",
    "description": "Maximum value of a series over the window.",
    "snippet": "Data:\n    Peak252: Highest(C, 252)",
    "sources": [
      "manual.txt:3242",
      "samples/futures_trend_follow_csi.rts:30",
      "samples/futures_trend_follow_simple.rts:22",
      "samples/gc_kelly.rts:33",
      "samples/keltner_pullback.rts:55",
      "samples/sample_scan.rts:10",
      "samples/scale_in.rts:16",
      "samples/trend_following_basics.rts:32",
      "samples/turtles.rts:67"
    ]
  },
  {
    "name": "IBD",
    "category": "function",
    "signature": "IBD()",
    "description": "style \"relative strength\" ranking. Here is how the S&P 500 components were ranked for IBD RS on 6/26/20:",
    "snippet": "Data:\n    Example_IBD: IBD(...)",
    "sources": [
      "manual.txt:3145",
      "samples/combined.rts:49",
      "samples/combined_multi_bar_size.rts:47",
      "samples/combined_rebalance.rts:46",
      "samples/ibd_rs.rts:2",
      "samples/ndx_plus_wtf_script.rts:26",
      "samples/ndx_rotate.rts:25",
      "samples/ndx_rotate_factor_test.rts:22",
      "samples/ndx_rotate_make_tradelist.rts:27",
      "samples/ndx_rotate_rebalance.rts:20",
      "samples/ndx_rotate_weekly_reduce.rts:20",
      "samples/two_accounts.rts:28",
      "samples/two_accounts_rebalance.rts:28"
    ]
  },
  {
    "name": "ISO",
    "category": "function",
    "signature": "ISO()",
    "description": "8601 standard for week-of-year numbering.",
    "snippet": "Data:\n    Example_ISO: ISO(...)",
    "sources": [
      "manual.txt:4574"
    ]
  },
  {
    "name": "IncludeList",
    "category": "directive",
    "signature": "IncludeList: symbols | path | watchlist",
    "description": "Defines which symbols are included for import or strategy universe.",
    "snippet": "Import:\n    IncludeList: SPY,TLT,GLD",
    "sources": [
      "manual.txt:3929",
      "samples/actual_trades.rts:9",
      "samples/anchored_vwap.rts:8",
      "samples/bensdorp_book.rts:6",
      "samples/beta_indicator.rts:6",
      "samples/breadth.rts:8",
      "samples/cii_rotate.rts:11",
      "samples/cl_term_structure.rts:8",
      "samples/clenow_stocks_on_move.rts:9",
      "samples/clenow_stocks_on_move_dynamic.rts:9",
      "samples/combined.rts:7",
      "samples/combined_multi_bar_size.rts:7",
      "samples/correl_multi.rts:8",
      "samples/dalio_all_weather.rts:6",
      "samples/dalio_all_weather_maxdiff.rts:6",
      "samples/dividend_capture.rts:8",
      "samples/dividend_yield_series.rts:8",
      "samples/djia_earnings.rts:9",
      "samples/djia_make_syminfo.rts:8",
      "samples/djia_use_syminfo.rts:9",
      "samples/ehlers_windows.rts:7",
      "samples/es_compare.rts:8",
      "samples/flipper.rts:6",
      "samples/fundamentals.rts:8",
      "samples/futures_calendar_spread.rts:6",
      "samples/futures_trend_follow_simple.rts:6",
      "samples/futures_volume_rank.rts:8",
      "samples/gc_kelly.rts:7",
      "samples/gics_indu_rank.rts:6",
      "samples/goal_30_15.rts:6",
      "samples/goal_30_15_asx.rts:9",
      "samples/goal_30_15_tsx.rts:9",
      "samples/higher_lows.rts:5",
      "samples/hybrid_asset_allocation.rts:8",
      "samples/hybrid_asset_allocation_dynamic.rts:8",
      "samples/import_ms.rts:14",
      "samples/import_multi.rts:9",
      "samples/import_norgate.rts:9",
      "samples/import_tiingo.rts:17",
      "samples/import_yahoo.rts:6",
      "samples/index_breadth.rts:8",
      "samples/industry_indices.rts:16",
      "samples/keller_baa.rts:8",
      "samples/keltner_pullback.rts:20",
      "samples/martingale.rts:5",
      "samples/mhp_classic.rts:8",
      "samples/mr_sample_common.rts:6",
      "samples/mr_sample_orders_alera.rts:6",
      "samples/mr_sample_orders_basket.rts:6",
      "samples/mr_sample_scan.rts:8",
      "samples/mr_sample_test_scan.rts:8",
      "samples/multi_moc_top_down.rts:7",
      "samples/ndx_plus_wtf_script.rts:6",
      "samples/ndx_plus_wtf_tradelists.rts:7",
      "samples/ndx_rotate.rts:8",
      "samples/ndx_rotate_make_tradelist.rts:7",
      "samples/oc_all_actual.rts:10",
      "samples/oex_tf_auto_track.rts:9",
      "samples/oex_tf_fresh_signal.rts:3",
      "samples/oex_tf_top_down.rts:9",
      "samples/opex_and_vxex.rts:6",
      "samples/optimal_diversity.rts:11",
      "samples/radge_bbo.rts:7",
      "samples/Sample1.rts:8",
      "samples/sector_etfs.rts:7",
      "samples/sector_etfs_breadth.rts:6",
      "samples/simple_day_trade.rts:6",
      "samples/spy_tlt_uis.rts:24",
      "samples/stockbee_mm.rts:7",
      "samples/supertrend.rts:12",
      "samples/tf_dynamic_size.rts:10",
      "samples/tf_sell_half_at_1R.rts:8",
      "samples/trend_following_basics.rts:8",
      "samples/turtles.rts:5",
      "samples/two_accounts.rts:8",
      "samples/two_accounts_rebalance.rts:8",
      "samples/vigilant_asset_allocation.rts:7",
      "samples/vx_futures.rts:7",
      "samples/vx_term_structure.rts:8",
      "samples/vxx_long_short.rts:8",
      "samples/weekly_moc_asx.rts:8",
      "samples/weekly_trend_follow.rts:6",
      "samples/weekly_trend_follow_make_tradelist.rts:7",
      "samples/yield_rank.rts:8"
    ]
  },
  {
    "name": "InfoExpiry",
    "category": "function",
    "signature": "InfoExpiry()",
    "description": "futures contract expiration date\u00b7 InfoFloat - shares in circulation\u00b7 InfoGICS - Global Industry Classification Standard code\u00b7 InfoMargin - futures contract current margin requirement\u00b7 InfoTRBC - Thomson Reuters Business Classification code\u00b7 F.xxx / F.xxx.Date - Norgate current fundamental item value / date \u00b7 FilterNum - which filter was passed in a multi-filter scan\u00b7 InList - whether the stock was part of a specific IncludeList during import\u00b7 ListNum - number of first IncludeList the stock was part of during import\u00b7 PointValue - futures contract point value\u00b7 InfoShares - shares in existence\u00b7 Symbol - current symbol code\u00b7 TickSize - futures contract tick size",
    "snippet": "Data:\n    Example_InfoExpiry: InfoExpiry(...)",
    "sources": [
      "manual.txt:3190",
      "samples/cl_term_structure.rts:14",
      "samples/futures_calendar_spread.rts:17",
      "samples/futures_volume_rank.rts:35",
      "samples/vx_term_structure.rts:20"
    ]
  },
  {
    "name": "Item",
    "category": "function",
    "signature": "Item(pattern, value)",
    "description": "Returns a formatted parameter or series entry (often used with Parameters section).",
    "snippet": "Quantity: Item(\"alloc{?}\", ?symbol)",
    "sources": [
      "manual.txt:2373",
      "samples/dalio_all_weather.rts:28",
      "samples/dalio_all_weather_maxdiff.rts:27",
      "samples/flipper.rts:22",
      "samples/futures_calendar_spread.rts:29",
      "samples/ndx_rotate_factor_test.rts:13",
      "samples/sector_etfs_breadth.rts:45",
      "samples/trend_following_basics.rts:63",
      "samples/vx_futures.rts:39"
    ]
  },
  {
    "name": "Kurtosis",
    "category": "function",
    "signature": "Kurtosis()",
    "description": "sample kurtosis\u00b7 LinReg - linear regression\u00b7 Lowest or LLV - lowest value\u00b7 MA or Avg - simple moving average\u00b7 Median - median of values\u00b7 Peak - value of nth most recent peak followed by an n% drop (does not look ahead)\u00b7 PeakBars - count of bars since nth such Peak\u00b7 PercentRank - percent rank among values\u00b7 PercentRankN - value with nth percent rank\u00b7 Product - product of values\u00b7 Rank - numeric rank among values\u00b7 RankN - value with nth numeric rank\u00b7 ROC or PctChg - %gain/loss\u00b7 RsiF - RSI as a function\u00b7 SarF - SAR as a function\u00b7 Sequence - check for a sequence of conditions within a specific number of bars\u00b7 SinceHigh - bars since highest value\u00b7 SinceLow - bars since lowest value\u00b7 SinceTrue - bars since expression was true (0 if now, -1 if never)\u00b7 Skewness - sample skewness\u00b7 Slope - slope of linear regression\u00b7 Spearman - Spearman's Rank Correlation\u00b7 StdDev - standard deviation\u00b7 StdErr - standard error of predicted vs actual values in a regression\u00b7 Sum - sum of values\u00b7 SumSince - sum of values since condition was true\u00b7 SumSQ - sum of squared values\u00b7 TEMA - triple exponential moving average\u00b7 Trough - value of nth most recent trough followed by an n% rise (does not look ahead)\u00b7 TroughBars - count of bars since nth such Trough\u00b7 TrueInRow - count of bars in a row for which expression was true\u00b7 UntilTrue - bars until expression will be true (0 if now, -1 if never)\u00b7 VWMA - volume weighted moving average\u00b7 WhenTrue - value when expression was true (or will be true if count < 0)\u00b7 WMA or WAvg - weighted moving average\u00b7 YInt - y-intercept of linear regression",
    "snippet": "Data:\n    Example_Kurtosis: Kurtosis(...)",
    "sources": [
      "manual.txt:3180"
    ]
  },
  {
    "name": "Library",
    "category": "function",
    "signature": "Library()",
    "description": "named formulas calculated when they are referenced, using the current context\u00b7 Namespace - specifies a prefix for script-defined names, to prevent duplication when including multiple scripts\u00b7 Notes - a free-form section in which to organize any notes about the script\u00b7 OrderSettings - override general settings when script is run as Orders\u00b7 OrdersInclude - allows a script to include another script only when being run as Orders\u00b7 Parameters - system parameter definitions\u00b7 Results - results column definitions\u00b7 Scan - filter and column definitions for general-purpose scans\u00b7 ScanInclude - allows a script to include another script only when being run as Scan\u00b7 ScanSettings - override general settings when script is run as Scan\u00b7 Settings - runtime settings for all script run modes\u00b7 StratData - named formulas calculated and stored in memory arrays for each strategy each date while tests are run\u00b7 Strategy - begin a new trading strategy definition\u00b7 Template - begin a new template strategy definition\u00b7 TestData - named formulas calculated and stored in memory arrays for each symbol each date while tests are run\u00b7 TestInclude - allows a script to include another script only when being run as Test\u00b7 TestScan - filter and column definitions for scans that include trade and position information\u00b7 TestSettings - override general settings when script is run as Test\u00b7 Trades - trade list column definitions\u00b7 WalkForward - system parameter values by date",
    "snippet": "Data:\n    Example_Library: Library(...)",
    "sources": [
      "manual.txt:3161",
      "samples/annual_taxes.rts:2",
      "samples/clenow_stocks_on_move.rts:46",
      "samples/clenow_stocks_on_move_dynamic.rts:46",
      "samples/combined_rebalance.rts:16",
      "samples/dalio_all_weather_maxdiff.rts:25",
      "samples/ehlers_windows.rts:19",
      "samples/futures_volume_rank.rts:56",
      "samples/hybrid_asset_allocation_dynamic.rts:40",
      "samples/management_fees.rts:2",
      "samples/mr_sample_debug.rts:3",
      "samples/mr_sample_hedged.rts:8",
      "samples/mr_sample_test_scan.rts:49",
      "samples/ndx_plus_wtf_script.rts:48",
      "samples/ndx_rotate_factor_test.rts:20",
      "samples/ndx_rotate_weekly_reduce.rts:37",
      "samples/scale_in.rts:2",
      "samples/sector_etfs_breadth.rts:21",
      "samples/simple_day_trade_basket_scan.rts:13",
      "samples/tf_dynamic_size.rts:29",
      "samples/trend_following_basics.rts:36",
      "samples/turtles.rts:33",
      "samples/weekly_trend_follow.rts:28",
      "samples/weekly_trend_follow_make_tradelist.rts:32"
    ]
  },
  {
    "name": "Lowest",
    "category": "function",
    "signature": "Lowest(series, length)",
    "description": "Minimum value of a series over the window.",
    "snippet": "Data:\n    Trough20: Lowest(C, 20)",
    "sources": [
      "manual.txt:3245",
      "samples/futures_trend_follow_csi.rts:29",
      "samples/futures_trend_follow_simple.rts:21",
      "samples/keltner_pullback.rts:37",
      "samples/sector_etfs.rts:25",
      "samples/trend_following_basics.rts:33",
      "samples/turtles.rts:69"
    ]
  },
  {
    "name": "MA",
    "category": "function",
    "signature": "MA(series, length)",
    "description": "Simple moving average across the specified lookback.",
    "snippet": "Data:\n    SPY_MA200: MA(C, 200)",
    "sources": [
      "manual.txt:2609",
      "samples/anchored_vwap.rts:25",
      "samples/clenow_stocks_on_move.rts:36",
      "samples/clenow_stocks_on_move_dynamic.rts:36",
      "samples/combined.rts:43",
      "samples/combined_multi_bar_size.rts:42",
      "samples/combined_rebalance.rts:40",
      "samples/flipper.rts:33",
      "samples/goal_30_15.rts:25",
      "samples/goal_30_15_asx.rts:26",
      "samples/goal_30_15_tsx.rts:24",
      "samples/mr_sample_common.rts:22",
      "samples/mr_sample_orders_alera.rts:21",
      "samples/mr_sample_orders_basket.rts:22",
      "samples/mr_sample_scan.rts:23",
      "samples/mr_sample_test_scan.rts:25",
      "samples/multi_filter_scan.rts:15",
      "samples/multi_moc_top_down.rts:40",
      "samples/ndx_plus_wtf_script.rts:32",
      "samples/ndx_rotate_factor_test.rts:31",
      "samples/oex_tf_auto_track.rts:54",
      "samples/optimal_diversity.rts:29",
      "samples/radge_bbo.rts:29",
      "samples/sctr.rts:8",
      "samples/simple_day_trade.rts:29",
      "samples/spy_tlt_uis.rts:76",
      "samples/stockbee_mm.rts:19",
      "samples/two_accounts.rts:34",
      "samples/two_accounts_rebalance.rts:34",
      "samples/weekly_moc_asx.rts:36",
      "samples/weekly_moc_asx_daily_daily.rts:28",
      "samples/weekly_moc_asx_daily_weekly.rts:27",
      "samples/weekly_trend_follow.rts:20",
      "samples/weekly_trend_follow_make_tradelist.rts:24"
    ]
  },
  {
    "name": "MACD",
    "category": "function",
    "signature": "MACD(len1,len2)",
    "description": "MACDS(len1, len2, len3).This indicator supports one-pass calculation when used in the Data Section with non-variable lengths.",
    "snippet": "Data:\n    Example_MACD: MACD(...)",
    "sources": [
      "manual.txt:3838"
    ]
  },
  {
    "name": "Max",
    "category": "function",
    "signature": "Max(6.00, 0.0008 * FillValue)",
    "description": "- the 1.1x is the 10% GST and the remainder is the IB commission.For US IB commissions, you can omit the \"Min(0.01 * FillValue\" part unless you intend to trade penny stocks. By definition a stock would need to be priced below $0.50/share for 1% of its value to exceed $0.005/share.By default, Commission is assumed to be in the currency of the instrument being traded. If your broker (unlike IB) charges a commission rate in local account currency regardless of the instrument's currency, use the CommCurrency setting to specify Account.",
    "snippet": "Data:\n    Example_Max: Max(...)",
    "sources": [
      "manual.txt:3443",
      "samples/annual_taxes.rts:16",
      "samples/bensdorp_book.rts:91",
      "samples/flipper.rts:29",
      "samples/futures_trend_follow_csi.rts:33",
      "samples/futures_trend_follow_simple.rts:37",
      "samples/goal_30_15.rts:48",
      "samples/goal_30_15_asx.rts:49",
      "samples/goal_30_15_tsx.rts:47",
      "samples/keltner_pullback.rts:45",
      "samples/management_fees.rts:17",
      "samples/martingale.rts:23",
      "samples/mhp_classic.rts:27",
      "samples/mr_sample.rts:23",
      "samples/mr_sample_common.rts:41",
      "samples/mr_sample_debug.rts:23",
      "samples/mr_sample_orders.rts:33",
      "samples/mr_sample_orders_alera.rts:39",
      "samples/mr_sample_orders_basket.rts:40",
      "samples/mr_sample_scan.rts:36",
      "samples/mr_sample_short_only.rts:16",
      "samples/mr_sample_test_scan.rts:37",
      "samples/mr_sample_tracking.rts:25",
      "samples/mr_sample_tracking_alloc.rts:24",
      "samples/mr_sample_tradelist.rts:21",
      "samples/multi_moc_top_down.rts:31",
      "samples/oex_tf_auto_track.rts:33",
      "samples/radge_bbo.rts:51",
      "samples/simple_day_trade.rts:39",
      "samples/spy_tlt_uis.rts:53",
      "samples/supertrend.rts:8",
      "samples/trend_following_basics.rts:40",
      "samples/turtles.rts:69",
      "samples/two_accounts.rts:88",
      "samples/two_accounts_rebalance.rts:88",
      "samples/vxx_long_short.rts:29",
      "samples/weekly_moc_asx.rts:52",
      "samples/weekly_moc_asx_daily_daily.rts:53",
      "samples/weekly_moc_asx_daily_weekly.rts:44"
    ]
  },
  {
    "name": "MaxEntries",
    "category": "strategy_statement",
    "signature": "MaxEntries: integer",
    "description": "Caps how many new positions can be opened simultaneously.",
    "snippet": "Strategy: Rotation\n    MaxEntries: 3",
    "sources": [
      "manual.txt:N/A"
    ]
  },
  {
    "name": "MaxPositions",
    "category": "function",
    "signature": "MaxPositions()",
    "description": "maximum open position count\u00b7 MaxExposure - maximum percent invested\u00b7 MaxLongExp - maximum percent long invested\u00b7 MaxShortExp - maximum percent short invested\u00b7 MaxNetExp - maximum net long-short invested\u00b7 MinNetExp - minimum net long-short invested\u00b7 MaxInvested - maximum dollars invested\u00b7 MaxLongInv - maximum long dollars invested\u00b7 MaxShortInv - maximum short dollars invested\u00b7 MaxNetInv - maximum net long-short dollars invested\u00b7 MinNetInv - maximum net long-short dollars invested\u00b7 MinFreeCash - minimum free cash in account\u00b7 MaxNewPos - maximum new position count\u00b7 MaxNewExp - maximum new percent invested\u00b7 MaxNewInv - maximum new dollars invested\u00b7 MaxSameCat - maximum positions in the same category\u00b7 MaxSameSym - maximum positions in the same security (symbol)\u00b7 MaxSetups - maximum entry setups per day (processed before other constraints)\u00b7 MaxEntries - maximum position entries per day (deliberate selection bias)By default, all of the above constraints are infinite. Therefore if you want any constraints in your strategy or set of strategies, you must provide one or more of the above formulas.(The one exception to the above statement is MaxSameSym. This defaults to 1 in each strategy but is infinite combined strategy groups.)Most of the above formulas may be included in the definition of a Strategy, a StatsGroup, or the Combined system. All constraints are applied during the Setup Selection phase of daily entry processing, such that the set of orders to generate each day would violate none of the constraints.To apply constraints to all strategies in a script, simply add a Combined section and define the constraint formulas within that section.To apply constraints to a specific group of strategies (e.g. all long-side ones), define a StatsGroup consisting of those strategies and provide the constraint formulas within it.In the daily setup selection process, a setup only becomes an order if it does not violate any constraints of its Strategy, StatsGroup(s) or Combined.The key to how this selection process works is that first all setups are determined for all strategies and ranked by each strategy's SetupScore formula. Then an outer loop by selection turn number selects one (or optionally more) setups from each strategy and checks to see if it can still become an order given the others that have already been selected.If you only provide Combined capacity formulas, each strategy will keep the maximum possible number of setups that would (after selecting them in turn) not violate any combined capacities.Strategy-specific capacities can also be used to further control strategy-level exposures.Rather than depending on the order of strategies in a script to determine which one \"goes first\" in the setup selection loop, a StrategyScore formula can optionally be provided. When present this formula is evaluated at each rank number in the selection loop and determines the sequence in which each",
    "snippet": "Data:\n    Example_MaxPositions: MaxPositions(...)",
    "sources": [
      "manual.txt:2829",
      "samples/bensdorp_book.rts:90",
      "samples/cii_rotate.rts:61",
      "samples/combined.rts:34",
      "samples/combined_multi_bar_size.rts:33",
      "samples/combined_rebalance.rts:29",
      "samples/es_compare.rts:22",
      "samples/flipper.rts:39",
      "samples/goal_30_15.rts:53",
      "samples/goal_30_15_asx.rts:54",
      "samples/goal_30_15_tsx.rts:52",
      "samples/martingale.rts:22",
      "samples/mr_sample_common.rts:37",
      "samples/mr_sample_orders_alera.rts:35",
      "samples/mr_sample_orders_basket.rts:36",
      "samples/multi_moc_top_down.rts:66",
      "samples/ndx_plus_wtf_script.rts:56",
      "samples/ndx_rotate.rts:41",
      "samples/ndx_rotate_factor_test.rts:56",
      "samples/ndx_rotate_make_tradelist.rts:43",
      "samples/ndx_rotate_weekly_reduce.rts:32",
      "samples/optimal_diversity.rts:37",
      "samples/radge_bbo.rts:47",
      "samples/sector_etfs.rts:35",
      "samples/simple_day_trade.rts:40",
      "samples/two_accounts.rts:68",
      "samples/two_accounts_rebalance.rts:68",
      "samples/vigilant_asset_allocation.rts:39",
      "samples/weekly_trend_follow.rts:36",
      "samples/weekly_trend_follow_make_tradelist.rts:40"
    ]
  },
  {
    "name": "May",
    "category": "function",
    "signature": "May()",
    "description": "2021. This is credited to the trade profit as (31 shares) * (0.56 dividend per share) * (1.2837 USDAUD ratio on the record date) = $22.28 AUD, as shown in the \"Div\" column of the trade list.\u00b7 On exit day, the trade's net profit is calculated factoring in the difference in exchange rates between entry day and exit day. In this example, an additional $694.01 was gained due to the favorable move in USDAUD while the Australian trader held a position in a US stock.The key mechanics to be aware of in RealTest if you want to do this kind of testing are:\u00b7 Your Import must include a symbol for the FX ratio between your account's base currency and the currency of each other country represented in your stock universe. \u00b7 It does not matter in which direction the ratio is expressed (AUDUSD vs. USDAUD). RealTest inverts as needed based on the nomenclature.\u00b7 If your data source is not Norgate, you might need to use the alias mechanism in your IncludeList to convert, for example, Yahoo's \"JPY=X\" symbol to \"USDJPY\". RealTest requires that the FX symbols are in this six-letter format for this feature to work.\u00b7 RealTest similarly requires three-letter currency symbols in the metadata of each stock in order to know whether and how to convert it. Use a SymInfo File if necessary to provide these.\u00b7 With Norgate data, the FX symbols are all in the correct format and the currency metadata is provided automatically.\u00b7 Add a Currency statement to your Settings, to tell RealTest that you want it to model currency conversion, and what your account's base currency is. No conversions are done if there is no Currency statement.To observe the impact of currency conversion to your test statistics, the following data are available:",
    "snippet": "Data:\n    Example_May: May(...)",
    "sources": [
      "manual.txt:2900",
      "samples/actual_trades.rts:4",
      "samples/goal_30_15_asx.rts:2",
      "samples/goal_30_15_tsx.rts:2",
      "samples/tf_dynamic_size.rts:44"
    ]
  },
  {
    "name": "MetaStock",
    "category": "function",
    "signature": "MetaStock()",
    "description": "format folder trees.",
    "snippet": "Data:\n    Example_MetaStock: MetaStock(...)",
    "sources": [
      "manual.txt:2611",
      "samples/import_ms.rts:2"
    ]
  },
  {
    "name": "Multi",
    "category": "function",
    "signature": "Multi()",
    "description": "Source Import",
    "snippet": "Data:\n    Example_Multi: Multi(...)",
    "sources": [
      "manual.txt:187",
      "samples/cii_rotate.rts:2",
      "samples/goal_30_15.rts:2",
      "samples/goal_30_15_asx.rts:32",
      "samples/goal_30_15_tsx.rts:30",
      "samples/import_multi.rts:33",
      "samples/weekly_moc_asx.rts:32",
      "samples/weekly_moc_asx_daily_daily.rts:22",
      "samples/weekly_moc_asx_daily_weekly.rts:22"
    ]
  },
  {
    "name": "None",
    "category": "function",
    "signature": "None()",
    "description": "don't keep any trades (a good choice when running large optimizations)Strategy - keep regular strategy trades (the most common choice)Benchmark - keep benchmark strategy tradesSkipped - keep trades (setups) that were skipped for various reasonsAll - a one-word shortcut for all of the above (except none)NotesIf KeepTrades is not specified in a script then the choices from the Settings Panel will be used.",
    "snippet": "Data:\n    Example_None: None(...)",
    "sources": [
      "manual.txt:3799",
      "samples/import_norgate.rts:13"
    ]
  },
  {
    "name": "Nov",
    "category": "function",
    "signature": "Nov()",
    "description": "2020 as the end date and TestOutput: Scan specified in the Settings section produces this output:",
    "snippet": "Data:\n    Example_Nov: Nov(...)",
    "sources": [
      "manual.txt:2814"
    ]
  },
  {
    "name": "One",
    "category": "function",
    "signature": "One()",
    "description": "Pass Data Formulas",
    "snippet": "Data:\n    Example_One: One(...)",
    "sources": [
      "manual.txt:365",
      "samples/actual_trades.rts:42",
      "samples/anchored_vwap.rts:2",
      "samples/bensdorp_book.rts:8",
      "samples/cii_rotate.rts:40",
      "samples/combined.rts:24",
      "samples/combined_multi_bar_size.rts:1",
      "samples/combined_rebalance.rts:12",
      "samples/dividend_capture.rts:4",
      "samples/gc_kelly.rts:2",
      "samples/higher_lows.rts:26",
      "samples/import_csv.rts:2",
      "samples/mr_sample_common.rts:36",
      "samples/mr_sample_hedged.rts:5",
      "samples/mr_sample_orders_alera.rts:34",
      "samples/mr_sample_orders_basket.rts:35",
      "samples/mr_sample_test_scan.rts:41",
      "samples/mr_sample_tradelist.rts:6",
      "samples/ndx_plus_wtf_script.rts:2",
      "samples/ndx_rotate.rts:3",
      "samples/oc_all_actual.rts:3",
      "samples/simple_day_trade.rts:41",
      "samples/supertrend.rts:8",
      "samples/turtles.rts:81",
      "samples/two_accounts.rts:2",
      "samples/two_accounts_rebalance.rts:2",
      "samples/vx_futures.rts:8",
      "samples/vxx_long_short.rts:4"
    ]
  },
  {
    "name": "OrdersFile",
    "category": "function",
    "signature": "OrdersFile()",
    "description": "path/name a strategy-specific order list file to generate\u00b7 OrdersTemplate - path/name a strategy-specific orders template file\u00b7 PriceRound - order and trade price rounding interval\u00b7 QtyFinal - can be used to modify the quantity of an entry after setup ranking is complete\u00b7 QtyPrice - which price (order vs. fill) to use when calculating Quantity, trade fraction, and exposure\u00b7 QtyRound - position size rounding interval\u00b7 QtyType - position size formula unit type\u00b7 Quantity - position size to enter as shares, value, or percent depending on QtyType\u00b7 Reduce - whether to reduce position size rather than skip the entry due to capacity constraints\u00b7 RollCost - total cost of each roll transaction while holding a futures position\u00b7 SetupScore - ranking factor value used to prioritize entry setup selection\u00b7 SetupSkip - entry setup skip condition \u00b7 Side - strategy side constant\u00b7 Slippage - general-purpose slippage (price points)\u00b7 StopSlip - slippage for at-stop-price transactions\u00b7 StrategyScore - ranking factor value for strategies at each turn of the setup selection process\u00b7 TLAdjusted - whether quantities and prices in an imported trade list are split-adjusted\u00b7 TLDateFmt - whether dates in an imported trade list are DMY or MDY\u00b7 TLDelim - specifies the column delimiter in a tradelist file\u00b7 TLFields - defines the column layout of an imported trade list CSV file\u00b7 TLIgnoreRules - whether strategy formulas are ignored in Test mode trade list playback\u00b7 TLNumFmt - specifies the number format in a tradelist file\u00b7 TLStratName - strategy name within tradelist that maps to this script strategy\u00b7 TLTimeShift - number of hours to add or subtract to trade list entry dates/times\u00b7 Tracker - whether to automatically create a tracking benchmark copy of a strategy\u00b7 TradeList - imported trade list file (CSV format)\u00b7 Using - strategy/benchmark/template to inherit from",
    "snippet": "Data:\n    Example_OrdersFile: OrdersFile(...)",
    "sources": [
      "manual.txt:3171",
      "samples/mr_sample_orders_alera.rts:18"
    ]
  },
  {
    "name": "Parameterscondition",
    "category": "function",
    "signature": "Parameterscondition()",
    "description": "formula specifying a conditiontext - formula specifying text to display in the popup messageNotesWhen the condition is true, the function does nothing.When the condition is false, a pop-up message appears:",
    "snippet": "Data:\n    Example_Parameterscondition: Parameterscondition(...)",
    "sources": [
      "manual.txt:3354"
    ]
  },
  {
    "name": "Parametersdate",
    "category": "function",
    "signature": "Parametersdate()",
    "description": "an integer date value e.g. 20230816, S.Date, T.DateIn, etc.",
    "snippet": "Data:\n    Example_Parametersdate: Parametersdate(...)",
    "sources": [
      "manual.txt:3523"
    ]
  },
  {
    "name": "Parametersexpr",
    "category": "function",
    "signature": "Parametersexpr()",
    "description": "data series formulafactor - weighting factor formulaNotesThis function calculates a standard deviation of values as an exponential series using a constant weighting factor represented as a bar count.As with the ESD function, the weighting factor is used both to calculate an exponential mean of values and one of squared differences.As with the AEMA function, the factor is equivalent to 2 / (count + 1) of an ESD and is reevaluated for every bar of the calculation, thus making it adaptive.This function supports one-pass calculation when used in the Data Section with a non-variable count.",
    "snippet": "Data:\n    Example_Parametersexpr: Parametersexpr(...)",
    "sources": [
      "manual.txt:3328"
    ]
  },
  {
    "name": "Parametersexpr1",
    "category": "function",
    "signature": "Parametersexpr1()",
    "description": "data series formulaexpr2 - data series formulacount - lookback periodNotesCorrel(ROC(C,1), Extern($SPY, ROC(C,1)), 100) would be a simple way to calculate the rolling 100-day correlation of a stock to SPY.See also Spearman, CorrelAvg, etc.",
    "snippet": "Data:\n    Example_Parametersexpr1: Parametersexpr1(...)",
    "sources": [
      "manual.txt:3452"
    ]
  },
  {
    "name": "Parametersexpression",
    "category": "function",
    "signature": "Parametersexpression()",
    "description": "any formula or valuetype - what type to assign to the result: 0 = none, 1 = price, 2 = volumeNotesThis function is rarely needed because RealTest automatically determines the type of most calculated values correctly.The data type of a value is only important when the value is used in multi-bar formulas or indicators that cross a split date.Only use this function if you have observed incorrect split handling in, for example, a complex Data Section formula.",
    "snippet": "Data:\n    Example_Parametersexpression: Parametersexpression(...)",
    "sources": [
      "manual.txt:3504"
    ]
  },
  {
    "name": "Parameterslen",
    "category": "function",
    "signature": "Parameterslen()",
    "description": "lookback periodNotesCalculation uses the original Welles Wilder formula. Wilder's exponential smoothing is equivalent to using 2*len-1 in a regular exponential moving average.This indicator supports one-pass calculation when used in the Data Section with a non-variable length.",
    "snippet": "Data:\n    Example_Parameterslen: Parameterslen(...)",
    "sources": [
      "manual.txt:3323"
    ]
  },
  {
    "name": "Parameterslen1",
    "category": "function",
    "signature": "Parameterslen1()",
    "description": "first lookback periodlen2 - second lookback periodmult - number of standard deviationsNotesThe BBTrend indicator is calculated as follows:lower = ABS(BBBot(len1, mult) - BBBot(len2, mult))upper = ABS(BBTop(len1, mult) - BBTop(len2, mult))",
    "snippet": "Data:\n    Example_Parameterslen1: Parameterslen1(...)",
    "sources": [
      "manual.txt:3387"
    ]
  },
  {
    "name": "ParameterslenRocRank",
    "category": "function",
    "signature": "ParameterslenRocRank()",
    "description": "number of bars to use in the PercentRank(ROC(C,1), len) portion of the calculationlenRsiPrice - length parameter for the price RSI portion of the calculationlenRsiStreak - length parameter for the \"streak\" RSI portion of the calculation",
    "snippet": "Data:\n    Example_ParameterslenRocRank: ParameterslenRocRank(...)",
    "sources": [
      "manual.txt:3475"
    ]
  },
  {
    "name": "Parametersstrategy",
    "category": "function",
    "signature": "Parametersstrategy()",
    "description": "any formula returning a string or a numberReturn ValueThe StratNum of the specified strategy, or 0 if not foundNotesIf the current strategy is \"mr_long\", then @mr_long, StratNum, StratRef(StratNum), StratRef(?Strategy), and StratRef(\"mr_long\") will each return the same number.StratRef can also be used as the first argument to Extern, for cases where you need to dynamically refer to other strategies.",
    "snippet": "Data:\n    Example_Parametersstrategy: Parametersstrategy(...)",
    "sources": [
      "manual.txt:4370"
    ]
  },
  {
    "name": "Parametersstring",
    "category": "function",
    "signature": "Parametersstring()",
    "description": "a literal string enclosed in either double or single quotes (\"string\" or 'string') or a string functionsubstring - a string (or function) containing the substring to findReturn ValueThe offset to the substring if found, starting with 1 if found at the beginning of the string, or 0 if not found.NotesAll string comparisons in RealTest are case-insensitive.",
    "snippet": "Data:\n    Example_Parametersstring: Parametersstring(...)",
    "sources": [
      "manual.txt:3684"
    ]
  },
  {
    "name": "Parameterssymbol",
    "category": "function",
    "signature": "Parameterssymbol()",
    "description": "any formula returning a string or a numberReturn ValueThe current symbol number of the specified symbol, or 0 if not foundNotesIf the current symbol is MSFT, then $MSFT, Symbol, SymRef(Symbol), SymRef(?Symbol), and SymRef(\"MSFT\") will each return the same number.SymRef can also be used as the first argument to Extern, for cases where you need to dynamically refer to other symbols.",
    "snippet": "Data:\n    Example_Parameterssymbol: Parameterssymbol(...)",
    "sources": [
      "manual.txt:4394"
    ]
  },
  {
    "name": "Parameterstype",
    "category": "function",
    "signature": "Parameterstype()",
    "description": "event type numberlatest - most-recent (1) vs. this-bar-only (0) flag -- 0 is the defaultNotesIf the current data file includes a user-defined Event List, this function looks up an event code for the current symbol and bar.If an event is found that has type as its type number, then its value is returned.",
    "snippet": "Data:\n    Example_Parameterstype: Parameterstype(...)",
    "sources": [
      "manual.txt:3600"
    ]
  },
  {
    "name": "Parametersvalue",
    "category": "function",
    "signature": "Parametersvalue()",
    "description": "the value to look upvalue1...valueN - values to compare it toReturn Value1 (true) if value is one of the set of values, 0 (false) otherwiseNotesInSet(Symbol, $AAPL, $GOOGL, $MSFT) is equivalent to:Symbol = $AAPL or Symbol = $GOOGL or Symbol = $MSFTArguments can be numeric or strings. If strings then comparison is case-insensitive.",
    "snippet": "Data:\n    Example_Parametersvalue: Parametersvalue(...)",
    "sources": [
      "manual.txt:3766"
    ]
  },
  {
    "name": "PositionSize",
    "category": "strategy_statement",
    "signature": "PositionSize: expression",
    "description": "Custom sizing logic based on equity or risk.",
    "snippet": "Strategy: VolAdjust\n    PositionSize: (0.01 * S.Equity) / ATR(14)",
    "sources": [
      "manual.txt:N/A"
    ]
  },
  {
    "name": "QtyType",
    "category": "strategy_statement",
    "signature": "QtyType: Shares|Percent|Value|Risk",
    "description": "Specifies how quantity statements should be interpreted.",
    "snippet": "Strategy: AllWeather\n    QtyType: Percent",
    "sources": [
      "manual.txt:3987",
      "samples/bensdorp_book.rts:89",
      "samples/cii_rotate.rts:60",
      "samples/combined.rts:32",
      "samples/combined_multi_bar_size.rts:31",
      "samples/combined_rebalance.rts:27",
      "samples/dalio_all_weather.rts:29",
      "samples/dalio_all_weather_maxdiff.rts:36",
      "samples/flipper.rts:38",
      "samples/goal_30_15.rts:47",
      "samples/goal_30_15_asx.rts:48",
      "samples/goal_30_15_tsx.rts:46",
      "samples/hybrid_asset_allocation.rts:44",
      "samples/keller_baa.rts:41",
      "samples/martingale.rts:21",
      "samples/mr_sample_common.rts:40",
      "samples/mr_sample_hedged.rts:15",
      "samples/mr_sample_orders_alera.rts:38",
      "samples/mr_sample_orders_basket.rts:39",
      "samples/mr_sample_test_scan.rts:43",
      "samples/multi_moc_top_down.rts:71",
      "samples/ndx_plus_wtf_script.rts:44",
      "samples/ndx_plus_wtf_tradelists.rts:28",
      "samples/ndx_rotate.rts:36",
      "samples/ndx_rotate_factor_test.rts:55",
      "samples/ndx_rotate_make_tradelist.rts:38",
      "samples/ndx_rotate_rebalance.rts:32",
      "samples/ndx_rotate_weekly_reduce.rts:31",
      "samples/optimal_diversity.rts:35",
      "samples/radge_bbo.rts:46",
      "samples/scale_in.rts:15",
      "samples/sector_etfs.rts:34",
      "samples/sector_etfs_breadth.rts:62",
      "samples/simple_day_trade.rts:38",
      "samples/spy_tlt_uis.rts:52",
      "samples/two_accounts.rts:66",
      "samples/two_accounts_rebalance.rts:66",
      "samples/vigilant_asset_allocation.rts:38",
      "samples/vxx_long_short.rts:28",
      "samples/weekly_moc_asx.rts:44",
      "samples/weekly_moc_asx_daily_daily.rts:41",
      "samples/weekly_moc_asx_daily_weekly.rts:36",
      "samples/weekly_trend_follow.rts:35",
      "samples/weekly_trend_follow_make_tradelist.rts:39"
    ]
  },
  {
    "name": "Quantity",
    "category": "strategy_statement",
    "signature": "Quantity: expression",
    "description": "Defines shares or value for each trade, often used with QtyType.",
    "snippet": "Strategy: AllWeather\n    Quantity: Item(\"alloc{?}\", ?symbol)",
    "sources": [
      "manual.txt:3987",
      "samples/bensdorp_book.rts:99",
      "samples/cii_rotate.rts:59",
      "samples/clenow_stocks_on_move.rts:63",
      "samples/clenow_stocks_on_move_dynamic.rts:56",
      "samples/combined.rts:31",
      "samples/combined_multi_bar_size.rts:30",
      "samples/combined_rebalance.rts:26",
      "samples/dalio_all_weather.rts:28",
      "samples/dalio_all_weather_maxdiff.rts:35",
      "samples/dividend_capture.rts:44",
      "samples/es_compare.rts:23",
      "samples/flipper.rts:37",
      "samples/futures_trend_follow_csi.rts:37",
      "samples/futures_trend_follow_simple.rts:33",
      "samples/futures_volume_rank.rts:49",
      "samples/gc_kelly.rts:32",
      "samples/goal_30_15.rts:52",
      "samples/goal_30_15_asx.rts:53",
      "samples/goal_30_15_tsx.rts:51",
      "samples/higher_lows.rts:43",
      "samples/hybrid_asset_allocation.rts:43",
      "samples/hybrid_asset_allocation_dynamic.rts:47",
      "samples/keller_baa.rts:40",
      "samples/keltner_pullback.rts:43",
      "samples/martingale.rts:20",
      "samples/mhp_classic.rts:34",
      "samples/mr_sample_common.rts:39",
      "samples/mr_sample_hedged.rts:14",
      "samples/mr_sample_orders_alera.rts:37",
      "samples/mr_sample_orders_basket.rts:38",
      "samples/mr_sample_test_scan.rts:42",
      "samples/mr_sample_tracking_alloc.rts:17",
      "samples/mr_sample_tradelist.rts:20",
      "samples/multi_moc_top_down.rts:70",
      "samples/ndx_plus_wtf_script.rts:43",
      "samples/ndx_plus_wtf_tradelists.rts:27",
      "samples/ndx_rotate.rts:35",
      "samples/ndx_rotate_factor_test.rts:54",
      "samples/ndx_rotate_make_tradelist.rts:37",
      "samples/ndx_rotate_rebalance.rts:33",
      "samples/ndx_rotate_weekly_reduce.rts:30",
      "samples/oex_tf_auto_track.rts:79",
      "samples/oex_tf_fresh_signal.rts:25",
      "samples/oex_tf_top_down.rts:52",
      "samples/optimal_diversity.rts:36",
      "samples/radge_bbo.rts:45",
      "samples/scale_in.rts:14",
      "samples/sector_etfs.rts:33",
      "samples/sector_etfs_breadth.rts:61",
      "samples/simple_day_trade.rts:37",
      "samples/spy_tlt_uis.rts:59",
      "samples/tf_dynamic_size.rts:41",
      "samples/tf_sell_half_at_1R.rts:24",
      "samples/trend_following_basics.rts:69",
      "samples/turtles.rts:61",
      "samples/two_accounts.rts:65",
      "samples/two_accounts_rebalance.rts:65",
      "samples/vigilant_asset_allocation.rts:37",
      "samples/vx_futures.rts:19",
      "samples/vxx_long_short.rts:32",
      "samples/weekly_moc_asx.rts:43",
      "samples/weekly_moc_asx_daily_daily.rts:40",
      "samples/weekly_moc_asx_daily_weekly.rts:35",
      "samples/weekly_trend_follow.rts:34",
      "samples/weekly_trend_follow_make_tradelist.rts:38"
    ]
  },
  {
    "name": "ROC",
    "category": "function",
    "signature": "ROC(series, length)",
    "description": "Percentage rate of change over the lookback period.",
    "snippet": "Data:\n    Momentum63: ROC(C, 63)",
    "sources": [
      "manual.txt:3452",
      "samples/beta_indicator.rts:16",
      "samples/cii_rotate.rts:24",
      "samples/clenow_stocks_on_move.rts:36",
      "samples/clenow_stocks_on_move_dynamic.rts:36",
      "samples/combined.rts:35",
      "samples/combined_multi_bar_size.rts:34",
      "samples/combined_rebalance.rts:30",
      "samples/correl_multi.rts:24",
      "samples/gics_indu_rank.rts:17",
      "samples/goal_30_15.rts:29",
      "samples/goal_30_15_asx.rts:30",
      "samples/goal_30_15_tsx.rts:28",
      "samples/hybrid_asset_allocation.rts:29",
      "samples/hybrid_asset_allocation_dynamic.rts:28",
      "samples/ibd_rs.rts:14",
      "samples/industry_indices.rts:23",
      "samples/keller_baa.rts:26",
      "samples/multi_moc_top_down.rts:42",
      "samples/ndx_plus_wtf_script.rts:26",
      "samples/ndx_rotate.rts:25",
      "samples/ndx_rotate_factor_test.rts:38",
      "samples/ndx_rotate_make_tradelist.rts:27",
      "samples/ndx_rotate_rebalance.rts:20",
      "samples/ndx_rotate_weekly_reduce.rts:20",
      "samples/oex_tf_auto_track.rts:77",
      "samples/oex_tf_fresh_signal.rts:33",
      "samples/oex_tf_top_down.rts:41",
      "samples/optimal_diversity.rts:31",
      "samples/sctr.rts:9",
      "samples/sector_etfs_breadth.rts:40",
      "samples/simple_day_trade.rts:28",
      "samples/two_accounts.rts:28",
      "samples/two_accounts_rebalance.rts:28",
      "samples/vigilant_asset_allocation.rts:26",
      "samples/weekly_moc_asx.rts:38",
      "samples/weekly_moc_asx_daily_daily.rts:30",
      "samples/weekly_moc_asx_daily_weekly.rts:29",
      "samples/weekly_trend_follow.rts:22",
      "samples/weekly_trend_follow_make_tradelist.rts:26"
    ]
  },
  {
    "name": "RRSI",
    "category": "function",
    "signature": "RRSI(2, 50)",
    "description": "- the results will be the same (or very close).(RRSI is much faster than TargetPrice because it can calculate the needed price deterministically. TargetPrice is meant for use with other indicators that don't support a deterministic reverse version, e.g. CRSI.)The expression passed to TargetPrice should not be a reference to a Data array containing a previously-calculated indicator. The iterative search process requires multiple recalculations of the indicator while searching for the needed price. Data items are not recalculated for this purpose.It is NOT recommended to use TargetPrice within a Data Section formula. It is best suited for use in an EntryLimit or ExitLimit formula, where it will only be evaluated for each setup or open position respectively, not for every bar of every stock in the universe. This is not a speedy function, especially when used with long-lookback indicators.",
    "snippet": "Data:\n    Example_RRSI: RRSI(...)",
    "sources": [
      "manual.txt:4468"
    ]
  },
  {
    "name": "RealTest",
    "category": "function",
    "signature": "RealTest()",
    "description": "import -scan my_scan.rtsif errorlevel 1 goto error",
    "snippet": "Data:\n    Example_RealTest: RealTest(...)",
    "sources": [
      "manual.txt:2732",
      "samples/beta_indicator.rts:2",
      "samples/futures_trend_follow_csi.rts:6",
      "samples/import_tiingo.rts:3"
    ]
  },
  {
    "name": "Report",
    "category": "function",
    "signature": "Report()",
    "description": "generates the per-strategy and per-month summary report at the end of the test\u00b7 Trades - displays the round-trip trade list at the end of the test\u00b7 Graph - opens a stats graph at the start of the test and updates it dynamically as the test runs\u00b7 Scan - runs a TestScan simultaneously with the test, allowing fully customizable output of test-related data\u00b7 Log - generates a detailed transaction and position log and displays it at the end of the test\u00b7 Debug - opens the debug panel before closing end-of-test positions to allow full examination of the test context on the last date, and whether to show output from DebugEntry, DebugExit and DebugTargetStop statements (if any) in the script",
    "snippet": "Data:\n    Example_Report: Report(...)",
    "sources": [
      "manual.txt:2435",
      "samples/actual_trades.rts:57",
      "samples/management_fees.rts:22"
    ]
  },
  {
    "name": "Results.rts",
    "category": "function",
    "signature": "Results.rts()",
    "description": "provides Results Section formulas defining the columns to display in Results Windows \u00b7 Graphs.rts - provides Graphs Section formulas defining the types of graphs available in Graph Windows\u00b7 Trades.rts - provides Trades Section formulas defining the columns to display in Trades Windows\u00b7 Charts.rts - provides Charts Section formulas defining the indicators to be added to Chart WindowsThese four scripts are automatically included in any script that is parsed IF that script (or other scripts it includes) does not already define the corresponding section. For example, if your script has no Results section (as it typically will not), then the default Results.rts is automatically included. This ensures that the contents of the four window types listed above are always defined.When a default script needs to be included, RealTest looks for it in the following locations:1.The folder of the script being parsed2.The folder in which RealTest is installed (c:\\RealTest by default)The RealTest Installer puts the \"factory default\" versions of these four scripts in your installation folder to ensure that they're always available. It is often a good practice to copy these to your Scripts folder before making changes, so that your \"working\" versions will be with your own scripts.When you define any of the above four sections in any of your own scripts, this means that the corresponding default script will NOT be included. For example if you add a Results section to a script with some strategy definitions,the columns defined by that section are the only columns that will appear in the Results window.If you would like to include the default items AND add a few of your own, you can do so as in this example:",
    "snippet": "Data:\n    Example_Results.rts: Results.rts(...)",
    "sources": [
      "manual.txt:2992",
      "samples/spy_tlt_uis.rts:16"
    ]
  },
  {
    "name": "Right",
    "category": "function",
    "signature": "Right()",
    "description": "click on a result, select \"Show Trade List\" (or press Ctrl+T), and then double-click on any row in that list to display the trade on a chart. Once the chart is open, use the UP and DOWN arrow keys to quickly cycle through the trades (an oddly difficult task in most other backtesting software).As with results and graphs windows, trade lists have an underlying script (Trades.RTS) which defines any custom columns you wish to add. Trade List Windows include 13 standard columns plus any number of user-defined columns.If no extra columns are specified, a trade list will show only these standard columns:",
    "snippet": "Data:\n    Example_Right: Right(...)",
    "sources": [
      "manual.txt:2474",
      "samples/mr_sample.rts:7",
      "samples/mr_sample_benchmark.rts:3",
      "samples/mr_sample_debug.rts:5",
      "samples/mr_sample_hedged.rts:3",
      "samples/mr_sample_long_only.rts:6",
      "samples/mr_sample_short_only.rts:6",
      "samples/mr_sample_tracking.rts:6",
      "samples/mr_sample_tracking_alloc.rts:5",
      "samples/simple_day_trade_basket_orders.rts:5",
      "samples/simple_day_trade_basket_scan.rts:5"
    ]
  },
  {
    "name": "Run",
    "category": "function",
    "signature": "Run()",
    "description": "mode-specific settings sections must appear after the general Settings section in a script if both are present.Any setting in a run-mode-specific settings section will override the same setting in the general settings section when the script is being run in that particular mode.Any setting in a run-mode-specific settings section that is not also in the general settings section will get its default value when the script is not run in that mode.A few of these script-specifiable settings can also be specified interactively using the Settings Panel.For those settings that appear on that panel, if the setting is not specified in the script then the value currently showing on the panel will be used.When a script is running, the settings panel will temporarily display any settings that the script has specified that also appear on the panel.When the run is finished, most settings panel settings are restored to their prior values. In other words, most script-specified settings do not persist in the user interface.Exceptions to the above are: DataFile and BarSize. Those persist on the settings panel because Data Section arrays that persist in memory are dependent on those settings and would need to be recalculated if they were changed.The following is a table of all available settings with their types and defaults:Setting Type DefaultAccountSize dollars settings panelAccountType CashNextDay, CashSameDay, Margin MarginAllowSameName True or False FalseAlwaysImport True or False FalseBarSize Daily, Weekly, Monthly, Quarterly, Yearly settings panel",
    "snippet": "Data:\n    Example_Run: Run(...)",
    "sources": [
      "manual.txt:3057",
      "samples/actual_trades.rts:2",
      "samples/bensdorp_book.rts:36",
      "samples/breadth.rts:3",
      "samples/dividend_capture.rts:35",
      "samples/dividend_yield_series.rts:27",
      "samples/djia_earnings.rts:4",
      "samples/djia_make_syminfo.rts:3",
      "samples/djia_use_syminfo.rts:3",
      "samples/es_compare.rts:4",
      "samples/hybrid_asset_allocation.rts:54",
      "samples/import_norgate.rts:14",
      "samples/import_tiingo.rts:13",
      "samples/mr_sample_orders.rts:8",
      "samples/mr_sample_orders_alera.rts:11",
      "samples/mr_sample_orders_basket.rts:11",
      "samples/mr_sample_scan.rts:15",
      "samples/mr_sample_test_scan.rts:17",
      "samples/mr_sample_tradelist.rts:4",
      "samples/ndx_rotate_factor_test.rts:3",
      "samples/optimal_diversity.rts:6",
      "samples/Sample1.rts:3",
      "samples/simple_day_trade.rts:12",
      "samples/simple_day_trade_basket_scan.rts:19",
      "samples/spy_tlt_uis.rts:6",
      "samples/supertrend.rts:3",
      "samples/weekly_moc_asx_daily_daily.rts:35",
      "samples/weekly_moc_asx_daily_weekly.rts:33"
    ]
  },
  {
    "name": "S.Equity",
    "category": "function",
    "signature": "S.Equity()",
    "description": "S.Equity[1].",
    "snippet": "Data:\n    Example_S.Equity: S.Equity(...)",
    "sources": [
      "manual.txt:4175",
      "samples/gc_kelly.rts:32",
      "samples/keltner_pullback.rts:43",
      "samples/mr_sample_tracking.rts:10",
      "samples/oex_tf_auto_track.rts:54",
      "samples/oex_tf_top_down.rts:41",
      "samples/radge_bbo.rts:25",
      "samples/tf_dynamic_size.rts:31",
      "samples/turtles.rts:46",
      "samples/two_accounts.rts:55"
    ]
  },
  {
    "name": "S.Invested",
    "category": "function",
    "signature": "S.Invested()",
    "description": "S.M2M.For futures positions \"shares\" above means (contracts * point value), i.e., S.Invested uses notional dollars.Use Combined or Extern to obtain this value for all strategies or for a specific other strategy or StatsGroup.",
    "snippet": "Data:\n    Example_S.Invested: S.Invested(...)",
    "sources": [
      "manual.txt:4137",
      "samples/mr_sample_hedged.rts:9"
    ]
  },
  {
    "name": "S.LongInv",
    "category": "function",
    "signature": "S.LongInv()",
    "description": "total dollar value held overnight in open long positions\u00b7 S.LossAmt - dollar (or base currency) P&L of losing trades this period\u00b7 S.LossBars - duration of losing trades this period\u00b7 S.Losses - count of losing exits this period\u00b7 S.LossPct - percent P&L of losing trades this period based on position size\u00b7 S.LossPctAlloc - percent P&L of losing trades this period based on allocation\u00b7 S.M2M - net mark-to-market\u00b7 S.MAE - maximum adverse excursion (worst intraday drawdown)\u00b7 S.MaxAlloc - highest allocation amount\u00b7 S.MaxDDBars - longest drawdown duration\u00b7 S.MaxDDDlr - largest dollar drawdown\u00b7 S.MaxDDPct - largest percent drawdown\u00b7 S.MaxEquity - highest equity amount\u00b7 S.MFE - maximum favorable excursion (best intraday runup)\u00b7 S.MinAlloc - lowest allocation amount\u00b7 S.MinEquity - lowest equity amount\u00b7 S.NetDlr - dollar change in allocation value for this period\u00b7 S.NetPct - percent change in allocation value for this period\u00b7 S.NetFx - sum of net currency exchange rate change impact on trade profit or loss for this period\u00b7 S.Number - number of current stat period in a test\u00b7 S.Positions - count of overnight open positions\u00b7 S.RollCosts - total futures roll costs this period\u00b7 S.Setups - total count of entry setups this period\u00b7 S.ShortExp - total percent of allocation held overnight in open short positions\u00b7 S.ShortInv - total dollar value held overnight in open short positions\u00b7 S.Slips - total slippage this period\u00b7 S.StartEquity - starting equity amount\u00b7 S.Stops - count of exits that were stops this period\u00b7 S.Targets - count of exits that were targets this period\u00b7 S.TradeBars - duration of all trades this period\u00b7 S.TradeDlr - dollar P&L of all trades this period\u00b7 S.TradePct - percent P&L of all trades this period based on position size\u00b7 S.TradePcAlloc - percent P&L of all trades this period based on allocation\u00b7 S.TWEQ - time-weighted equity value\u00b7 S.Usage - total long+short dollars in intraday open positions\u00b7 S.WinAmt - dollar (or base currency) P&L of winning trades this period\u00b7 S.WinBars - duration of winning trades this period\u00b7 S.WinPct - percent P&L of winning trades this period based on position size",
    "snippet": "Data:\n    Example_S.LongInv: S.LongInv(...)",
    "sources": [
      "manual.txt:3199"
    ]
  },
  {
    "name": "S.Number",
    "category": "function",
    "signature": "S.Number()",
    "description": "S.First + 1, and is then used in all of the stats calculations that require a test period count.By using Periods in this way, the stats accurately reflect the span of time which which actual trading occurs, and omit any \"warm-up\" bars where indicators are still being calculated.The Combined S.First value is the smallest value for any strategy (benchmark strategies are not included in combined stats).In the Summary Report, the individual strategy stats will each reflect that strategy's number of periods (assuming default results.rts formulas).The bar size units of S.First will always be the test-level bar size, not the strategy-specific bar size.",
    "snippet": "Data:\n    Example_S.Number: S.Number(...)",
    "sources": [
      "manual.txt:4129",
      "samples/management_fees.rts:17"
    ]
  },
  {
    "name": "S.WinPcAlloc",
    "category": "function",
    "signature": "S.WinPcAlloc()",
    "description": "percent P&L of winning trades this period based on allocation\u00b7 S.Wins - count of winning exits this period",
    "snippet": "Data:\n    Example_S.WinPcAlloc: S.WinPcAlloc(...)",
    "sources": [
      "manual.txt:3200"
    ]
  },
  {
    "name": "SPX",
    "category": "function",
    "signature": "SPX()",
    "description": "S&P 500 industry indices$SP1500 - S&P 1500 industry indices$XJO -ASX 200 industry indices$XKO - ASX 300 industry indicesNotesUsed in conjunction with CIILevel to add corresponding index references to each import stock symbol.Causes the relevant index symbols to be automatically added to the import as well.Automatically-added index symbols are placed in virtual ListNum = 99.The specific industry index for the current symbol can be referenced using Extern(&99, expression).",
    "snippet": "Data:\n    Example_SPX: SPX(...)",
    "sources": [
      "manual.txt:3424",
      "samples/beta_indicator.rts:27",
      "samples/cii_rotate.rts:13",
      "samples/clenow_stocks_on_move.rts:13",
      "samples/clenow_stocks_on_move_dynamic.rts:13",
      "samples/import_norgate.rts:24",
      "samples/industry_indices.rts:5",
      "samples/ndx_plus_wtf_script.rts:9",
      "samples/sample_scan.rts:2",
      "samples/stockbee_mm.rts:8",
      "samples/weekly_trend_follow.rts:7",
      "samples/weekly_trend_follow_make_tradelist.rts:8",
      "samples/yield_rank.rts:12"
    ]
  },
  {
    "name": "Self",
    "category": "function",
    "signature": "Self()",
    "description": "Referential Items",
    "snippet": "Data:\n    Example_Self: Self(...)",
    "sources": [
      "manual.txt:368",
      "samples/flipper.rts:22",
      "samples/supertrend.rts:6"
    ]
  },
  {
    "name": "Settings",
    "category": "function",
    "signature": "Settings()",
    "description": "include the test settings and parameter listStats - include the test summary statsMonthly - include the monthly returns tableCorrel - include the strategy correlation matrixGraphs - include the stats graphsPlots - include trade scatter and Monte Carlo plotsScript - include the script used to run the testNotesWhen ReportContent is specified by a script, the choices persist until changed later, either by script or in the Report Options Dialog.",
    "snippet": "Data:\n    Example_Settings: Settings(...)",
    "sources": [
      "manual.txt:4064",
      "samples/actual_trades.rts:14",
      "samples/anchored_vwap.rts:13",
      "samples/annual_taxes.rts:18",
      "samples/bensdorp_book.rts:12",
      "samples/beta_indicator.rts:21",
      "samples/breadth.rts:23",
      "samples/cii_rotate.rts:38",
      "samples/cl_term_structure.rts:37",
      "samples/clenow_stocks_on_move.rts:15",
      "samples/clenow_stocks_on_move_dynamic.rts:15",
      "samples/combined.rts:15",
      "samples/combined_multi_bar_size.rts:15",
      "samples/combined_rebalance.rts:4",
      "samples/correl_multi.rts:14",
      "samples/dalio_all_weather.rts:11",
      "samples/dalio_all_weather_maxdiff.rts:11",
      "samples/dividend_capture.rts:15",
      "samples/dividend_yield_series.rts:20",
      "samples/djia_earnings.rts:16",
      "samples/djia_make_syminfo.rts:13",
      "samples/djia_use_syminfo.rts:15",
      "samples/ehlers_windows.rts:12",
      "samples/es_compare.rts:14",
      "samples/flipper.rts:12",
      "samples/fundamentals.rts:14",
      "samples/futures_calendar_spread.rts:23",
      "samples/futures_trend_follow_csi.rts:11",
      "samples/futures_trend_follow_simple.rts:25",
      "samples/futures_volume_rank.rts:21",
      "samples/gc_kelly.rts:23",
      "samples/goal_30_15.rts:11",
      "samples/goal_30_15_asx.rts:14",
      "samples/goal_30_15_tsx.rts:14",
      "samples/higher_lows.rts:10",
      "samples/hybrid_asset_allocation.rts:17",
      "samples/hybrid_asset_allocation_dynamic.rts:16",
      "samples/ibd_rs.rts:6",
      "samples/import_multi.rts:38",
      "samples/import_norgate.rts:19",
      "samples/import_tiingo.rts:25",
      "samples/index_breadth.rts:19",
      "samples/industry_indices.rts:32",
      "samples/keller_baa.rts:16",
      "samples/keltner_pullback.rts:25",
      "samples/management_fees.rts:34",
      "samples/martingale.rts:10",
      "samples/mhp_classic.rts:13",
      "samples/mr_sample.rts:9",
      "samples/mr_sample_common.rts:13",
      "samples/mr_sample_debug.rts:8",
      "samples/mr_sample_long_only.rts:8",
      "samples/mr_sample_orders.rts:8",
      "samples/mr_sample_orders_alera.rts:11",
      "samples/mr_sample_orders_basket.rts:11",
      "samples/mr_sample_scan.rts:13",
      "samples/mr_sample_short_only.rts:8",
      "samples/mr_sample_test_scan.rts:13",
      "samples/mr_sample_tradelist.rts:14",
      "samples/multi_filter_scan.rts:4",
      "samples/multi_moc_top_down.rts:12",
      "samples/ndx_plus_wtf_script.rts:14",
      "samples/ndx_plus_wtf_tradelists.rts:13",
      "samples/ndx_rotate.rts:14",
      "samples/ndx_rotate_factor_test.rts:5",
      "samples/ndx_rotate_make_tradelist.rts:13",
      "samples/ndx_rotate_rebalance.rts:5",
      "samples/ndx_rotate_weekly_reduce.rts:6",
      "samples/oc_all_actual.rts:17",
      "samples/oex_tf_auto_track.rts:15",
      "samples/oex_tf_fresh_signal.rts:9",
      "samples/oex_tf_top_down.rts:15",
      "samples/opex_and_vxex.rts:11",
      "samples/optimal_diversity.rts:16",
      "samples/radge_bbo.rts:13",
      "samples/Sample1.rts:12",
      "samples/Sample2.rts:5",
      "samples/Sample2a.rts:5",
      "samples/sample_scan.rts:4",
      "samples/scale_in.rts:4",
      "samples/sctr.rts:28",
      "samples/sector_etfs.rts:12",
      "samples/sector_etfs_breadth.rts:14",
      "samples/simple_day_trade.rts:11",
      "samples/spy_tlt_uis.rts:29",
      "samples/stockbee_mm.rts:31",
      "samples/supertrend.rts:40",
      "samples/tf_dynamic_size.rts:15",
      "samples/tf_sell_half_at_1R.rts:13",
      "samples/trend_following_basics.rts:14",
      "samples/turtles.rts:13",
      "samples/two_accounts.rts:16",
      "samples/two_accounts_rebalance.rts:16",
      "samples/vigilant_asset_allocation.rts:14",
      "samples/vx_futures.rts:12",
      "samples/vx_term_structure.rts:13",
      "samples/vxx_long_short.rts:13",
      "samples/weekly_moc_asx.rts:14",
      "samples/weekly_moc_asx_daily_daily.rts:4",
      "samples/weekly_moc_asx_daily_weekly.rts:4",
      "samples/weekly_trend_follow.rts:12",
      "samples/weekly_trend_follow_make_tradelist.rts:13",
      "samples/yield_rank.rts:14"
    ]
  },
  {
    "name": "SetupSum",
    "category": "function",
    "signature": "SetupSum()",
    "description": "evaluates a formula for each setup and returns the sum of values\u00b7 Shares or Contracts - number of shares or contracts in current position\u00b7 TLValueIn - the ValueIn value for a position that originated from trade list\u00b7 TLValueOut - the ValueOut value for a position that originated from trade list",
    "snippet": "Data:\n    Example_SetupSum: SetupSum(...)",
    "sources": [
      "manual.txt:3193"
    ]
  },
  {
    "name": "Shift",
    "category": "function",
    "signature": "Shift()",
    "description": "click other columns to create a multi-level sort. After sorting the results list by ascending NetProfit, double-click on the top row to open the Daily Stats Graph showing the equity curve.",
    "snippet": "Data:\n    Example_Shift: Shift(...)",
    "sources": [
      "manual.txt:2275",
      "samples/actual_trades.rts:50"
    ]
  },
  {
    "name": "Side",
    "category": "strategy_statement",
    "signature": "Side: Long|Short",
    "description": "Locks a strategy to long-only or short-only trades.",
    "snippet": "Strategy: AllWeather\n    Side: Long",
    "sources": [
      "samples/anchored_vwap.rts:33",
      "samples/bensdorp_book.rts:98",
      "samples/cii_rotate.rts:58",
      "samples/clenow_stocks_on_move.rts:58",
      "samples/clenow_stocks_on_move_dynamic.rts:63",
      "samples/combined.rts:30",
      "samples/combined_multi_bar_size.rts:28",
      "samples/combined_rebalance.rts:23",
      "samples/dalio_all_weather.rts:25",
      "samples/dalio_all_weather_maxdiff.rts:32",
      "samples/dividend_capture.rts:42",
      "samples/flipper.rts:36",
      "samples/futures_trend_follow_csi.rts:47",
      "samples/futures_trend_follow_simple.rts:32",
      "samples/futures_volume_rank.rts:48",
      "samples/gc_kelly.rts:31",
      "samples/goal_30_15.rts:58",
      "samples/goal_30_15_asx.rts:59",
      "samples/goal_30_15_tsx.rts:57",
      "samples/higher_lows.rts:42",
      "samples/hybrid_asset_allocation.rts:42",
      "samples/hybrid_asset_allocation_dynamic.rts:45",
      "samples/keller_baa.rts:36",
      "samples/keltner_pullback.rts:42",
      "samples/martingale.rts:19",
      "samples/mhp_classic.rts:41",
      "samples/mr_sample.rts:14",
      "samples/mr_sample_debug.rts:30",
      "samples/mr_sample_long_only.rts:17",
      "samples/mr_sample_orders.rts:23",
      "samples/mr_sample_orders_alera.rts:45",
      "samples/mr_sample_orders_basket.rts:46",
      "samples/mr_sample_short_only.rts:15",
      "samples/mr_sample_test_scan.rts:61",
      "samples/mr_sample_tracking.rts:16",
      "samples/mr_sample_tracking_alloc.rts:9",
      "samples/mr_sample_tradelist.rts:25",
      "samples/multi_moc_top_down.rts:69",
      "samples/ndx_plus_wtf_script.rts:42",
      "samples/ndx_plus_wtf_tradelists.rts:26",
      "samples/ndx_rotate.rts:34",
      "samples/ndx_rotate_factor_test.rts:53",
      "samples/ndx_rotate_make_tradelist.rts:36",
      "samples/ndx_rotate_weekly_reduce.rts:29",
      "samples/oex_tf_auto_track.rts:59",
      "samples/oex_tf_fresh_signal.rts:24",
      "samples/oex_tf_top_down.rts:39",
      "samples/optimal_diversity.rts:45",
      "samples/radge_bbo.rts:24",
      "samples/scale_in.rts:13",
      "samples/sector_etfs.rts:32",
      "samples/sector_etfs_breadth.rts:60",
      "samples/simple_day_trade.rts:36",
      "samples/spy_tlt_uis.rts:51",
      "samples/supertrend.rts:46",
      "samples/tf_dynamic_size.rts:36",
      "samples/tf_sell_half_at_1R.rts:23",
      "samples/trend_following_basics.rts:68",
      "samples/turtles.rts:65",
      "samples/two_accounts.rts:64",
      "samples/two_accounts_rebalance.rts:64",
      "samples/vigilant_asset_allocation.rts:36",
      "samples/vx_futures.rts:51",
      "samples/vxx_long_short.rts:31",
      "samples/weekly_moc_asx.rts:42",
      "samples/weekly_moc_asx_daily_daily.rts:39",
      "samples/weekly_moc_asx_daily_weekly.rts:34",
      "samples/weekly_trend_follow.rts:33",
      "samples/weekly_trend_follow_make_tradelist.rts:37"
    ]
  },
  {
    "name": "Single",
    "category": "function",
    "signature": "Single()",
    "description": "Strategy Systems\u00b7 cii_rotate.rts - shows how to use Norgate's Corresponding Industry Index capability to hold the top 3 stocks of the top 5 industries each month\u00b7 clenow_stocks_on_move.rts - implements this strategy from a well-known book (dynamic sizing is done the old way)\u00b7 clenow_stocks_on_move_dynamic.rts - implements the same strategy as above using dynamic sizing mode\u00b7 dalio_all_weather.rts - implements the Ray Dalio \"All-Weather Portfolio\"\u00b7 dalio_all_weather_maxdiff.rts - same as above but waits for X% difference before rebalancing\u00b7 dividend_capture.rts - shows how to use Norgate dividend data and a slightly unusual approach to capturing dividends\u00b7 flipper.rts - a simple implementation of the Nick Radge \"Flipper\" strategy idea\u00b7 higher_lows.rts - a trend-following strategy that uses a series of higher pivot lows as an entry signal\u00b7 hybrid_asset_allocation.rts - implements this Keller and Keuning monthly ETF rotational strategy\u00b7 hybrid_asset_allocation_dynamic.rts - implements the above with partial entries and exits\u00b7 keltner_pullback.rts - a pullback-after-momentum strategy based on the work of Adam Grimes, uses risk-based position sizing\u00b7 ndx_rotate.rts - a simple momentum-based rotational strategy using Nasdaq 100 component stocks",
    "snippet": "Data:\n    Example_Single: Single(...)",
    "sources": [
      "manual.txt:2239",
      "samples/combined.rts:35",
      "samples/combined_multi_bar_size.rts:34",
      "samples/combined_rebalance.rts:30",
      "samples/goal_30_15.rts:2",
      "samples/import_csv.rts:6",
      "samples/import_multi.rts:44",
      "samples/mr_sample_tradelist.rts:2",
      "samples/sector_etfs.rts:19",
      "samples/trend_following_basics.rts:2"
    ]
  },
  {
    "name": "StatisticsDescriptionBest",
    "category": "function",
    "signature": "StatisticsDescriptionBest()",
    "description": "case (\"favorable\") net gain or loss, in dollars, of all positions remaining open in this strategy on this test dateNotesThis is theoretically the best daily net P&L (M2M) value that could have occurred during this day, had all positions touched their most favorable prices simultaneously.The default \"MFE\" daily stats graph is calculated as S.MFE / S.Alloc and displayed as a percentage.",
    "snippet": "Data:\n    Example_StatisticsDescriptionBest: StatisticsDescriptionBest(...)",
    "sources": [
      "manual.txt:4158"
    ]
  },
  {
    "name": "StatisticsDescriptionWorst",
    "category": "function",
    "signature": "StatisticsDescriptionWorst()",
    "description": "case (\"adverse\") net gain or loss, in dollars, of all positions remaining open in this strategy on this test dateNotesThis is theoretically the worst daily net P&L (M2M) value that could have occurred during this day, had all positions touched their least favorable prices simultaneously.The default \"MAE\" daily stats graph is calculated as S.MAE / S.Alloc and displayed as a percentage.",
    "snippet": "Data:\n    Example_StatisticsDescriptionWorst: StatisticsDescriptionWorst(...)",
    "sources": [
      "manual.txt:4156"
    ]
  },
  {
    "name": "Strategy",
    "category": "function",
    "signature": "Strategy()",
    "description": "include normal strategy trades\u00b7 Benchmark - include benchmark strategy trades\u00b7 Skipped - include skipped trades (from each of the above categories if selected)",
    "snippet": "Data:\n    Example_Strategy: Strategy(...)",
    "sources": [
      "manual.txt:2433",
      "samples/actual_trades.rts:22",
      "samples/anchored_vwap.rts:32",
      "samples/annual_taxes.rts:29",
      "samples/bensdorp_book.rts:36",
      "samples/cii_rotate.rts:57",
      "samples/clenow_stocks_on_move.rts:2",
      "samples/clenow_stocks_on_move_dynamic.rts:2",
      "samples/combined.rts:8",
      "samples/combined_multi_bar_size.rts:2",
      "samples/combined_rebalance.rts:2",
      "samples/dalio_all_weather.rts:24",
      "samples/dalio_all_weather_maxdiff.rts:31",
      "samples/dividend_capture.rts:2",
      "samples/es_compare.rts:27",
      "samples/flipper.rts:2",
      "samples/futures_trend_follow_csi.rts:45",
      "samples/futures_trend_follow_simple.rts:2",
      "samples/futures_volume_rank.rts:4",
      "samples/gc_kelly.rts:2",
      "samples/goal_30_15.rts:56",
      "samples/goal_30_15_asx.rts:57",
      "samples/goal_30_15_tsx.rts:55",
      "samples/higher_lows.rts:1",
      "samples/hybrid_asset_allocation.rts:41",
      "samples/hybrid_asset_allocation_dynamic.rts:44",
      "samples/keller_baa.rts:35",
      "samples/keltner_pullback.rts:2",
      "samples/management_fees.rts:3",
      "samples/martingale.rts:1",
      "samples/mhp_classic.rts:39",
      "samples/mr_sample.rts:2",
      "samples/mr_sample_common.rts:36",
      "samples/mr_sample_debug.rts:27",
      "samples/mr_sample_hedged.rts:1",
      "samples/mr_sample_long_only.rts:10",
      "samples/mr_sample_orders.rts:20",
      "samples/mr_sample_orders_alera.rts:18",
      "samples/mr_sample_orders_basket.rts:35",
      "samples/mr_sample_short_only.rts:9",
      "samples/mr_sample_test_scan.rts:41",
      "samples/mr_sample_tracking.rts:2",
      "samples/mr_sample_tracking_alloc.rts:1",
      "samples/mr_sample_tradelist.rts:2",
      "samples/multi_moc_top_down.rts:2",
      "samples/ndx_plus_wtf_script.rts:41",
      "samples/ndx_plus_wtf_tradelists.rts:24",
      "samples/ndx_rotate.rts:33",
      "samples/ndx_rotate_factor_test.rts:52",
      "samples/ndx_rotate_make_tradelist.rts:35",
      "samples/ndx_rotate_rebalance.rts:30",
      "samples/ndx_rotate_weekly_reduce.rts:15",
      "samples/oc_all_actual.rts:27",
      "samples/oex_tf_auto_track.rts:2",
      "samples/oex_tf_fresh_signal.rts:29",
      "samples/oex_tf_top_down.rts:2",
      "samples/optimal_diversity.rts:5",
      "samples/radge_bbo.rts:2",
      "samples/Sample1.rts:18",
      "samples/Sample2.rts:15",
      "samples/Sample2a.rts:16",
      "samples/scale_in.rts:12",
      "samples/sector_etfs.rts:31",
      "samples/sector_etfs_breadth.rts:59",
      "samples/simple_day_trade.rts:2",
      "samples/spy_tlt_uis.rts:2",
      "samples/supertrend.rts:45",
      "samples/tf_dynamic_size.rts:2",
      "samples/tf_sell_half_at_1R.rts:2",
      "samples/trend_following_basics.rts:2",
      "samples/turtles.rts:20",
      "samples/two_accounts.rts:61",
      "samples/two_accounts_rebalance.rts:61",
      "samples/vigilant_asset_allocation.rts:35",
      "samples/vx_futures.rts:2",
      "samples/vxx_long_short.rts:2",
      "samples/weekly_moc_asx.rts:2",
      "samples/weekly_moc_asx_daily_daily.rts:2",
      "samples/weekly_moc_asx_daily_weekly.rts:2",
      "samples/weekly_trend_follow.rts:2",
      "samples/weekly_trend_follow_make_tradelist.rts:33"
    ]
  },
  {
    "name": "Symbol",
    "category": "function",
    "signature": "Symbol()",
    "description": "returns the current symbol as a string (without the leading $)\u00b7 SymRef - looks up a symbol string (without the leading $) and returns the Symbol numberIf the current symbol is MSFT, then any of the following will return its symbol number:\u00b7 $MSFT\u00b7 Symbol\u00b7 SymRef(Symbol)\u00b7 SymRef(?Symbol)\u00b7 SymRef(\"MSFT\")The special symbol $CalSym can be used to reference the CalendarSym of the current strategy.See also: Extern.",
    "snippet": "Data:\n    Example_Symbol: Symbol(...)",
    "sources": [
      "manual.txt:2928",
      "samples/actual_trades.rts:4",
      "samples/annual_taxes.rts:23",
      "samples/bensdorp_book.rts:165",
      "samples/breadth.rts:30",
      "samples/cii_rotate.rts:7",
      "samples/cl_term_structure.rts:16",
      "samples/clenow_stocks_on_move.rts:72",
      "samples/clenow_stocks_on_move_dynamic.rts:48",
      "samples/combined.rts:1",
      "samples/combined_multi_bar_size.rts:1",
      "samples/combined_rebalance.rts:28",
      "samples/correl_multi.rts:41",
      "samples/dalio_all_weather.rts:28",
      "samples/dalio_all_weather_maxdiff.rts:27",
      "samples/djia_earnings.rts:14",
      "samples/djia_make_syminfo.rts:21",
      "samples/djia_use_syminfo.rts:2",
      "samples/es_compare.rts:19",
      "samples/futures_calendar_spread.rts:12",
      "samples/futures_volume_rank.rts:41",
      "samples/hybrid_asset_allocation_dynamic.rts:41",
      "samples/import_csv.rts:16",
      "samples/import_multi.rts:15",
      "samples/import_norgate.rts:3",
      "samples/import_tiingo.rts:32",
      "samples/index_breadth.rts:27",
      "samples/industry_indices.rts:7",
      "samples/management_fees.rts:23",
      "samples/mr_sample_benchmark.rts:6",
      "samples/mr_sample_debug.rts:17",
      "samples/mr_sample_hedged.rts:12",
      "samples/multi_filter_scan.rts:2",
      "samples/oc_all_actual.rts:6",
      "samples/opex_and_vxex.rts:32",
      "samples/optimal_diversity.rts:46",
      "samples/radge_bbo.rts:26",
      "samples/sector_etfs.rts:46",
      "samples/sector_etfs_breadth.rts:22",
      "samples/simple_day_trade_basket_scan.rts:20",
      "samples/spy_tlt_uis.rts:58",
      "samples/stockbee_mm.rts:37",
      "samples/tf_dynamic_size.rts:30",
      "samples/two_accounts.rts:67",
      "samples/two_accounts_rebalance.rts:67",
      "samples/vx_term_structure.rts:22",
      "samples/vxx_long_short.rts:23"
    ]
  },
  {
    "name": "T.Bars",
    "category": "function",
    "signature": "T.Bars()",
    "description": "trade duration (same-bar entry and exit is 0)\u00b7 T.CommIn - entry commision ($)\u00b7 T.CommOut - exit commision ($)\u00b7 T.DateIn - date of trade entry (numeric yyyymmdd)\u00b7 T.DateOut - date of trade exit (yyyymmdd)\u00b7 T.Div - net dividend received or paid ($)\u00b7 T.Fraction - fraction of allocation at trade entry time that was used as the position size\u00b7 T.FxIn - currency exchange rate on trade entry date\u00b7 T.FxOut - currency exchange rate on trade exit date\u00b7 T.Highest - highest high during trade \u00b7 T.Lowest - lowest low during trade \u00b7 T.NetFx - currency exchange rate change impact on trade profit or loss\u00b7 T.NetPct - net trade profit after commission and dividend, expressed as a fraction of entry position size\u00b7 T.Points - net points gained or lost ($/share)\u00b7 T.PriceIn - trade entry price \u00b7 T.PriceOut - trade exit price \u00b7 T.Profit - net trade profit after commission and dividend, expressed in dollars\u00b7 T.PtVal - point value of symbol of a trade\u00b7 T.QtyIn - shares or contracts bought or shorted\u00b7 T.QtyOut - shares or contracts sold or covered\u00b7 T.Reason - exit or skip reason code\u00b7 T.Side - side of a trade (1=long, -1=short)\u00b7 T.SlipIn - entry slippage ($)\u00b7 T.SlipOut - exit slippage ($)\u00b7 T.SplitIn - split factor (real / adj) at entry time\u00b7 T.SplitOut - split factor (real / adj) at exit time\u00b7 T.Strat - strategy number of a trade\u00b7 T.TimeIn - trade entry time-of-day code\u00b7 T.TimeOut - trade exit time-of-day code\u00b7 T.ValueIn - value calculated by EntryTradeValue when position was entered\u00b7 T.ValueOut - value calculated by ExitTradeValue when position was exitedThese syntax elements are used most often in the special-purpose script Trades.rts or in a substitute",
    "snippet": "Data:\n    Example_T.Bars: T.Bars(...)",
    "sources": [
      "manual.txt:3202"
    ]
  },
  {
    "name": "T.FxIn",
    "category": "function",
    "signature": "T.FxIn()",
    "description": "the exchange rate on the date of trade entry (can be optionally included in the trade list, as in the above example)\u00b7 T.FxOut - ditto for the trade exit date\u00b7 T.NetFx - the net dollar impact of FX change to the trade\u00b7 S.NetFx - the sum of T.NetFx for all trades exited that day of the test (can optionally be included in the results summary or graphs)",
    "snippet": "Data:\n    Example_T.FxIn: T.FxIn(...)",
    "sources": [
      "manual.txt:2901"
    ]
  },
  {
    "name": "TestOutput",
    "category": "function",
    "signature": "TestOutput()",
    "description": "additional output and actions during and after a test\u00b7 TestScanAllDates - allows TestScan to ouput rows for every date of a test, not just the last date\u00b7 UseAvailableBars - allows simple averages and indicators to optionally be calculated with fewer bars than specified",
    "snippet": "Data:\n    Example_TestOutput: TestOutput(...)",
    "sources": [
      "manual.txt:3165",
      "samples/annual_taxes.rts:19",
      "samples/management_fees.rts:36",
      "samples/mr_sample_debug.rts:12",
      "samples/mr_sample_test_scan.rts:16"
    ]
  },
  {
    "name": "Text",
    "category": "function",
    "signature": "Text()",
    "description": "(default) only generate human-readable text ordersOrderClerk - run the backtest in Hybrid TradeList mode using the OrderClerkTrades.csv in the specified OrderClerkFolder to play back past live trades, then generate an OrderClerk-compatible CSV order list in the same OrderClerkFolder.OrderClerkSync - identical to OrderClerk mode unless there was a gap in time between the last trade in that mode and the end of available data, i.e., one or more recent days when orders were not generated. In that case, order playback switches to formula-based backtest for the missing period and additional orders are generated to re-synchronize the positions.OrderClerkStats - run a backtest in TradeList mode using the OrderClerkTrades.csv file in the specified OrderClerkFolder, for the purpose of generating live trading stats to review. Note that this mode still must be run as \"Orders\" (not \"Test\") even though no orders are generated.Rebalance - generate orders for a rotational strategy in a format compatible with IB's Portfolio Rebalance Tool.Template - use the CSV template specified in OrdersTemplate to generate an order list for use with IB Basket Trader or any other tool that requires a CSV-formatted order list which can be specified using this kind of template.NotesSee Generated Order Types for details about how RealTest maps strategy rules to generated orders.To generate any kind of orders other than Text, OrdersMode must always be specified in Settings or OrderSettings.Orders are only generated when a script is run by pressing the Orders button (not the Test button).Text orders are also generated for every other mode unless Always show text orders is unchecked in View / Program Options",
    "snippet": "Data:\n    Example_Text: Text(...)",
    "sources": [
      "manual.txt:3984",
      "samples/import_tiingo.rts:7",
      "samples/mr_sample_orders.rts:10"
    ]
  },
  {
    "name": "User",
    "category": "function",
    "signature": "User()",
    "description": "Defined Item Names",
    "snippet": "Data:\n    Example_User: User(...)",
    "sources": [
      "manual.txt:328",
      "samples/cl_term_structure.rts:8"
    ]
  },
  {
    "name": "Visible",
    "category": "function",
    "signature": "Visible()",
    "description": "add a tracking benchmark that will appear in graphs and reportsNotesWhen Tracker is specified (other than None), a Benchmark copy of the current strategy is internally created. Specifying Tracker: Hidden names the auto-generated benchmark as the strategy name with a leading underscore and with \"_track\" appended, e.g. the tracker for a strategy called \"mr_long\" would be added as \"_mr_long_track\".Specifying Tracker: Visible does the same, just without the leading underscore. (A leading underscore on a benchmark name means \"do not show this benchmark in graphs or reports\".)Use IsTracker in your strategy+tracker formulas to know which one is being evaluated.See the mr_sample_tracking.rts example script for a simple example of Tracker and IsTracker usage.See the oex_tf_auto_track.rts example script and its description in the StratData section topic for a more complex example.",
    "snippet": "Data:\n    Example_Visible: Visible(...)",
    "sources": [
      "manual.txt:4532",
      "samples/dividend_yield_series.rts:32",
      "samples/mr_sample_tracking.rts:9",
      "samples/oex_tf_auto_track.rts:60"
    ]
  },
  {
    "name": "WMA",
    "category": "function",
    "signature": "WMA((2 * WMA(expr, count/2)",
    "description": "WMA(expr, count)), SQR(count)).",
    "snippet": "Data:\n    Example_WMA: WMA(...)",
    "sources": [
      "manual.txt:3720"
    ]
  },
  {
    "name": "Walk",
    "category": "function",
    "signature": "Walk()",
    "description": "Forward Tests",
    "snippet": "Data:\n    Example_Walk: Walk(...)",
    "sources": [
      "manual.txt:211",
      "samples/spy_tlt_uis.rts:11"
    ]
  },
  {
    "name": "actual_trades.csv",
    "category": "function",
    "signature": "actual_trades.csv()",
    "description": "the list of trades used in the actual_trades.rts example\u00b7 chartist_api_template.csv - order list template file for \"The Chartist Smart API\" (Nick Radge) output format\u00b7 djia_earnings.csv - a sample list of earnings dates for the DJIA components since 1/1/2019 (not guaranteed to be accurate)\u00b7 djia_info.csv - a detailed symbol information metadata file for the DJIA components\u00b7 djia_syms.txt - symbols of the current DJIA components\u00b7 exchangemap_csi.csv - example ExchangeMap file with CSI futures exchange names\u00b7 exchangemap_ndu.csv - example ExchangeMap file with Norgate futures exchange names\u00b7 holidays.au.txt - example Australian market HolidayList file to use when generating orders\u00b7 holidays.ca.txt - example Canadian market HolidayList file to use when generating orders\u00b7 holidays.us.txt - example US market HolidayList file to use when generating orders (or simply use HolidayList: us_auto)\u00b7 ibfutures_csi.csv - futures symbol mapping from CSI to IB (add to script with SymChangeList if needed)\u00b7 ibfutures_ndu.csv - futures symbol mapping from Norgate to IB (ditto)\u00b7 ib_basket_template.csv - order list template file for IB Basket Trader output format\u00b7 spx_syminfo.csv - a detailed symbol information metadata file for the S&P 500 components\u00b7 spx_syms.txt - symbols of the current S&P 500 components",
    "snippet": "Data:\n    Example_actual_trades.csv: actual_trades.csv(...)",
    "sources": [
      "manual.txt:2246",
      "samples/actual_trades.rts:9"
    ]
  },
  {
    "name": "actual_trades.rts",
    "category": "function",
    "signature": "actual_trades.rts()",
    "description": "shows how to \"play back\" a list of trades from a CSV file\u00b7 anchored_vwap.rts - shows how to calculate volume-weighted average price anchored to a specific past date\u00b7 annual_taxes.rts - calculates capital gains and dividend income taxes for any script by simply including it at the end\u00b7 beta_indicator.rts - shows how to calculate \"beta\" of individual stocks vs. an index\u00b7 dividend_yield_series.rts - shows how to calculate the dividend yield series for all stocks\u00b7 ehlers_windows.rts - implements a set of indicators presented by John Ehlers in the Sept. 2021 issue of TASC\u00b7 fundamentals.rts - shows how to import and scan for Norgate current fundamentals\u00b7 management_fees.rts - calculates management and performance fees for any script by simply including it at the end\u00b7 oc_all_actual.rts - shows how to structure a script to play back OrderClerkTrades.csv with multiple strategies (possibly from different scripts)\u00b7 supertrend.rts - shows how to calculate and plot the \"supertrend\" indicator (dual trailing stops)\u00b7 trail_half.rts - shows how to divide a strategy into two half-allocation strategies to implement \"take half off at a target and trail the rest\"\u00b7 yield_rank.rts - shows how to calculate annualized dividend yield from actual dividends and rank stocks by their yields",
    "snippet": "Data:\n    Example_actual_trades.rts: actual_trades.rts(...)",
    "sources": [
      "manual.txt:2238"
    ]
  },
  {
    "name": "all",
    "category": "function",
    "signature": "all()",
    "description": "strategy combined constraints such as MaxExposure, MaxInvested, MaxPositions, etc.Notes.See Special Strategy Types for details.",
    "snippet": "Data:\n    Example_all: all(...)",
    "sources": [
      "manual.txt:3438",
      "samples/bensdorp_book.rts:6",
      "samples/cl_term_structure.rts:2",
      "samples/clenow_stocks_on_move.rts:55",
      "samples/clenow_stocks_on_move_dynamic.rts:3",
      "samples/combined.rts:2",
      "samples/dalio_all_weather.rts:2",
      "samples/dalio_all_weather_maxdiff.rts:2",
      "samples/es_compare.rts:8",
      "samples/fundamentals.rts:3",
      "samples/goal_30_15_asx.rts:9",
      "samples/hybrid_asset_allocation.rts:13",
      "samples/hybrid_asset_allocation_dynamic.rts:12",
      "samples/import_ms.rts:8",
      "samples/import_multi.rts:18",
      "samples/import_norgate.rts:4",
      "samples/import_tiingo.rts:22",
      "samples/industry_indices.rts:5",
      "samples/mhp_classic.rts:3",
      "samples/mr_sample_common.rts:43",
      "samples/mr_sample_orders_alera.rts:41",
      "samples/mr_sample_orders_basket.rts:42",
      "samples/mr_sample_scan.rts:15",
      "samples/mr_sample_test_scan.rts:17",
      "samples/oc_all_actual.rts:4",
      "samples/oex_tf_top_down.rts:4",
      "samples/optimal_diversity.rts:4",
      "samples/radge_bbo.rts:7",
      "samples/scale_in.rts:12",
      "samples/stockbee_mm.rts:7",
      "samples/tf_dynamic_size.rts:30",
      "samples/turtles.rts:6",
      "samples/vigilant_asset_allocation.rts:10",
      "samples/vx_futures.rts:7",
      "samples/vx_term_structure.rts:2",
      "samples/weekly_moc_asx.rts:8",
      "samples/weekly_moc_asx_daily_daily.rts:20",
      "samples/weekly_moc_asx_daily_weekly.rts:20"
    ]
  },
  {
    "name": "anti",
    "category": "function",
    "signature": "anti()",
    "description": "momentum factor:",
    "snippet": "Data:\n    Example_anti: anti(...)",
    "sources": [
      "manual.txt:2320"
    ]
  },
  {
    "name": "arg1",
    "category": "function",
    "signature": "arg1()",
    "description": "arg9 should not attempt to pass these along to a multi-bar function, refer to them with a bar offset, etc. A that point they are constants, not arrays.",
    "snippet": "Data:\n    Example_arg1: arg1(...)",
    "sources": [
      "manual.txt:3351",
      "samples/combined_rebalance.rts:18"
    ]
  },
  {
    "name": "as",
    "category": "function",
    "signature": "as()",
    "description": "traded (unadjusted) values. The same is true for QtyOut and PriceOut. If there was a split between the trade entry and exit date (or a dividend when total return data is used), QtyOut will be different from QtyIn, with the prices adjusted accordingly. This is consistent with what would happen in an actual brokerage account.The default Trades.RTS that is installed with RealTest is an example of a script which adds custom columns:",
    "snippet": "Data:\n    Example_as: as(...)",
    "sources": [
      "manual.txt:2475",
      "samples/actual_trades.rts:9",
      "samples/annual_taxes.rts:23",
      "samples/clenow_stocks_on_move.rts:51",
      "samples/combined_rebalance.rts:19",
      "samples/dividend_yield_series.rts:4",
      "samples/flipper.rts:23",
      "samples/futures_calendar_spread.rts:16",
      "samples/futures_trend_follow_csi.rts:16",
      "samples/goal_30_15.rts:18",
      "samples/goal_30_15_asx.rts:2",
      "samples/goal_30_15_tsx.rts:2",
      "samples/import_norgate.rts:3",
      "samples/import_tiingo.rts:37",
      "samples/management_fees.rts:22",
      "samples/mr_sample_common.rts:7",
      "samples/mr_sample_orders.rts:10",
      "samples/mr_sample_orders_alera.rts:61",
      "samples/mr_sample_test_scan.rts:47",
      "samples/mr_sample_tracking_alloc.rts:2",
      "samples/ndx_rotate_weekly_reduce.rts:3",
      "samples/oc_all_actual.rts:6",
      "samples/optimal_diversity.rts:6",
      "samples/scale_in.rts:1",
      "samples/spy_tlt_uis.rts:81",
      "samples/supertrend.rts:7",
      "samples/tf_dynamic_size.rts:5",
      "samples/trend_following_basics.rts:37",
      "samples/turtles.rts:8",
      "samples/weekly_moc_asx.rts:4",
      "samples/weekly_moc_asx_daily_daily.rts:45",
      "samples/weekly_moc_asx_daily_weekly.rts:2",
      "samples/yield_rank.rts:9"
    ]
  },
  {
    "name": "at",
    "category": "function",
    "signature": "at()",
    "description": "open exits then entries for each strategy (exits first to free capital for positions being entered)c. do intraday entries then exits for each strategy (entries first to avoid assuming capital can be freed when intraday fill sequence is unknown)d.do at-close exits then entries for each strategy (exits first to free capital for positions being entered)e. update daily stats for each strategyf. recalculate allocation for each strategy",
    "snippet": "Data:\n    Example_at: at(...)",
    "sources": [
      "manual.txt:2818",
      "samples/combined.rts:36",
      "samples/combined_multi_bar_size.rts:35",
      "samples/combined_rebalance.rts:31",
      "samples/dividend_capture.rts:50",
      "samples/es_compare.rts:4",
      "samples/futures_volume_rank.rts:3",
      "samples/import_norgate.rts:24",
      "samples/import_tiingo.rts:13",
      "samples/keltner_pullback.rts:56",
      "samples/management_fees.rts:3",
      "samples/mr_sample_debug.rts:14",
      "samples/mr_sample_orders.rts:3",
      "samples/mr_sample_orders_alera.rts:63",
      "samples/ndx_rotate.rts:47",
      "samples/ndx_rotate_make_tradelist.rts:49",
      "samples/oc_all_actual.rts:21",
      "samples/optimal_diversity.rts:4",
      "samples/spy_tlt_uis.rts:82",
      "samples/tf_sell_half_at_1R.rts:3",
      "samples/turtles.rts:41",
      "samples/two_accounts.rts:55",
      "samples/two_accounts_rebalance.rts:55",
      "samples/vigilant_asset_allocation.rts:28",
      "samples/weekly_moc_asx_daily_daily.rts:45",
      "samples/yield_rank.rts:4"
    ]
  },
  {
    "name": "auto",
    "category": "function",
    "signature": "auto()",
    "description": "repeat to see them all in rapid succession.Feel free to experiment with the buttons along the top of the graph (or the left and right arrow keys).To get a better sense of the relationship between these parameters and the corresponding test results, click on",
    "snippet": "Data:\n    Example_auto: auto(...)",
    "sources": [
      "manual.txt:2276",
      "samples/fundamentals.rts:3",
      "samples/industry_indices.rts:18",
      "samples/management_fees.rts:22"
    ]
  },
  {
    "name": "automatically",
    "category": "function",
    "signature": "automatically()",
    "description": "- use Classification to specify which scheme to request at Import time.For other data sources you would need to provide them via a SymInfo file.",
    "snippet": "Data:\n    Example_automatically: automatically(...)",
    "sources": [
      "manual.txt:3217",
      "samples/cii_rotate.rts:5",
      "samples/djia_use_syminfo.rts:5"
    ]
  },
  {
    "name": "back",
    "category": "function",
    "signature": "back()",
    "description": "adjusted CSI data without individual contracts included.Note also that with CSI Futures, you do not need to provide a SymInfoFile. RealTest reads and processes the futuresinfo.txt file found in each DataPath folder to get the market name, point value, and tick size for every symbol. This is why it's required to check that box in step (2) above.See Using CSI Futures Data for details about using this data in your backtests.",
    "snippet": "Data:\n    Example_back: back(...)",
    "sources": [
      "manual.txt:2599",
      "samples/combined.rts:66",
      "samples/combined_multi_bar_size.rts:63",
      "samples/combined_rebalance.rts:67",
      "samples/futures_trend_follow_csi.rts:2",
      "samples/futures_trend_follow_simple.rts:2",
      "samples/ndx_plus_wtf_tradelists.rts:2",
      "samples/oc_all_actual.rts:2",
      "samples/sector_etfs_breadth.rts:22",
      "samples/weekly_moc_asx_daily_daily.rts:32"
    ]
  },
  {
    "name": "backtestChoicesTrue",
    "category": "function",
    "signature": "backtestChoicesTrue()",
    "description": "exit all positions at the end of each test (default)False - do not exit open positionsNotesPositions exited because the test has ended will show \"end-of-test\" in the \"Reason\" column of the trade list.When EndOfTestExits is False, open positions will not appear in the trade list.Possible reasons to disable end-of-test exits are:\u00b7 to exclude still-open positions from trade-level stats \u00b7 to keep those position records in memory for inspection in the Debug Panel (previously this was controlled by the Debug choice of the TestOutput setting)",
    "snippet": "Data:\n    Example_backtestChoicesTrue: backtestChoicesTrue(...)",
    "sources": [
      "manual.txt:3570"
    ]
  },
  {
    "name": "bar",
    "category": "function",
    "signature": "bar()",
    "description": "- the window would need to be made wider to see every bar label).Pressing the right mouse button within the graph opens a menu that can be used to change the display in many ways.",
    "snippet": "Data:\n    Example_bar: bar(...)",
    "sources": [
      "manual.txt:2278",
      "samples/combined.rts:3",
      "samples/combined_multi_bar_size.rts:2",
      "samples/dividend_capture.rts:9",
      "samples/djia_earnings.rts:5",
      "samples/futures_calendar_spread.rts:15",
      "samples/import_norgate.rts:5",
      "samples/mr_sample_scan.rts:15",
      "samples/trend_following_basics.rts:21",
      "samples/weekly_moc_asx.rts:4",
      "samples/weekly_moc_asx_daily_daily.rts:22",
      "samples/weekly_moc_asx_daily_weekly.rts:22"
    ]
  },
  {
    "name": "basket",
    "category": "function",
    "signature": "basket()",
    "description": "specific ID numbers to unique internal values -- all that it requires is that they be unique and express the correct relationships within the basket file.Comparing the template to the output should serve to clarify how this works. Strings in the second row of the template that match the ones in the following table are placeholders for specific elements of each order (action, quantity, price, etc.) All other strings in the second row are simply copied to every output row, as in the above example.Here is the list of template field placeholder strings:String Description",
    "snippet": "Data:\n    Example_basket: basket(...)",
    "sources": [
      "manual.txt:2800",
      "samples/mr_sample_orders.rts:12",
      "samples/mr_sample_orders_basket.rts:1",
      "samples/simple_day_trade_basket_orders.rts:2",
      "samples/simple_day_trade_basket_scan.rts:2"
    ]
  },
  {
    "name": "bottom",
    "category": "function",
    "signature": "bottom()",
    "description": "up, based on the Quantity formula provided. The default calculation of S.Alloc is Combined(S.Equity), which is always equivalent to the NLV of a model account running all of the strategies in the script using whatever their Quantity formulas happen to be.If you use a different Allocation formula to override the default S.Alloc, or if you don't base your sizes on S.Alloc (whether explicitly or implicitly), then it would not make sense to use an OrdersNetLiq file.Even if you are using the default Allocation, you may prefer to keep sizing new positions according to the system model rather than your live account balance. OrdersNetLiq simply gives you the choice of using live NLV, it's not a requirement.See also OrdersFreeCash.",
    "snippet": "Data:\n    Example_bottom: bottom(...)",
    "sources": [
      "manual.txt:3991",
      "samples/keltner_pullback.rts:34",
      "samples/two_accounts.rts:55",
      "samples/two_accounts_rebalance.rts:55"
    ]
  },
  {
    "name": "breadth.rts",
    "category": "function",
    "signature": "breadth.rts()",
    "description": "shows how to use cross-sectional formulas in the Data Section to calculate and chart a market-breadth indicator\u00b7 correl_multi.rts - demonstrates the multi-symbol correlation functions by building a correlation matrix for DJIA constituents\u00b7 gics_indu_rank.rts - shows how to find the top X stocks in the top Y industries using GICS classification\u00b7 ibd_rs.rts - shows how to calculate IBD's relative strength ranks for any universe of stocks\u00b7 index_breadth.rts - shows the best way to calculate breadth statistics using only historical index constituents each day\u00b7 multi_filter_scan.rts - shows how to write a scan that creates multiple rows per symbol per date with different data in each row\u00b7 opex_and_vxex.rts - calculates monthly options expiration and VIX futures expiration dates",
    "snippet": "Data:\n    Example_breadth.rts: breadth.rts(...)",
    "sources": [
      "manual.txt:2236"
    ]
  },
  {
    "name": "build",
    "category": "function",
    "signature": "build()",
    "description": "in variables Arg1 - Arg9.",
    "snippet": "Data:\n    Example_build: build(...)",
    "sources": [
      "manual.txt:3070",
      "samples/supertrend.rts:2"
    ]
  },
  {
    "name": "built",
    "category": "function",
    "signature": "built()",
    "description": "in stats values are included.These list windows also make it easy to save the underlying data to CSV format or copy/paste directly to Excel for further analysis.",
    "snippet": "Data:\n    Example_built: built(...)",
    "sources": [
      "manual.txt:2448",
      "samples/mr_sample_common.rts:6"
    ]
  },
  {
    "name": "buy",
    "category": "function",
    "signature": "buy()",
    "description": "and-hold simulation, to make it easy to visually compare the strategy's equity curve to this common benchmark:",
    "snippet": "Data:\n    Example_buy: buy(...)",
    "sources": [
      "manual.txt:2305",
      "samples/es_compare.rts:2",
      "samples/martingale.rts:24",
      "samples/mr_sample_benchmark.rts:5",
      "samples/mr_sample_test_scan.rts:78",
      "samples/multi_filter_scan.rts:29",
      "samples/simple_day_trade_basket_scan.rts:22"
    ]
  },
  {
    "name": "case",
    "category": "function",
    "signature": "case()",
    "description": "sensitive.To ignore a column in a CSV file, add an extra comma to the field order list, e.g. \"date,,,open,high,low,close,,volume\".To ignore the first one or more columns, add extra comma(s) at the start of the list, e.g. \",,date,close\".",
    "snippet": "Data:\n    Example_case: case(...)",
    "sources": [
      "manual.txt:3486",
      "samples/dividend_capture.rts:50",
      "samples/opex_and_vxex.rts:18"
    ]
  },
  {
    "name": "child",
    "category": "function",
    "signature": "child()",
    "description": "specific menu is also always available as a popup menu by pressing the right mouse button within the child window.Child windows within the main window can be arranged manually or by using the commands on the Window menu. Child windows can be maximized or minimized as needed. Any specific window can be selected and activated using the Window menu as well.",
    "snippet": "Data:\n    Example_child: child(...)",
    "sources": [
      "manual.txt:2323"
    ]
  },
  {
    "name": "choiceChoicesNone",
    "category": "function",
    "signature": "choiceChoicesNone()",
    "description": "don't add any padding bars (this is the default and can be used most of the time)AllMarketDays - add a padding bar for any market day in a symbol's date range where the symbol has no barAllWeekDays - add a padding bar for any weekday in a symbol's date range where the symbol has no bar (including holidays)AllCalendarDays - add a padding bar for any date in a symbol's date range where the symbol has no bar (including weekends)AlignWithSymbol - add padding bars that the PadAlignSym symbol has but this symbol lacks, and remove bars from this symbol that the PadAlignSym lacksNotesWhen Norgate is the data source, padding of any of the above types is provided by Norgate.For other data sources, RealTest does the padding in the same way that Norgate does.When data is imported for multiple markets that have different holiday schedules, \"AllMarketDays\" means any day where any of the included markets is open.See also the general topic of Calendar Alignment.",
    "snippet": "Data:\n    Example_choiceChoicesNone: choiceChoicesNone(...)",
    "sources": [
      "manual.txt:4001"
    ]
  },
  {
    "name": "choiceChoicesTotalReturn",
    "category": "function",
    "signature": "choiceChoicesTotalReturn()",
    "description": "all types of dividends are converted to splitsCapitalSpecial - corporate restructure events (mergers etc.) and special dividends are converted to splitsCapital - (default) no dividend types are converted to splitsNone - adjustment information is not imported (not recommended)NotesRealTest receives adjusted and unadjusted prices along with split and dividend histories from Norgate and some other sources. Imported data is then stored and used in unadjusted form so that each price reference on a given date reflects the actual price that was traded on that date. When necessary for multi-bar indicator calculation or lookback comparisons, on-the-fly adjustment is performed.See Split Handling for additional details about how this works.General best practice is to use the default Capital in most cases. Here are the trade-offs for each choice:\u00b7 TotalReturn converts all dividends to splits. This makes trades held across an ex-dividend date look like their share quantities were adjusted when they actually would not have been.\u00b7 CapitalSpecial does the above for special dividends including corporate restructuring events while correctly simulating payout of ordinary dividends.\u00b7 Capital only treats actual stock splits as splits while simulating payout as a dividend of every other adjustment event. This introduces an occasional large price gap (with corresponding simulated dividend payout) around corporate restructuring events.",
    "snippet": "Data:\n    Example_choiceChoicesTotalReturn: choiceChoicesTotalReturn(...)",
    "sources": [
      "manual.txt:3320"
    ]
  },
  {
    "name": "cl_term_structure.rts",
    "category": "function",
    "signature": "cl_term_structure.rts()",
    "description": "plots the 8 most recent CL contracts and scans for the 12 most recent ones\u00b7 es_compare.rts - using Norgate futures data, tests buy and hold of two continuous contract series (adjusted and unadjusted) vs. rolling through each individual contract\u00b7 futures_calendar_spread.rts - shows two ways to construct calendar spreads using Norgate futures data\u00b7 futures_trend_follow_csi.rts - long/short trend-following example using CSI back-adjusted continuous contract data to model individual contract trading\u00b7 futures_volume_rank.rts - trend-following strategy that uses #Rank #ByMkt to trade the most active individual contract from each market and roll as needed\u00b7 gc_kelly.rts - demonstrates how to model Kelly Criterion position sizing using a simple",
    "snippet": "Data:\n    Example_cl_term_structure.rts: cl_term_structure.rts(...)",
    "sources": [
      "manual.txt:2244"
    ]
  },
  {
    "name": "color",
    "category": "function",
    "signature": "color()",
    "description": "coded lines and labels, along with the combined system results. Here is the drawdown graph, showing how the two sides of this long/short strategy will usually hedge each other to some degree:",
    "snippet": "Data:\n    Example_color: color(...)",
    "sources": [
      "manual.txt:2505"
    ]
  },
  {
    "name": "comma",
    "category": "function",
    "signature": "comma()",
    "description": "separated list)ChoicesDate - this field is the bar dateTime - this field is the bar timeOpen - this field is the open priceHigh - this field is the high priceLow - this field is the low priceClose - this field is the close priceVolume - this field is the volume",
    "snippet": "Data:\n    Example_comma: comma(...)",
    "sources": [
      "manual.txt:3484"
    ]
  },
  {
    "name": "command",
    "category": "function",
    "signature": "command()",
    "description": "noexit can optionally be added to the command line. If found, RealTest will remain open after processing the other commands. If errors are encountered in a -noexit run, RealTest will close, return an error code, and log the error to errorlog.txt, as if -noexit had not been specified.",
    "snippet": "Data:\n    Example_command: command(...)",
    "sources": [
      "manual.txt:2737"
    ]
  },
  {
    "name": "commented",
    "category": "function",
    "signature": "commented()",
    "description": "out column definitions. Feel free to uncomment them if you'd like to add them to your stats display.To change the order of the columns in the window, simply rearrange the lines of this script and then re-apply it (press F4).See Results Section for more details on results window customization.At any time, there can only be one set of results column definitions, which remain active until they are replaced. Whenever a script is run, if it contains a \"Results\" section, this becomes the active set of columns for all open results windows. If the script has no Results section, then the default RESULTS.RTS will be used instead. (This same mechanism applies to Graphs, Charts and Trades customization as well.)The summary stats displayed in the results window are always the combined results for all the strategies within the script that was run. To view the per-strategy summary statistics, select a results row and then view the Summary Report.The Results Menu, accessible by right-clicking in a Results Window or via the menu bar, provides access to all the features of this window type, including some not mentioned above.",
    "snippet": "Data:\n    Example_commented: commented(...)",
    "sources": [
      "manual.txt:2472"
    ]
  },
  {
    "name": "commonly",
    "category": "function",
    "signature": "commonly()",
    "description": "used functions and indicators, it is possible to dramatically speed up their calculation if they are structured and declared a certain way.The difference in speed between the standard calculation method and \"one-pass\" is roughly a factor of one third of the lookback length. For example, a 100-day moving average can be calculated approximately 33 times faster when the one-pass optimization can be applied.When you think about a backtest universe with 10,000 stocks going back 20 years (5000 daily bars per stock), you can start to imagine how much faster long-lookback indicators can be calculated if you structure your scripts to take advantage of one-pass mode.All of the functions and indicators listed below will be automatically calculated in one pass if and only if the following conditions are all true:\u00b7 the indicator is the only element of the data item formula (not part of a larger expression)\u00b7 the length argument is a constant (literal number) or a parameter referenceFor example, below are two ways to calculate simple uptrend / downtrend variables:",
    "snippet": "Data:\n    Example_commonly: commonly(...)",
    "sources": [
      "manual.txt:3008"
    ]
  },
  {
    "name": "compounded",
    "category": "function",
    "signature": "compounded(unspecified)",
    "description": "report stats as compounded if equity is compounded or as non-compounded if equity is not compounded (default)NotesThis setting mainly controls how percent-based stats are reported. For tests where Compounded was True, the \"ROR\" stat is compound annual return (CAR) and the denominator used to calculate percent drawdown is the peak equity value.For tests where Compounded was False, the \"ROR\" stat is average annual return (AAR) and the denominator used to calculate percent drawdown is the starting (constant) equity value.If Allocation was not specified then it will default to Combined(S.Equity) when Compounded is True or to S.StartEquity when Compounded is False.This in turn impacts Quantity (position size) calculations as the strategy runs.To deliberately show compounded stats for a non-compounded test, explicitly specify Allocation: S.Equity or Allocation: Combined(S.Equity) while using QtyType of either Shares or Value and a Quantity formula that refers to neither S.Alloc nor S.Equity.To deliberately show non-compounded stats for compounded test, explicitly specify Allocation: S.StartEquity while using QtyType of either Shares or Value and a Quantity formula that refers to S.Equity.See also Compounding.",
    "snippet": "Data:\n    Example_compounded: compounded(...)",
    "sources": [
      "manual.txt:3446",
      "samples/dividend_capture.rts:43",
      "samples/ndx_rotate_weekly_reduce.rts:46",
      "samples/turtles.rts:59"
    ]
  },
  {
    "name": "constraint",
    "category": "function",
    "signature": "constraint()",
    "description": "checking purposes are always based on OrderPrice, not on FillPrice (which can't be known yet at setup-processing time)\u00b7 all constraints are applied to the setup list prior to processing any entries\u00b7 setups for strategies that enter with limit or stop orders count towards all constraints whether or not they are filled\u00b7 this model assumes that all orders are placed in advance of the market open each day with no realtime order management (e.g. live cancellation when a capacity is reached)",
    "snippet": "Data:\n    Example_constraint: constraint(...)",
    "sources": [
      "manual.txt:2824",
      "samples/multi_moc_top_down.rts:66",
      "samples/oex_tf_top_down.rts:44"
    ]
  },
  {
    "name": "content",
    "category": "function",
    "signature": "content()",
    "description": "save this script as newscript.rts in your RealTest program folder (c:\\RealTest by default)Now, whenever you create a new script window, it will begin with that template.",
    "snippet": "Data:\n    Example_content: content(...)",
    "sources": [
      "manual.txt:2973"
    ]
  },
  {
    "name": "context",
    "category": "function",
    "signature": "context()",
    "description": "sensitive help.",
    "snippet": "Data:\n    Example_context: context(...)",
    "sources": [
      "manual.txt:2914"
    ]
  },
  {
    "name": "count",
    "category": "function",
    "signature": "count()",
    "description": "lookback periodspearman {0} - use Spearman's Rank Correlation method (default is to use Pearson's Correlation)log {0} - log the individual correlations when the formula is evaluatedNotesCorrelMed(InDJI, ROC(C,1), 20) would return the median 20-bar correlation of each DJIA constituent to the current stock.See also Correl, Spearman, CorrelAvg, CorrelMin, CorrelMinSym, CorrelMax, CorrelMaxSym",
    "snippet": "Data:\n    Example_count: count(...)",
    "sources": [
      "manual.txt:3457",
      "samples/breadth.rts:19",
      "samples/futures_calendar_spread.rts:15",
      "samples/index_breadth.rts:4",
      "samples/industry_indices.rts:28",
      "samples/multi_moc_top_down.rts:33"
    ]
  },
  {
    "name": "country",
    "category": "function",
    "signature": "country()",
    "description": "specific suffix from a symbol when generating orders, e.g. changing BHP.au to BHP.If you're generating orders for futures, see also exchangemap_csi.csv or exchangemap_ndu.csv (both are in the Examples folder).",
    "snippet": "Data:\n    Example_country: country(...)",
    "sources": [
      "manual.txt:3610"
    ]
  },
  {
    "name": "cross",
    "category": "function",
    "signature": "cross()",
    "description": "sectional rank function to calculate the strength's rank for each ETF for each date relative to the other ETFs on that date\u00b7 ValueRank is the inverse of MomoRank\u00b7 MyRank selects which of the above two ranks to use depending on the Momo parameter (allows comparison of momentum vs. mean-reversion as the ranking criterion)\u00b7 Note also that these two rank calculations deliberately exclude the SPY benchmark from the top ranks by checking the InList name in the rank formula\u00b7 Rotate evaluates to TRUE (1) for the last trading day of each monthThe strategy is defined to use the above data items as follows:\u00b7 EntrySetup must evaluate to TRUE (1) for there to be an entry at the next open. It will evaluate to TRUE for each ETF that is not SPY and whose rank is low enough (1 is top-ranked) to be within the MaxPositions threshold. All this will only occur if the next open will be the first open of a new month. The three clauses of the EntrySetup formula and the data elements that they refer to suffice to specify all of these factors.\u00b7 ExitRule is one of several exit elements a strategy can have (in this case it's the only one). This rule simply says to exit if it's a new month and the ETF is no longer among the top ranked ETFs.\u00b7 Quantity specifies the position size, in percent of current equity. S.Equity is the current account balance (including mark-to-market, i.e., net liquidation value) on any given date during the test, so this formula is simply a percentage of equity based on the Positions parameter.",
    "snippet": "Data:\n    Example_cross: cross(...)",
    "sources": [
      "manual.txt:2308"
    ]
  },
  {
    "name": "csv",
    "category": "function",
    "signature": "csv()",
    "description": "- your choice.",
    "snippet": "Data:\n    Example_csv: csv(...)",
    "sources": [
      "manual.txt:2603",
      "samples/actual_trades.rts:9",
      "samples/breadth.rts:10",
      "samples/djia_earnings.rts:10",
      "samples/djia_make_syminfo.rts:18",
      "samples/djia_use_syminfo.rts:10",
      "samples/import_csv.rts:2",
      "samples/import_multi.rts:18",
      "samples/import_yahoo.rts:7",
      "samples/management_fees.rts:22",
      "samples/mr_sample_long_only.rts:12",
      "samples/mr_sample_orders.rts:14",
      "samples/mr_sample_orders_basket.rts:19",
      "samples/mr_sample_scan.rts:16",
      "samples/mr_sample_short_only.rts:10",
      "samples/mr_sample_test_scan.rts:18",
      "samples/mr_sample_tradelist.rts:26",
      "samples/ndx_plus_wtf_tradelists.rts:7",
      "samples/ndx_rotate_make_tradelist.rts:21",
      "samples/oc_all_actual.rts:2",
      "samples/simple_day_trade_basket_orders.rts:10",
      "samples/simple_day_trade_basket_scan.rts:2",
      "samples/weekly_moc_asx.rts:24",
      "samples/weekly_moc_asx_daily_daily.rts:14",
      "samples/weekly_moc_asx_daily_weekly.rts:14",
      "samples/weekly_trend_follow_make_tradelist.rts:20"
    ]
  },
  {
    "name": "customized.Double",
    "category": "function",
    "signature": "customized.Double()",
    "description": "click on any row in the trade list to view that trade on a candlestick or bar chart:",
    "snippet": "Data:\n    Example_customized.Double: customized.Double(...)",
    "sources": [
      "manual.txt:2262"
    ]
  },
  {
    "name": "dataChoicesFalse",
    "category": "function",
    "signature": "dataChoicesFalse()",
    "description": "keep all bars (default)True - remove weekend barsNotesAs of this writing, only crypto-currency data is known to have weekend bars.The purpose of this option is to facilitate data alignment, e.g. for correlation studies between crypto and non-crypto series.",
    "snippet": "Data:\n    Example_dataChoicesFalse: dataChoicesFalse(...)",
    "sources": [
      "manual.txt:3937"
    ]
  },
  {
    "name": "definition",
    "category": "function",
    "signature": "definition()",
    "description": "- do so only when importing your own custom watchlists but still need to use InXXX in some of your formulas. A Constituency specification, if provided, must include all the indices for which InXXX is needed.The first row above is a special case. It refers to Norgate's US Major Exchange Listed time series. Add Constituency: $MEL to your import and refer to InMEL in your formulas to ensure that a stock was listed on a major exchange (not over-the-counter traded) on that date. (In practice this makes very little difference if you already use a reasonable liquidity filter.)Similarly (but not shown above) add Constituency: $SPAC to your import and refer to InSPAC in your formulas to determine whether and when a stock was trading as a \"Special Purpose Acquisition Company\".See Event List Files for details about how Constituency data is stored in an RTD file and how to provide your own such data when importing from CSV or other sources.",
    "snippet": "Data:\n    Example_definition: definition(...)",
    "sources": [
      "manual.txt:3449",
      "samples/multi_filter_scan.rts:5",
      "samples/ndx_rotate_factor_test.rts:6",
      "samples/ndx_rotate_rebalance.rts:6",
      "samples/ndx_rotate_weekly_reduce.rts:7",
      "samples/sample_scan.rts:5",
      "samples/weekly_moc_asx_daily_daily.rts:5",
      "samples/weekly_moc_asx_daily_weekly.rts:5"
    ]
  },
  {
    "name": "definitions",
    "category": "function",
    "signature": "definitions()",
    "description": "- they cannot, for example, include just one part of a Strategy definition such as a set of exit-related items.The combined scripts are parsed as one large script, so each item name (Data items etc.) must be unique across the combined scripts.Suggested names in the script editor (auto-complete) will include any names defined in included scripts.Include is applied in all script run modes. To include another script in a specific mode only, use OrdersInclude, ScanInclude or TestInclude.See also Include Section.",
    "snippet": "Data:\n    Example_definitions: definitions(...)",
    "sources": [
      "manual.txt:3737"
    ]
  },
  {
    "name": "difference",
    "category": "function",
    "signature": "difference()",
    "description": "based back adjustment. The key point is that the daily price movement, in points, remains unaffected by the adjustments (except on roll dates, when the price change from the prior day accurately reflects the difference between the two contracts involved in the roll).Here's a market that, opposite to VX, tends to be in backwardation rather than contango:",
    "snippet": "Data:\n    Example_difference: difference(...)",
    "sources": [
      "manual.txt:2904"
    ]
  },
  {
    "name": "dividend",
    "category": "function",
    "signature": "dividend()",
    "description": "adjusted but does include specific dividend amounts and dates, in order for the SPY dividends to be re-invested, the benchmark simulates exiting and re-entering the SPY position on each morning after an ex-dividend date.)Now on to the specific strategy and its implementation in this script.The concept is to trade the 9 standard sector ETFs derived from components of the S&P 500 index (XLB, XLE, XLF, XLI, XLK, XLP, XLU, XLV, XLY) using a monthly rotational rule based on momentum. The Data section defines all the variables needed to implement this strategy. Parameters are used in",
    "snippet": "Data:\n    Example_dividend: dividend(...)",
    "sources": [
      "manual.txt:2306",
      "samples/annual_taxes.rts:2",
      "samples/cii_rotate.rts:65",
      "samples/clenow_stocks_on_move.rts:73",
      "samples/clenow_stocks_on_move_dynamic.rts:65",
      "samples/dividend_capture.rts:2",
      "samples/dividend_yield_series.rts:2",
      "samples/import_csv.rts:8",
      "samples/import_multi.rts:22",
      "samples/mr_sample_benchmark.rts:5",
      "samples/optimal_diversity.rts:47",
      "samples/sector_etfs.rts:47",
      "samples/sector_etfs_breadth.rts:69",
      "samples/vigilant_asset_allocation.rts:47",
      "samples/yield_rank.rts:2"
    ]
  },
  {
    "name": "dollars",
    "category": "function",
    "signature": "dollars()",
    "description": "per-contract margin collateral for each futures symbol. By default RealTest uses the current Margin value for all historical dates in a backtest. You can optionally provide a formula to calculate estimated historical margin requirements via the FuturesMargin strategy element. RealTest does not automatically limit futures exposure based on margin requirements but can optionally do so using the MinFreeCash constraint formula and/or the S.FuturesMargin stats array. The S.FreeCash stats array (referenced internally for MinFreeCash determination) assumes that a position requires futures margin only if the symbol has a non-zero margin requirement.",
    "snippet": "Data:\n    Example_dollars: dollars(...)",
    "sources": [
      "manual.txt:2636"
    ]
  },
  {
    "name": "double",
    "category": "function",
    "signature": "double()",
    "description": "clicking on the stats row).Click on \"Plots\" to access a variety of graphical trade-level analysis tools, such as a scatter plot:",
    "snippet": "Data:\n    Example_double: double(...)",
    "sources": [
      "manual.txt:2260",
      "samples/dividend_yield_series.rts:27"
    ]
  },
  {
    "name": "early",
    "category": "function",
    "signature": "early()",
    "description": "1990s-style Windows desktop application.There are no external libraries or components required, so installation is simple and clean. The only change the installer makes to the Windows Registry is to associate the file types .RTS, .RTR and .RTD with this application. Persistent settings are stored in the realtest.ini file in the program's installation directory, rather than in the Registry. RealTest must therefore be installed to a directory which has write permission.With no data loaded, RealTest occupies less than 10mb of RAM. Data in memory occupies 64 bytes for every bar of every stock, plus 8 additional bytes per bar for each user-created data item in the active script. In practice, a set of strategies using a universe of all US common stocks going back 10 years can be tested on a computer with 4GB of RAM. For best results when including more than 10 years and/or delisted symbols, 16GB of RAM is recommended.RealTest will use up to 32 CPU threads if available. Multi-threading is only used for importing data and calculating your custom Data column formulas. The backtest engine is single-threaded but very efficient. Any CPU made in the past decade or so will be fast enough to run lots of tests in a small amount of time.Your screen should have at least 1920x1080 pixels. RealTest is \"DPI-aware\" and fully supports higher resolutions such as 4K and/or scaling factors other than 100%.RealTest also works fine on a cloud-based virtual machine, or a Mac running BootCamp or Parallels.",
    "snippet": "Data:\n    Example_early: early(...)",
    "sources": [
      "manual.txt:2219"
    ]
  },
  {
    "name": "end",
    "category": "function",
    "signature": "end()",
    "description": "of-day futures data, CSI has been the most respected source for many decades.RealTest fully supports CSI's futures data and makes it easy to import and work with it.To use CSI data with RealTest, you must have downloaded and installed their Unfair Advantage software and subscribed to one of their futures data packages.",
    "snippet": "Data:\n    Example_end: end(...)",
    "sources": [
      "manual.txt:2582",
      "samples/annual_taxes.rts:5",
      "samples/import_multi.rts:44",
      "samples/management_fees.rts:3",
      "samples/mr_sample_debug.rts:2",
      "samples/ndx_rotate_rebalance.rts:14",
      "samples/yield_rank.rts:4"
    ]
  },
  {
    "name": "entry",
    "category": "function",
    "signature": "entry()",
    "description": "related formulas use the same current bar as EntrySetup does.Here is a table of all possible EXIT RULE scenarios:ExitTime ExitRule Current BarThisClose exit barNextOpen (default) bar before exit barNextClose bar before exit bar",
    "snippet": "Data:\n    Example_entry: entry(...)",
    "sources": [
      "manual.txt:2869",
      "samples/clenow_stocks_on_move.rts:39",
      "samples/clenow_stocks_on_move_dynamic.rts:39",
      "samples/keltner_pullback.rts:4",
      "samples/mr_sample_scan.rts:4",
      "samples/mr_sample_test_scan.rts:4",
      "samples/mr_sample_tradelist.rts:9",
      "samples/multi_moc_top_down.rts:26",
      "samples/ndx_rotate.rts:47",
      "samples/ndx_rotate_factor_test.rts:48",
      "samples/ndx_rotate_make_tradelist.rts:49",
      "samples/oex_tf_auto_track.rts:31",
      "samples/radge_bbo.rts:38",
      "samples/scale_in.rts:19",
      "samples/simple_day_trade.rts:39",
      "samples/trend_following_basics.rts:23",
      "samples/turtles.rts:84"
    ]
  },
  {
    "name": "ex",
    "category": "function",
    "signature": "ex()",
    "description": "dividend day. Logically this is equivalent to re-investing each dividend payment by buying more shares.Here is the sample1.rts example script output after adding Adjustment: TotalReturn to the Import, importing, and running:",
    "snippet": "Data:\n    Example_ex: ex(...)",
    "sources": [
      "manual.txt:2849",
      "samples/dividend_capture.rts:4",
      "samples/dividend_yield_series.rts:32",
      "samples/djia_earnings.rts:5",
      "samples/mr_sample_benchmark.rts:7",
      "samples/sector_etfs.rts:47",
      "samples/sector_etfs_breadth.rts:69"
    ]
  },
  {
    "name": "exit",
    "category": "function",
    "signature": "exit()",
    "description": "related strategy formula as part of its exit logic.",
    "snippet": "Data:\n    Example_exit: exit(...)",
    "sources": [
      "manual.txt:3624",
      "samples/actual_trades.rts:5",
      "samples/clenow_stocks_on_move.rts:39",
      "samples/clenow_stocks_on_move_dynamic.rts:39",
      "samples/combined.rts:66",
      "samples/combined_multi_bar_size.rts:63",
      "samples/combined_rebalance.rts:67",
      "samples/dividend_capture.rts:34",
      "samples/flipper.rts:32",
      "samples/hybrid_asset_allocation.rts:46",
      "samples/import_tiingo.rts:10",
      "samples/keltner_pullback.rts:37",
      "samples/mr_sample_benchmark.rts:7",
      "samples/ndx_rotate_rebalance.rts:34",
      "samples/ndx_rotate_weekly_reduce.rts:48",
      "samples/oex_tf_auto_track.rts:43",
      "samples/sector_etfs.rts:47",
      "samples/sector_etfs_breadth.rts:69",
      "samples/simple_day_trade.rts:2",
      "samples/trend_following_basics.rts:24",
      "samples/turtles.rts:23"
    ]
  },
  {
    "name": "exponential",
    "category": "function",
    "signature": "exponential()",
    "description": "style moving average calculation vs. using simple averages, mainly because they are so much faster to calculate by hand.For example, ATR(14) can be calculated using this self-referential item formula:",
    "snippet": "Data:\n    Example_exponential: exponential(...)",
    "sources": [
      "manual.txt:3016"
    ]
  },
  {
    "name": "exposureChoicesOrderPrice",
    "category": "function",
    "signature": "exposureChoicesOrderPrice()",
    "description": "use the order price (default)FillPrice - use the entry priceNotesThis new strategy-level setting replaces and augments the former PercentOrder and ValueOrder selections for QtyType.The QtyPrice setting has several implications:\u00b7 which price to use when calculating Quantity for types other than shares\u00b7 how to interpret FillPrice on the day a position is entered, e.g. when used in ExitLimit or ExitStop\u00b7 which price to use when calculating T.Fraction \u00b7 which fraction value to therefore use when checking MaxExposure and calculating S.Exposure and S.Usage In most cases the best practice will be to accept the default for this setting.Using QtyPrice: FilPrice implies that you are able to size your positions and calculate your entry-day target and stop prices at the moment of entry based on the actual fill price or that you have automation software that can do so.Using QtyPrice: FillPrice also implies that your rank-based final setup selection (depending on capacity constraints) is done at entry time.",
    "snippet": "Data:\n    Example_exposureChoicesOrderPrice: exposureChoicesOrderPrice(...)",
    "sources": [
      "manual.txt:4035"
    ]
  },
  {
    "name": "false",
    "category": "function",
    "signature": "false()",
    "description": "don't reduce (default)value or true - reduce to available capacity (but not less than this dollar size value) if necessaryNotesIf a non-zero value is specified, a new position that would exceed a capacity constraint is reduced to the size of the remaining available capacity, provided it is not less than the dollar value specified. Otherwise the entry is skipped.When \"true\" is specified, this is internally represented as 1, so the minimum position size is $1.",
    "snippet": "Data:\n    Example_false: false(...)",
    "sources": [
      "manual.txt:4057",
      "samples/cii_rotate.rts:42",
      "samples/combined.rts:20",
      "samples/combined_multi_bar_size.rts:24",
      "samples/combined_rebalance.rts:9",
      "samples/ibd_rs.rts:10",
      "samples/import_norgate.rts:14",
      "samples/mr_sample_test_scan.rts:17",
      "samples/mr_sample_tracking.rts:11",
      "samples/multi_moc_top_down.rts:17",
      "samples/ndx_plus_wtf_script.rts:19",
      "samples/ndx_rotate.rts:19",
      "samples/ndx_rotate_factor_test.rts:10",
      "samples/ndx_rotate_make_tradelist.rts:18",
      "samples/ndx_rotate_rebalance.rts:10",
      "samples/ndx_rotate_weekly_reduce.rts:11",
      "samples/radge_bbo.rts:19",
      "samples/simple_day_trade.rts:17",
      "samples/spy_tlt_uis.rts:33",
      "samples/turtles.rts:18"
    ]
  },
  {
    "name": "field",
    "category": "function",
    "signature": "field()",
    "description": "level details of the CSV export files:",
    "snippet": "Data:\n    Example_field: field(...)",
    "sources": [
      "manual.txt:2588",
      "samples/import_multi.rts:21"
    ]
  },
  {
    "name": "fileChoicesFalse",
    "category": "function",
    "signature": "fileChoicesFalse()",
    "description": "don't keep redundant stocks (default)True - keep redundant stocksNotesBy default, when you import data that includes company names, RealTest uses the names to look for redundancies. Specifically, if two names include \" class \" or \" series \" (note the spaces on either side of each string), and the strings up to and including that word are identical, then the two stocks are considered redundant.When a pair of redundant stocks is found, the most recent 20-day average turnover is calculated for each, and only the one with the larger average turnover is kept.Redundant stocks that were removed are shown in the Import Log if one was created, like this example for the Norgate Nasdaq 100 Current & Past watchlist:",
    "snippet": "Data:\n    Example_fileChoicesFalse: fileChoicesFalse(...)",
    "sources": [
      "manual.txt:3797"
    ]
  },
  {
    "name": "five",
    "category": "function",
    "signature": "five()",
    "description": "day time-stop rule would be:",
    "snippet": "Data:\n    Example_five: five(...)",
    "sources": [
      "manual.txt:2873",
      "samples/cii_rotate.rts:35"
    ]
  },
  {
    "name": "formatChoicesDMY",
    "category": "function",
    "signature": "formatChoicesDMY()",
    "description": "dates are D/M/YMDY - dates are M/D/YNotesThe default if your Import definition does not include CSVDateFormat is to use the Date Display Format setting from the Program Options Dialog.This element lets you use CSV data files with the opposite of your standard date format more easily.Other date formats are supported which are not ambiguous and therefore do not require CSVDateFmt to be specified.",
    "snippet": "Data:\n    Example_formatChoicesDMY: formatChoicesDMY(...)",
    "sources": [
      "manual.txt:3480"
    ]
  },
  {
    "name": "formula",
    "category": "function",
    "signature": "formula()",
    "description": "based trade columns, the currently loaded data file must include at least one symbol with a date range that encompasses the trade entry and exit dates. If the formula references any bar data (Open, Close, etc.) then that specific symbol must be present in memory. If a formula cannot be evaluated using currently available data, \"n/a\" is displayed.One special column, Filter, can be used as needed to prune the trade list when you only want to see some of the trades. Here's part of a trade list from a system with 7 strategies:",
    "snippet": "Data:\n    Example_formula: formula(...)",
    "sources": [
      "manual.txt:2477",
      "samples/mr_sample_debug.rts:3",
      "samples/mr_sample_tracking.rts:12",
      "samples/ndx_rotate_weekly_reduce.rts:38",
      "samples/spy_tlt_uis.rts:16",
      "samples/weekly_trend_follow.rts:29",
      "samples/weekly_trend_follow_make_tradelist.rts:33"
    ]
  },
  {
    "name": "formulaChoicesShares",
    "category": "function",
    "signature": "formulaChoicesShares()",
    "description": "Quantity represents the number of shares or contracts (default if not specified)Value - Quantity represents the notional value of the position (e.g. dollars) based on entry fill pricePercent - Quantity represents a percentage of current allocation (S.Alloc)NotesDuring setup selection, Quantity is calculated and constraints (such as MaxInvested) are applied based on the OrderPrice of the EntrySetup. To \"look ahead\" to the actual entry price when calculating position sizes, specify QtyPrice: FillPrice. The following are all equal position sizes:",
    "snippet": "Data:\n    Example_formulaChoicesShares: formulaChoicesShares(...)",
    "sources": [
      "manual.txt:4039"
    ]
  },
  {
    "name": "free",
    "category": "function",
    "signature": "free()",
    "description": "form section in which to organize any notes about the scriptNotesThis section of a script is not parsed. It is therefore not necessary to use comments to avoid syntax errors within this section.",
    "snippet": "Data:\n    Example_free: free(...)",
    "sources": [
      "manual.txt:3935",
      "samples/import_tiingo.rts:13"
    ]
  },
  {
    "name": "full",
    "category": "function",
    "signature": "full()",
    "description": "sized version of that image.",
    "snippet": "Data:\n    Example_full: full(...)",
    "sources": [
      "manual.txt:2755",
      "samples/futures_trend_follow_csi.rts:40",
      "samples/ndx_rotate_rebalance.rts:34",
      "samples/ndx_rotate_weekly_reduce.rts:48",
      "samples/trend_following_basics.rts:59"
    ]
  },
  {
    "name": "futures",
    "category": "function",
    "signature": "futures()",
    "description": "always 1.0 for stocks)valueTickSize tick size (futures - generally 0.01 for stocks)value",
    "snippet": "Data:\n    Example_futures: futures(...)",
    "sources": [
      "manual.txt:2578",
      "samples/cl_term_structure.rts:2",
      "samples/es_compare.rts:2",
      "samples/futures_calendar_spread.rts:2",
      "samples/futures_trend_follow_csi.rts:2",
      "samples/futures_trend_follow_simple.rts:2",
      "samples/futures_volume_rank.rts:2",
      "samples/gc_kelly.rts:2",
      "samples/opex_and_vxex.rts:2",
      "samples/vx_futures.rts:2",
      "samples/vx_term_structure.rts:2"
    ]
  },
  {
    "name": "gains",
    "category": "function",
    "signature": "gains()",
    "description": "losses for all trades exited in this strategy on this test date",
    "snippet": "Data:\n    Example_gains: gains(...)",
    "sources": [
      "manual.txt:4208",
      "samples/annual_taxes.rts:2",
      "samples/ndx_rotate.rts:46",
      "samples/ndx_rotate_make_tradelist.rts:48"
    ]
  },
  {
    "name": "general",
    "category": "function",
    "signature": "general()",
    "description": "purpose way to open a Chart Window if a data file has been loaded into memory. A dialog box is opened with a list of available symbols to choose from:",
    "snippet": "Data:\n    Example_general: general(...)",
    "sources": [
      "manual.txt:2353",
      "samples/import_multi.rts:38"
    ]
  },
  {
    "name": "globally",
    "category": "function",
    "signature": "globally()",
    "description": "unique name to each such item.If you prefer to use the same name for different items in different scripts without risk of override, you can use Namespace to differentiate them when those scripts are combined.",
    "snippet": "Data:\n    Example_globally: globally(...)",
    "sources": [
      "manual.txt:2937"
    ]
  },
  {
    "name": "goal_30_15_asx.rts",
    "category": "function",
    "signature": "goal_30_15_asx.rts()",
    "description": "a version of the above tailored for the Australian market ($XAO constituents)\u00b7 goal_30_15_tsx.rts - a version of the above tailored for the Canadian market ($SPTSXconstituents)\u00b7 mhp_classic.rts - provided for those who might be curious about the kinds of strategies Marsten traded in the early 2000s\u00b7 multi_moc_top_down.rts - combines four variations of simple_day_trade.rts using top-down setup selection\u00b7 ndx_plus_wtf_script.rts - combines two single-strategy examples into one script directly\u00b7 ndx_plus_wtf_tradelist.rts - combines two single-strategy examples by playing back their trade lists together\u00b7 oex_tf_top_down.rts - combines three OEX trend-following strategies using top-down setup selection\u00b7 oex_tf_auto_track - demonstrates use of auto-generated tracker benchmarks to favor strategies with the best recent performance\u00b7 two_accounts.rts - compound two strategies together in one account with combined with a third strategy in a separate account\u00b7 two_accounts_rebalance.rts - same as above with addition of periodic cash transfers to rebalance the accounts",
    "snippet": "Data:\n    Example_goal_30_15_asx.rts: goal_30_15_asx.rts(...)",
    "sources": [
      "manual.txt:2242"
    ]
  },
  {
    "name": "half",
    "category": "function",
    "signature": "half()",
    "description": "year) highest close.At the time of this writing, 38 stocks met this condition.Now double-click on the first row to open a chart for that stock with that date as its right-most bar:",
    "snippet": "Data:\n    Example_half: half(...)",
    "sources": [
      "manual.txt:2296",
      "samples/futures_trend_follow_csi.rts:42",
      "samples/futures_trend_follow_simple.rts:13",
      "samples/mr_sample_common.rts:28",
      "samples/mr_sample_orders_alera.rts:27",
      "samples/mr_sample_orders_basket.rts:28",
      "samples/mr_sample_scan.rts:34",
      "samples/mr_sample_test_scan.rts:35",
      "samples/multi_filter_scan.rts:22",
      "samples/tf_sell_half_at_1R.rts:3"
    ]
  },
  {
    "name": "hard",
    "category": "function",
    "signature": "hard()",
    "description": "coding the 50/200 moving average crossover strategy as in Sample1.rts, the two moving average lengths are now parameters.",
    "snippet": "Data:\n    Example_hard: hard(...)",
    "sources": [
      "manual.txt:2269"
    ]
  },
  {
    "name": "header.Double",
    "category": "function",
    "signature": "header.Double()",
    "description": "clicking on any row brings up a chart showing both trades (if there was a match):",
    "snippet": "Data:\n    Example_header.Double: header.Double(...)",
    "sources": [
      "manual.txt:2496"
    ]
  },
  {
    "name": "heldChoicesTrue",
    "category": "function",
    "signature": "heldChoicesTrue()",
    "description": "don't include dividends in trade and test P/LFalse - include dividends in trade and test P/L (default)NotesThis strategy-level setting is only relevant if your imported data includes dividends as per-share amounts paid on ex-dividend dates rather than as dividend-adjusted prices.The default Adjustment mode for most DataSource choices (e.g. Norgate) is Capital, i.e. only adjust for stock splits, not for dividends.In this mode, RealTest by default applies each dividend received to the P/L of the trade and the test. For a long position, the dividend is a credit. For a short position it is a debit.Most users prefer to see the impact of dividends in their test results without having to use total-return adjustment.If you need to see results without dividends, e.g. for comparison with other software that doesn't support direct application of dividends to P/L, this strategy-level setting can be used to exclude dividends from your results.",
    "snippet": "Data:\n    Example_heldChoicesTrue: heldChoicesTrue(...)",
    "sources": [
      "manual.txt:3732"
    ]
  },
  {
    "name": "higher",
    "category": "function",
    "signature": "higher()",
    "description": "level stats however you prefer. Results column formulas are calculated only once, at the end of a test run. When they are calculated, the context is the last date of the test. This is why, for example, S.Number is used to display the number of periods (dates) over which a test was run. The daily stats record for the first date is 1, the second date is 2, and so on. At the end of the above test, there were 6,894 stats records, so the number of the last record was 6,894.Similarly, for stats where we want the total count of something for the entire test, we use the Sum function.Results formulas can optionally reference Trade Statistics Functions, though calculating these can be slow for tests with very high trade counts.A format specification comment can be included in any item. If no format is specified, the item will use default number formatting. The vertical bar {|} in a Results item format specification indicates that this item should be calculated after each day of the test and displayed in the status bar as the test is running.To apply Results section formulas to all currently open Results windows, press F4 or click Apply.See also Default Scripts.",
    "snippet": "Data:\n    Example_higher: higher(...)",
    "sources": [
      "manual.txt:3101",
      "samples/goal_30_15_tsx.rts:3",
      "samples/higher_lows.rts:1",
      "samples/index_breadth.rts:33"
    ]
  },
  {
    "name": "highly",
    "category": "function",
    "signature": "highly()",
    "description": "recommended data source for end-of-day futures)\u00b7 CSI Stocks (also a good source for stock data)\u00b7 local CSV files (comma-delimited text, one file per symbol, one row per daily bar -- if you have CSV data you can use it)\u00b7 local MetaStock databases",
    "snippet": "Data:\n    Example_highly: highly(...)",
    "sources": [
      "manual.txt:2225"
    ]
  },
  {
    "name": "human",
    "category": "function",
    "signature": "human()",
    "description": "readable text format. If a specific OrdersMode other than Text was specified, a separate order list file in that mode will also be generated and displayed. If you prefer to not see the text order list when also generating e.g. a CSV order file, uncheck this box.vCheck for program updatesEach time RealTest starts, it compares its version number to a server-based newest release number and gives you the option to download the newer release if found. Uncheck this box to disable checking for updates.",
    "snippet": "Data:\n    Example_human: human(...)",
    "sources": [
      "manual.txt:2557"
    ]
  },
  {
    "name": "if_true",
    "category": "function",
    "signature": "if_true()",
    "description": "formula to evaluate and return the result of if condition is trueif_false - formula to evaluate and return the result of if condition is falseNotesOnly one the two formulas gets evaluated, depending on the condition. The function returns the result of evaluating the selected formula.This function can also be referred to as \"IIF\" if you prefer.",
    "snippet": "Data:\n    Example_if_true: if_true(...)",
    "sources": [
      "manual.txt:3730"
    ]
  },
  {
    "name": "importChoicesNorgate",
    "category": "function",
    "signature": "importChoicesNorgate()",
    "description": "import from Norgate NDU (stocks, futures, indexes, indicators)Yahoo - import from finance.yahoo.com (stocks)Tiingo - import from api.tiingo.com (stocks)TiingoCrypto - import end-of-day Crypto currency prices from TiingoMetastock - import stock data from a local Metastock databaseCSIFutures - import futures data from CSI Unfair Advantage portfoliosCSV - import any type of data from your own local CSV files",
    "snippet": "Data:\n    Example_importChoicesNorgate: importChoicesNorgate(...)",
    "sources": [
      "manual.txt:3501"
    ]
  },
  {
    "name": "import_csv.rts",
    "category": "function",
    "signature": "import_csv.rts()",
    "description": "shows how to specify CSV data import (data not provided)\u00b7 import_ms.rts - shows how to specify MetaStock data import (data not provided)\u00b7 import_multi.rts - shows how to combine data from multiple sources into a single RTD file\u00b7 import_norgate.rts - shows how to import data directly from Norgate NDU, and how to access Norgate's index constituency data\u00b7 import_tiingo.rts - shows how to import data from Tiingo, if you have an API key\u00b7 import_yahoo.rts - shows how to import all the SPX components from Yahoo (see Tutorial 3)\u00b7 djia_earnings.rts - shows how to use an Event List File to include earnings dates in your imported data\u00b7 djia_make_syminfo.rts - shows how to create a Symbol Information File with Norgate metadata for use with other data sources\u00b7 djia_use_syminfo.rts - shows how to use a symbol information file to add metadata to a Yahoo import\u00b7 actual_trades.rts - shows how to \"test\" a list of actual trades using an Imported Trade List file, includes templates for various trade list formats",
    "snippet": "Data:\n    Example_import_csv.rts: import_csv.rts(...)",
    "sources": [
      "manual.txt:2235"
    ]
  },
  {
    "name": "in",
    "category": "function",
    "signature": "in()",
    "description": "sample\" test for each interval. The final two tests run are the in-sample (1480) and out-of-sample (1481) results for the entire date range.The script window shows the new WalkForward section that was generated. These three rows extend far to the right. The first row contains the start date of each interval and the subsequent rows contain the best value found for each parameter in each interval.To run the walk-forward test again (without re-generating all the parameter values), simply press the Test button or select Run Test from the Run Menu:When a script includes a WalkForward section (and it's not commented out), RealTest will always use it when running that script in Test mode.",
    "snippet": "Data:\n    Example_in: in(...)",
    "sources": [
      "manual.txt:2713",
      "samples/actual_trades.rts:3",
      "samples/bensdorp_book.rts:2",
      "samples/beta_indicator.rts:2",
      "samples/breadth.rts:29",
      "samples/cii_rotate.rts:7",
      "samples/cl_term_structure.rts:4",
      "samples/clenow_stocks_on_move_dynamic.rts:48",
      "samples/combined.rts:25",
      "samples/combined_multi_bar_size.rts:24",
      "samples/combined_rebalance.rts:2",
      "samples/dalio_all_weather.rts:18",
      "samples/dalio_all_weather_maxdiff.rts:18",
      "samples/dividend_capture.rts:4",
      "samples/dividend_yield_series.rts:32",
      "samples/djia_earnings.rts:23",
      "samples/fundamentals.rts:2",
      "samples/futures_trend_follow_csi.rts:16",
      "samples/futures_trend_follow_simple.rts:15",
      "samples/futures_volume_rank.rts:2",
      "samples/gics_indu_rank.rts:2",
      "samples/goal_30_15.rts:15",
      "samples/hybrid_asset_allocation.rts:46",
      "samples/import_ms.rts:8",
      "samples/import_multi.rts:44",
      "samples/import_norgate.rts:4",
      "samples/industry_indices.rts:2",
      "samples/keltner_pullback.rts:8",
      "samples/management_fees.rts:32",
      "samples/martingale.rts:24",
      "samples/mr_sample.rts:3",
      "samples/mr_sample_common.rts:6",
      "samples/mr_sample_debug.rts:17",
      "samples/mr_sample_hedged.rts:5",
      "samples/mr_sample_long_only.rts:24",
      "samples/mr_sample_orders.rts:8",
      "samples/mr_sample_orders_alera.rts:11",
      "samples/mr_sample_orders_basket.rts:11",
      "samples/mr_sample_short_only.rts:13",
      "samples/mr_sample_tracking.rts:11",
      "samples/mr_sample_tradelist.rts:6",
      "samples/ndx_rotate.rts:46",
      "samples/ndx_rotate_factor_test.rts:21",
      "samples/ndx_rotate_make_tradelist.rts:48",
      "samples/ndx_rotate_weekly_reduce.rts:38",
      "samples/oc_all_actual.rts:4",
      "samples/opex_and_vxex.rts:23",
      "samples/scale_in.rts:1",
      "samples/sector_etfs_breadth.rts:22",
      "samples/simple_day_trade.rts:12",
      "samples/spy_tlt_uis.rts:6",
      "samples/supertrend.rts:2",
      "samples/tf_dynamic_size.rts:22",
      "samples/trend_following_basics.rts:21",
      "samples/turtles.rts:8",
      "samples/two_accounts.rts:2",
      "samples/two_accounts_rebalance.rts:2",
      "samples/vigilant_asset_allocation.rts:25",
      "samples/vx_term_structure.rts:4",
      "samples/weekly_moc_asx_daily_daily.rts:35",
      "samples/weekly_moc_asx_daily_weekly.rts:2",
      "samples/weekly_trend_follow.rts:29",
      "samples/weekly_trend_follow_make_tradelist.rts:33"
    ]
  },
  {
    "name": "indicatorChoicesTrue",
    "category": "function",
    "signature": "indicatorChoicesTrue()",
    "description": "calculate simple averages and indicators using how ever many bars are availableFalse - return NaN if not enough bars are available (default)NotesWhen UseAvailableBars is False, then any simple average or indicator that does not have enough data to calculate the correct value will return NaN (not a number), and the formula will stop being evaluated.When UseAvailableBars is True, simple averages and indicators are calculated using however many bars are available. For example, if a formula refers to Avg(C,200) and the current bar is only the 100th bar of the data for that symbol, then the 100-day average close will be returned instead.The UseAvailableBars setting has no effect on exponential averages or indicators. Exponential average calculation actually requires five times the \"length\" to reach full precision. RealTest will use this full-precision length when it is available, and will use however many bars are available otherwise. Unlike simple averages, however, this does not change the \"length\" parameter, which is really just the denominator of the fraction used to multiply each new value by the prior result during calculation. So for exponential averages, having too few bars available has a less significant impact on the result than it does for simple averages.See also Number of Bars Required.",
    "snippet": "Data:\n    Example_indicatorChoicesTrue: indicatorChoicesTrue(...)",
    "sources": [
      "manual.txt:4563"
    ]
  },
  {
    "name": "itChoicesFalse",
    "category": "function",
    "signature": "itChoicesFalse()",
    "description": "don't remove the latest bar (default)True - remove the latest barNotesWhen this import setting is true, the latest bar is removed from any symbol that had the global",
    "snippet": "Data:\n    Example_itChoicesFalse: itChoicesFalse(...)",
    "sources": [
      "manual.txt:4059"
    ]
  },
  {
    "name": "items",
    "category": "function",
    "signature": "items()",
    "description": "- they all automatically perform the check and apply operation before running.Run Test runs all Strategy (and Benchmark) sections of the active script as a single test using default parameters. Before the test is run, the Data section is recalculated as needed.Run Optimization opens the Optimization Dialog, from which one or more tests are run in one of several possible optimization modes.Run Import runs the Import section of the active script.Run Scan runs the Scan section of the active script.Run Orders generates brokerage orders for the next market date after the test EndDate by first running the test up to that date, then applying the Strategy rules to the data and open positions as of that date.Stop stops whatever operation is currently running.",
    "snippet": "Data:\n    Example_items: items(...)",
    "sources": [
      "manual.txt:2357",
      "samples/mr_sample_debug.rts:8",
      "samples/ndx_rotate_factor_test.rts:21",
      "samples/simple_day_trade_basket_scan.rts:14",
      "samples/weekly_moc_asx_daily_daily.rts:2"
    ]
  },
  {
    "name": "language",
    "category": "function",
    "signature": "language()",
    "description": "sensitivity features of Scintilla, such as color-coded syntax, popup help, auto-completion, function parameter prompting, parentheses balancing, multi-level undo/redo, smart tabbing, block comment in/out, etc.",
    "snippet": "Data:\n    Example_language: language(...)",
    "sources": [
      "manual.txt:2457"
    ]
  },
  {
    "name": "large",
    "category": "function",
    "signature": "large()",
    "description": "scale data-generation scans to be run more quickly and with less memory usage.SaveScanAs must be specified to use this setting.The Sort definition, if specified, is ignored in this scan mode.",
    "snippet": "Data:\n    Example_large: large(...)",
    "sources": [
      "manual.txt:4261",
      "samples/import_norgate.rts:4",
      "samples/martingale.rts:2",
      "samples/weekly_moc_asx.rts:9"
    ]
  },
  {
    "name": "len",
    "category": "function",
    "signature": "len()",
    "description": "1 in a regular exponential moving average.It's a little-known fact RSI(len) crossing above or below 50 is the same as C crossing above or below EMA(C,2*len-1).This indicator supports one-pass calculation when used in the Data Section with a non-variable length.",
    "snippet": "Data:\n    Example_len: len(...)",
    "sources": [
      "manual.txt:4087",
      "samples/beta_indicator.rts:13",
      "samples/correl_multi.rts:20",
      "samples/ehlers_windows.rts:16",
      "samples/higher_lows.rts:16"
    ]
  },
  {
    "name": "level",
    "category": "function",
    "signature": "level()",
    "description": "specific names such as ?Sector are also available.",
    "snippet": "Data:\n    Example_level: level(...)",
    "sources": [
      "manual.txt:3754",
      "samples/cii_rotate.rts:2",
      "samples/import_tiingo.rts:13",
      "samples/industry_indices.rts:18",
      "samples/keltner_pullback.rts:56",
      "samples/oex_tf_top_down.rts:40",
      "samples/simple_day_trade_basket_orders.rts:3",
      "samples/turtles.rts:45"
    ]
  },
  {
    "name": "limit",
    "category": "function",
    "signature": "limit()",
    "description": "order transactions (fills at a limit price), use LimitSlip.To specify a different slippage amount for stop-order transactions (fills at a stop price) use StopSlip.To specify a different slippage amount for at-open market transactions use OpenSlip.To specify a different slippage amount for at-close market transactions use CloseSlip.If all four of these specific slippage types are specified then there is no need to also specify Slippage.Use Slippage when a simple average assumption is sufficient for your modeling needs.",
    "snippet": "Data:\n    Example_limit: limit(...)",
    "sources": [
      "manual.txt:4313",
      "samples/bensdorp_book.rts:92",
      "samples/keltner_pullback.rts:4",
      "samples/martingale.rts:24",
      "samples/mr_sample_common.rts:42",
      "samples/mr_sample_debug.rts:36",
      "samples/mr_sample_orders_alera.rts:40",
      "samples/mr_sample_orders_basket.rts:41",
      "samples/mr_sample_test_scan.rts:45",
      "samples/simple_day_trade.rts:39",
      "samples/weekly_moc_asx.rts:33",
      "samples/weekly_moc_asx_daily_daily.rts:23",
      "samples/weekly_moc_asx_daily_weekly.rts:23"
    ]
  },
  {
    "name": "line",
    "category": "function",
    "signature": "line()",
    "description": "independent comments:",
    "snippet": "Data:\n    Example_line: line(...)",
    "sources": [
      "manual.txt:2939",
      "samples/import_ms.rts:8",
      "samples/import_tiingo.rts:8",
      "samples/mr_sample_benchmark.rts:1",
      "samples/ndx_rotate.rts:39",
      "samples/ndx_rotate_make_tradelist.rts:41",
      "samples/trend_following_basics.rts:82"
    ]
  },
  {
    "name": "local",
    "category": "function",
    "signature": "local()",
    "description": "file import.Specify KeepNonIncluded: True if you want to define InList names while still importing all the data files.See CSI Futures Import, CSI Stocks Import, CSV Import, or MetaStock Import for further details.",
    "snippet": "Data:\n    Example_local: local(...)",
    "sources": [
      "manual.txt:3499",
      "samples/bensdorp_book.rts:10",
      "samples/import_multi.rts:18"
    ]
  },
  {
    "name": "logarithmic.Split",
    "category": "function",
    "signature": "logarithmic.Split()",
    "description": "Adjusted toggles the price values on the chart between split-adjusted and as-traded (unadjusted).Copy Image To Clipboard places a bitmap image of the currently displayed chart into the Windows clipboard.Save Image As PNG File prompts for a file path to save the currently displayed chart in PNG image format.Edit Chart Formulas opens a script window with the script that contains the Charts Section that was last applied to a chart. Most of the time, this will be charts.rts unless you've recently applied a different script with a replacement Charts section.Refresh Chart forces all the indicators to be recalculated and the contents of the chart to be redrawn.Options opens the chart options dialog box.",
    "snippet": "Data:\n    Example_logarithmic.Split: logarithmic.Split(...)",
    "sources": [
      "manual.txt:2369"
    ]
  },
  {
    "name": "long",
    "category": "function",
    "signature": "long()",
    "description": "winded way to say don\u2019t worry about how many bars of data are available.An exception to the \"number of bars required\" rule are the functions SinceTrue, CountTrue, and TrueInRow. These functions treat a can't be evaluated term as FALSE but do not abort the entire formula, since doing so would defeat their purpose.For example, a liquidity filter which I like to use in data import is:",
    "snippet": "Data:\n    Example_long: long(...)",
    "sources": [
      "manual.txt:2877",
      "samples/anchored_vwap.rts:33",
      "samples/bensdorp_book.rts:38",
      "samples/cii_rotate.rts:58",
      "samples/clenow_stocks_on_move.rts:58",
      "samples/clenow_stocks_on_move_dynamic.rts:63",
      "samples/combined.rts:30",
      "samples/combined_multi_bar_size.rts:28",
      "samples/combined_rebalance.rts:23",
      "samples/correl_multi.rts:3",
      "samples/dalio_all_weather.rts:25",
      "samples/dalio_all_weather_maxdiff.rts:32",
      "samples/dividend_capture.rts:42",
      "samples/flipper.rts:36",
      "samples/futures_trend_follow_csi.rts:2",
      "samples/futures_trend_follow_simple.rts:32",
      "samples/futures_volume_rank.rts:48",
      "samples/gc_kelly.rts:31",
      "samples/goal_30_15.rts:2",
      "samples/goal_30_15_asx.rts:32",
      "samples/goal_30_15_tsx.rts:30",
      "samples/higher_lows.rts:42",
      "samples/hybrid_asset_allocation.rts:42",
      "samples/hybrid_asset_allocation_dynamic.rts:45",
      "samples/import_tiingo.rts:9",
      "samples/keller_baa.rts:36",
      "samples/keltner_pullback.rts:2",
      "samples/martingale.rts:19",
      "samples/mhp_classic.rts:41",
      "samples/mr_sample.rts:2",
      "samples/mr_sample_debug.rts:28",
      "samples/mr_sample_hedged.rts:1",
      "samples/mr_sample_long_only.rts:2",
      "samples/mr_sample_orders.rts:21",
      "samples/mr_sample_orders_alera.rts:43",
      "samples/mr_sample_orders_basket.rts:44",
      "samples/mr_sample_scan.rts:30",
      "samples/mr_sample_test_scan.rts:32",
      "samples/mr_sample_tracking.rts:14",
      "samples/mr_sample_tracking_alloc.rts:7",
      "samples/mr_sample_tradelist.rts:25",
      "samples/multi_moc_top_down.rts:69",
      "samples/ndx_plus_wtf_script.rts:42",
      "samples/ndx_plus_wtf_tradelists.rts:26",
      "samples/ndx_rotate.rts:34",
      "samples/ndx_rotate_factor_test.rts:53",
      "samples/ndx_rotate_make_tradelist.rts:36",
      "samples/ndx_rotate_weekly_reduce.rts:29",
      "samples/oex_tf_auto_track.rts:59",
      "samples/oex_tf_fresh_signal.rts:24",
      "samples/oex_tf_top_down.rts:39",
      "samples/optimal_diversity.rts:45",
      "samples/radge_bbo.rts:24",
      "samples/scale_in.rts:13",
      "samples/sctr.rts:7",
      "samples/sector_etfs.rts:32",
      "samples/sector_etfs_breadth.rts:60",
      "samples/simple_day_trade.rts:36",
      "samples/spy_tlt_uis.rts:51",
      "samples/supertrend.rts:46",
      "samples/tf_dynamic_size.rts:36",
      "samples/tf_sell_half_at_1R.rts:23",
      "samples/trend_following_basics.rts:68",
      "samples/turtles.rts:65",
      "samples/two_accounts.rts:3",
      "samples/two_accounts_rebalance.rts:3",
      "samples/vigilant_asset_allocation.rts:36",
      "samples/vx_futures.rts:2",
      "samples/vxx_long_short.rts:2",
      "samples/weekly_moc_asx.rts:42",
      "samples/weekly_moc_asx_daily_daily.rts:39",
      "samples/weekly_moc_asx_daily_weekly.rts:34",
      "samples/weekly_trend_follow.rts:33",
      "samples/weekly_trend_follow_make_tradelist.rts:37"
    ]
  },
  {
    "name": "low",
    "category": "function",
    "signature": "low()",
    "description": "formula specifying a lower boundary valuehigh - formula specifying an upper boundary value",
    "snippet": "Data:\n    Example_low: low(...)",
    "sources": [
      "manual.txt:3400",
      "samples/bensdorp_book.rts:59",
      "samples/higher_lows.rts:30",
      "samples/import_csv.rts:8",
      "samples/import_multi.rts:22",
      "samples/keltner_pullback.rts:15",
      "samples/martingale.rts:2",
      "samples/sector_etfs_breadth.rts:26"
    ]
  },
  {
    "name": "lower",
    "category": "function",
    "signature": "lower()",
    "description": "right corner of the dialog to change its size. The new size will be remembered next time you select a file.",
    "snippet": "Data:\n    Example_lower: lower(...)",
    "sources": [
      "manual.txt:2333",
      "samples/dividend_yield_series.rts:33",
      "samples/ehlers_windows.rts:41",
      "samples/keltner_pullback.rts:14",
      "samples/simple_day_trade_basket_orders.rts:3",
      "samples/trend_following_basics.rts:41"
    ]
  },
  {
    "name": "mark",
    "category": "function",
    "signature": "mark()",
    "description": "to-market value changes. The combined system equity value is calculated the same way by using all positions from all strategies.By default, S.Equity includes open position mark-to-market value, making it the Net Liquidation Value (NLV) of the account. To model a cash account, in which open position gains cannot be reinvested until the position has been closed, use the strategy-level MarkToMarket setting. The default is MarkToMarket: True. For any strategy that specifies MarkToMarket: False, S.Equity will only change when positions are exited. If no strategy marks to market, then the combined system doesn't either.Each Strategy definition will usually include a Quantity formula, and can optionally include an Allocation formula.Quantity is evaluated at entry time for every new position, and Allocation is evaluated at the start of every date of a backtest.If Allocation is not specified, the default is the combined system S.Equity value when StartPercent was not specified, or the individual strategy S.Equity value when StartPercent was specified.In formula terms, this is expressed as Allocation: Combined(S.Equity) for combined compounding or Allocation: S.Equity for individual compounding. If the default is your desired allocation, you can simply omit it.Another Allocation possibility is Allocation: S.StartEquity. This models an account that trades the same dollar value each day regardless of the results, that is, without compounding.Default allocation can be overridden if desired by adding an explicit Compounded setting to the strategy.The current value of the Allocation formula is accessible via the S.Alloc syntax. Whether or not you define a custom allocation formula, it is advisable to use S.Alloc as your reference to current account value when specifying Quantity (position size).If Quantity is not specified, the default position size will be S.Alloc, i.e., the entire current allocation.By default, the Quantity formula specifies the number of shares (or contracts for futures) to buy or sell short when entering a new position. The formula can optionally be redefined as either the dollar value of the position or a percent of allocation, by adding QtyType to the strategy.See DynamicSizing for information how Quantity can be used differently in this special alternative strategy mode.",
    "snippet": "Data:\n    Example_mark: mark(...)",
    "sources": [
      "manual.txt:2827",
      "samples/management_fees.rts:18"
    ]
  },
  {
    "name": "market",
    "category": "function",
    "signature": "market()",
    "description": "on-close).A format specification comment can be included in any item. If no format is specified, the item will use default number formatting. To apply Trades section formulas to all currently open Trade List windows, press F4 or click Apply.Literal strings or string functions such as Format can also be used in custom trade list columns.In addition to the above, there are two special Trades items that can optionally be added: Filter and",
    "snippet": "Data:\n    Example_market: market(...)",
    "sources": [
      "manual.txt:3109",
      "samples/futures_volume_rank.rts:3",
      "samples/goal_30_15_asx.rts:1",
      "samples/goal_30_15_tsx.rts:1",
      "samples/mr_sample_common.rts:43",
      "samples/mr_sample_orders_alera.rts:41",
      "samples/mr_sample_orders_basket.rts:42",
      "samples/mr_sample_test_scan.rts:46",
      "samples/ndx_rotate.rts:9",
      "samples/ndx_rotate_make_tradelist.rts:8",
      "samples/opex_and_vxex.rts:22",
      "samples/stockbee_mm.rts:2",
      "samples/turtles.rts:56",
      "samples/weekly_moc_asx_daily_daily.rts:46"
    ]
  },
  {
    "name": "memory",
    "category": "function",
    "signature": "memory()",
    "description": "based binary format for daily price and volume data bars.To get started, you must first import some data.The data import process consists of:\u00b7 reading data from one or more external sources\u00b7 converting this external data to the RealTest binary format\u00b7 incorporating split and dividend info if provided by the external source\u00b7 optionally filtering out symbols that pass an ExcludeIf condition\u00b7 optionally applying additional per-symbol information such as company name, industry, etc.\u00b7 optionally applying per-bar event information such as earnings dates and amounts if available\u00b7 automatically creating weekly, monthly, quarterly and yearly bars from the daily bar data (importing larger bar sizes directly is not supported)\u00b7 saving the imported and processed data to a local RealTestData (.RTD) disk file while also keeping it in memory for immediate use",
    "snippet": "Data:\n    Example_memory: memory(...)",
    "sources": [
      "manual.txt:2571"
    ]
  },
  {
    "name": "meta",
    "category": "function",
    "signature": "meta()",
    "description": "data. Specifically, there is never a need for a SymInfo file when using Norgate. The company name, industry, exchange, country, currency, etc. are all obtained automatically during import. More importantly, Norgate includes a dynamic Watchlist facility that makes it easy to know that every day, you are importing \"all the symbols in the market\" (or in an index, or however you want to define your universe). If you use a free source like Yahoo, be prepared to do a lot of research every day just to keep track of symbol changes, additions, delistings, etc.",
    "snippet": "Data:\n    Example_meta: meta(...)",
    "sources": [
      "manual.txt:2624"
    ]
  },
  {
    "name": "modeChoicesTrue",
    "category": "function",
    "signature": "modeChoicesTrue()",
    "description": "use dynamic sizing modeFalse - use typical entry/exit formula mode (default)NotesIf DynamicSizing is set to True then most of the typical strategy formulas become disabled and the Quantity formula determines whether a new position or partial position is entered or exited each day.In this mode the following elements are disallowed: EntrySetup, EntryLimit, EntryStop, EntryScore, ExitRule, ExitLimit, ExitStop, ExitQty, ExitLimitQty, ExitStopQty, ExitScore, MaxSameSym, MaxSameCat, MaxSetups, MaxEntries, Side.Instead of the logic provided by all of the above elements, the backtest engine simple evaluates Quantity once per test period. The value returned is the \"target position size\" for that period.If the target size is larger than the current size, an entry is made for the difference. If the target size is smaller than the current size, an exit is made for the difference.The sign of the quantity determines the side (long vs. short) of the position to establish.If the prior position was the opposite side, all current positions are exited and then the new position is entered.Internally RealTest implements this functionality using multiple positions per symbol, similar to the older way of simulating dynamic sizing.",
    "snippet": "Data:\n    Example_modeChoicesTrue: modeChoicesTrue(...)",
    "sources": [
      "manual.txt:3555"
    ]
  },
  {
    "name": "modeled.ChoicesCashSameDay",
    "category": "function",
    "signature": "modeled.ChoicesCashSameDay()",
    "description": "model a cash account where sale proceeds can be reinvested the same dayCashNextDay - model a cash account where sale proceeds can't be reinvested until the next dayMargin - model a margin account (default)Notes",
    "snippet": "Data:\n    Example_modeled.ChoicesCashSameDay: modeled.ChoicesCashSameDay(...)",
    "sources": [
      "manual.txt:3317"
    ]
  },
  {
    "name": "mr_sample.rts",
    "category": "function",
    "signature": "mr_sample.rts()",
    "description": "presents a somewhat sophisticated long/short mean-reversion strategy pair using Norgate data (and an example of \"tail risk\" in January 2021)\u00b7 mr_sample_common.rts - contains the common elements of the following three examples, each of which includes this script\u00b7 mr_sample_debug.rts - demonstrates use of strategy debugging formulas to look under the hood of a running test, and also demonstrates the usefulness of the Library script section\u00b7 mr_sample_orders.rts - shows how to configure this pair of strategies for OrderClerk order generation\u00b7 mr_sample_tracking.rts - shows how to test a strategy that only takes trades when its own equity curve is above a moving average (avoided above mentioned \"tail risk\"...)\u00b7 mr_sample_tradelist.rts - shows how to combine strategies from separate scripts by using tradelist generation and playback\u00b7 mr_sample_long_only.rts and mr_sample_short_only.rts are also provided for use with the above example",
    "snippet": "Data:\n    Example_mr_sample.rts: mr_sample.rts(...)",
    "sources": [
      "manual.txt:2243",
      "samples/mr_sample_benchmark.rts:3",
      "samples/mr_sample_hedged.rts:3",
      "samples/mr_sample_long_only.rts:2",
      "samples/mr_sample_orders_basket.rts:1",
      "samples/mr_sample_short_only.rts:2"
    ]
  },
  {
    "name": "mult",
    "category": "function",
    "signature": "mult()",
    "description": "number of standard deviationsNotesThis is equivalent to Avg(C, len) + (mult * StdDev(C, len)).To calculate BBTop for something other than Close use BBTopF.This function supports one-pass calculation when used in the Data Section with a non-variable count.",
    "snippet": "Data:\n    Example_mult: mult(...)",
    "sources": [
      "manual.txt:3383",
      "samples/turtles.rts:47"
    ]
  },
  {
    "name": "multi",
    "category": "function",
    "signature": "multi()",
    "description": "strategy portfolio-level backtesting tool. Trading systems modeled in RealTest can use any number of different trading instruments and can include any number of different trading strategies. This ability to easily model multi-strategy multi-instrument systems opens the door to a diversified approach to systematic trading that is difficult or impossible to test with other software.There is a lot of information in this User Guide. Start by diving in and trying the four brief Tutorials with the software. After that, go back and forth between study and experimentation. There is also a series of video tutorials available on the mhptrading YouTube channel.While evaluating and using the software feel free to also join the RealTest User Forum.As you peruse the contents panel on the left, please note that the expandable items are also topics with their own text. Click on the item name (e.g. Software User Interface or Backtest Engine Details), not just the > symbol, in order to view this information.If you happen to find any typos or have any suggestions about how this document could be more helpful, please don't hesitate to communicate them to help@mhptrading.com. Thank you!",
    "snippet": "Data:\n    Example_multi: multi(...)",
    "sources": [
      "manual.txt:2217",
      "samples/cii_rotate.rts:2",
      "samples/goal_30_15.rts:2",
      "samples/goal_30_15_asx.rts:32",
      "samples/goal_30_15_tsx.rts:30",
      "samples/import_multi.rts:33",
      "samples/weekly_moc_asx.rts:32",
      "samples/weekly_moc_asx_daily_daily.rts:22",
      "samples/weekly_moc_asx_daily_weekly.rts:22"
    ]
  },
  {
    "name": "namesChoicesTRBC",
    "category": "function",
    "signature": "namesChoicesTRBC()",
    "description": "use The Refinitive Business ClassificationGICS - use the Global Industry Classification StandardNotesFour classification names are imported for each stock: ?EconSect, ?Sector, ?IndGroup, and ?Industry. In each of the two schemes, the first four column values (see above links) are assigned to those names respectively.As well as for display purposes, these names are used when calculating two-level rankings e.g. #Rank #ByIndGroup factor.",
    "snippet": "Data:\n    Example_namesChoicesTRBC: namesChoicesTRBC(...)",
    "sources": [
      "manual.txt:3429"
    ]
  },
  {
    "name": "ndx_rotate_factor_test.rts",
    "category": "function",
    "signature": "ndx_rotate_factor_test.rts()",
    "description": "shows how to loop through a set of completely different formulas using the optimizer\u00b7 ndx_rotate_make_tradelist.rts - makes trade list for use with the ndx_plus_wtf_tradelist.rts example\u00b7 ndx_rotate_rebalance.rts - monthly rebalance version using dymanic sizing mode\u00b7 ndx_rotate_weekly_reduce.rts - a variation of ndx_rotate that reduces position size during drawdowns\u00b7 oex_tf_fresh_signal.rts - simple trend-following strategy that only enters on a \"fresh signal\"\u00b7 optimal_diversity.rts - uses \"greedy scoring\" to calculate an optimally diversified portfolio from the S&P 100 universe\u00b7 radge_bbo.rts - the \"BBO\" strategy from Holy Grails by Nick Radge\u00b7 sector_etfs_breadth.rts - monthly rotation using sector constituent breadth to rank the ETFs\u00b7 simple_day_trade.rts - implements a simple long-only \"day trading strategy\" that enters with limit orders and exits market-on-close (MOC)\u00b7 simple_day_trade_basket_orders.rts - shows how easy it is to to generate a daily IB Basket Trader order file for this strategy\u00b7 simple_day_trade_basket_scan.rts - shows how produce the same order list using a Scan, in case you ever needed to\u00b7 spy_tlt_uis.rts - demonstrates using Walk-Forward optimization to implement a SPY/TLT strategy from an article\u00b7 tf_dynamic_size.rts - a simple trend-following strategy that resizes positions when distance from stop changes\u00b7 tf_sell_half_at_1R.rts - a simple trend-following strategy that sells half at a 1R target and trails a stop for the remainder\u00b7 trend_following_basics.rts - illustrates a variety of stop techniques, risk-based position sizing, and \"fresh breakout\" detection\u00b7 vigilant_asset_allocation.rts - implements this Keller and Keuning monthly ETF rotational strategy\u00b7 vxx_long_short.rts - be long or short the VXX ETF depending on VIX term structure\u00b7 weekly_moc_asx - a simplified weekly mean-reversion strategy\u00b7 weekly_moc_asx_daily_weekly.rts - the above implemented as a weekly strategy within a daily script\u00b7 weekly_moc_asx_daily_daily.rts - the above implemented as weekly logic in a daily strategy\u00b7 weekly_trend_follow.rts - a weekly Russell 1000 trend-following strategy similar to the Nick Radge \"Weekend Trend Trader\"\u00b7 weekly_trend_follow_make_tradelist.rts - makes trade list for use with the ndx_plus_wtf_tradelist.rts example",
    "snippet": "Data:\n    Example_ndx_rotate_factor_test.rts: ndx_rotate_factor_test.rts(...)",
    "sources": [
      "manual.txt:2240"
    ]
  },
  {
    "name": "next",
    "category": "function",
    "signature": "next()",
    "description": "to-last bar, and so on.This can be used in the EntrySetup formula to avoid entering positions in stocks that will soon be delisted. RealTest will automatically exit any position that remains open on the last data date (or last date of a test) at the close of that bar, so it is not necessary to use BarsLeft unless you want to be sure to exit before the last date.BarsLeft can also be useful when modeling futures rollovers using individual contract data.",
    "snippet": "Data:\n    Example_next: next(...)",
    "sources": [
      "manual.txt:3366",
      "samples/combined.rts:33",
      "samples/combined_multi_bar_size.rts:32",
      "samples/combined_rebalance.rts:28",
      "samples/dividend_capture.rts:24",
      "samples/hybrid_asset_allocation.rts:54",
      "samples/management_fees.rts:30",
      "samples/two_accounts.rts:67",
      "samples/two_accounts_rebalance.rts:67"
    ]
  },
  {
    "name": "nice",
    "category": "function",
    "signature": "nice()",
    "description": "looking checkerboard:",
    "snippet": "Data:\n    Example_nice: nice(...)",
    "sources": [
      "manual.txt:2280"
    ]
  },
  {
    "name": "non",
    "category": "function",
    "signature": "non()",
    "description": "script window (results, graph, chart, etc.) is in the foreground. A running script can be stopped at any time, such as when you realize you ran the wrong import, don\u2019t like the test results so far, etc. by clicking the stop button or pressing Ctrl+Break.",
    "snippet": "Data:\n    Example_non: non(...)",
    "sources": [
      "manual.txt:2417",
      "samples/bensdorp_book.rts:92",
      "samples/dividend_capture.rts:43",
      "samples/index_breadth.rts:28",
      "samples/vigilant_asset_allocation.rts:33"
    ]
  },
  {
    "name": "nth",
    "category": "function",
    "signature": "nth()",
    "description": "which trough to locate (1, i.e., most recent if omitted)NotesThe definition of a Trough is the lowest value which is then followed by one or more values that are at least n% above that most recent low.See Peak for important additional information about how these functions work in RealTest.",
    "snippet": "Data:\n    Example_nth: nth(...)",
    "sources": [
      "manual.txt:4550"
    ]
  },
  {
    "name": "number",
    "category": "function",
    "signature": "number()",
    "description": "- unable to calculate) then that stock is not included in the ranking list (reducing the total count) and its rank value would be nan as well. Similarly, nan values would not be included in the value count for any breadth functions that use it (e.g. #Avg, #Median, #StdDev).",
    "snippet": "Data:\n    Example_number: number(...)",
    "sources": [
      "manual.txt:3146",
      "samples/breadth.rts:2",
      "samples/cii_rotate.rts:7",
      "samples/ibd_rs.rts:16",
      "samples/industry_indices.rts:8",
      "samples/management_fees.rts:17",
      "samples/mr_sample_tradelist.rts:11",
      "samples/multi_moc_top_down.rts:77",
      "samples/oex_tf_auto_track.rts:55",
      "samples/weekly_moc_asx.rts:9"
    ]
  },
  {
    "name": "occurred",
    "category": "function",
    "signature": "occurred()",
    "description": "- see Notepad for detailsstart notepad c:\\RealTest\\errorlog.txt",
    "snippet": "Data:\n    Example_occurred: occurred(...)",
    "sources": [
      "manual.txt:2735"
    ]
  },
  {
    "name": "of",
    "category": "function",
    "signature": "of()",
    "description": "1 to 1, aiding in creating smooth, bounded trading indicators and improving the detection of overbought and oversold conditions. Its properties include being linear in the middle, which helps in interpreting small changes clearly, and bounding outliers, which prevents extreme values from disproportionately affecting the analysis.",
    "snippet": "Data:\n    Example_of: of(...)",
    "sources": [
      "manual.txt:4466",
      "samples/actual_trades.rts:2",
      "samples/annual_taxes.rts:2",
      "samples/bensdorp_book.rts:2",
      "samples/beta_indicator.rts:19",
      "samples/breadth.rts:2",
      "samples/cii_rotate.rts:6",
      "samples/cl_term_structure.rts:8",
      "samples/clenow_stocks_on_move.rts:30",
      "samples/clenow_stocks_on_move_dynamic.rts:3",
      "samples/combined.rts:1",
      "samples/combined_multi_bar_size.rts:1",
      "samples/combined_rebalance.rts:2",
      "samples/dalio_all_weather.rts:7",
      "samples/dalio_all_weather_maxdiff.rts:7",
      "samples/dividend_capture.rts:4",
      "samples/dividend_yield_series.rts:27",
      "samples/djia_earnings.rts:3",
      "samples/es_compare.rts:2",
      "samples/futures_trend_follow_csi.rts:21",
      "samples/futures_trend_follow_simple.rts:14",
      "samples/futures_volume_rank.rts:2",
      "samples/gics_indu_rank.rts:21",
      "samples/goal_30_15.rts:1",
      "samples/goal_30_15_asx.rts:1",
      "samples/goal_30_15_tsx.rts:1",
      "samples/higher_lows.rts:30",
      "samples/hybrid_asset_allocation.rts:13",
      "samples/hybrid_asset_allocation_dynamic.rts:12",
      "samples/ibd_rs.rts:2",
      "samples/import_csv.rts:2",
      "samples/import_ms.rts:9",
      "samples/import_multi.rts:27",
      "samples/import_norgate.rts:4",
      "samples/import_tiingo.rts:22",
      "samples/industry_indices.rts:1",
      "samples/keller_baa.rts:12",
      "samples/keltner_pullback.rts:10",
      "samples/management_fees.rts:2",
      "samples/mhp_classic.rts:34",
      "samples/mr_sample_benchmark.rts:1",
      "samples/mr_sample_common.rts:2",
      "samples/mr_sample_debug.rts:2",
      "samples/mr_sample_long_only.rts:2",
      "samples/mr_sample_orders.rts:3",
      "samples/mr_sample_orders_alera.rts:37",
      "samples/mr_sample_orders_basket.rts:38",
      "samples/mr_sample_scan.rts:1",
      "samples/mr_sample_short_only.rts:2",
      "samples/mr_sample_test_scan.rts:1",
      "samples/mr_sample_tracking.rts:2",
      "samples/mr_sample_tracking_alloc.rts:1",
      "samples/mr_sample_tradelist.rts:2",
      "samples/ndx_rotate.rts:39",
      "samples/ndx_rotate_make_tradelist.rts:41",
      "samples/ndx_rotate_rebalance.rts:14",
      "samples/ndx_rotate_weekly_reduce.rts:39",
      "samples/oex_tf_auto_track.rts:2",
      "samples/optimal_diversity.rts:2",
      "samples/radge_bbo.rts:3",
      "samples/scale_in.rts:2",
      "samples/sctr.rts:9",
      "samples/simple_day_trade.rts:26",
      "samples/simple_day_trade_basket_scan.rts:2",
      "samples/spy_tlt_uis.rts:12",
      "samples/tf_dynamic_size.rts:22",
      "samples/trend_following_basics.rts:3",
      "samples/turtles.rts:1",
      "samples/two_accounts.rts:54",
      "samples/two_accounts_rebalance.rts:54",
      "samples/vigilant_asset_allocation.rts:10",
      "samples/vx_futures.rts:8",
      "samples/vx_term_structure.rts:31",
      "samples/vxx_long_short.rts:4",
      "samples/weekly_moc_asx.rts:8",
      "samples/weekly_moc_asx_daily_daily.rts:2",
      "samples/weekly_moc_asx_daily_weekly.rts:2",
      "samples/yield_rank.rts:4"
    ]
  },
  {
    "name": "one",
    "category": "function",
    "signature": "one()",
    "description": "time task of quitting RealTest, editing RealTest.ini, and entering your key in this spot:",
    "snippet": "Data:\n    Example_one: one(...)",
    "sources": [
      "manual.txt:2617",
      "samples/actual_trades.rts:42",
      "samples/anchored_vwap.rts:2",
      "samples/bensdorp_book.rts:8",
      "samples/cii_rotate.rts:40",
      "samples/combined.rts:24",
      "samples/combined_multi_bar_size.rts:1",
      "samples/combined_rebalance.rts:12",
      "samples/dividend_capture.rts:4",
      "samples/gc_kelly.rts:2",
      "samples/higher_lows.rts:26",
      "samples/import_csv.rts:2",
      "samples/mr_sample_common.rts:36",
      "samples/mr_sample_hedged.rts:5",
      "samples/mr_sample_orders_alera.rts:34",
      "samples/mr_sample_orders_basket.rts:35",
      "samples/mr_sample_test_scan.rts:41",
      "samples/mr_sample_tradelist.rts:6",
      "samples/ndx_plus_wtf_script.rts:2",
      "samples/ndx_rotate.rts:3",
      "samples/oc_all_actual.rts:3",
      "samples/simple_day_trade.rts:41",
      "samples/supertrend.rts:8",
      "samples/turtles.rts:81",
      "samples/two_accounts.rts:2",
      "samples/two_accounts_rebalance.rts:2",
      "samples/vx_futures.rts:8",
      "samples/vxx_long_short.rts:4"
    ]
  },
  {
    "name": "open",
    "category": "function",
    "signature": "open()",
    "description": "source Scintilla text editor for use in child windows of the following types.",
    "snippet": "Data:\n    Example_open: open(...)",
    "sources": [
      "manual.txt:2451",
      "samples/breadth.rts:37",
      "samples/cl_term_structure.rts:25",
      "samples/combined.rts:36",
      "samples/combined_multi_bar_size.rts:35",
      "samples/combined_rebalance.rts:31",
      "samples/ehlers_windows.rts:3",
      "samples/import_csv.rts:8",
      "samples/import_multi.rts:22",
      "samples/mr_sample.rts:7",
      "samples/mr_sample_benchmark.rts:3",
      "samples/mr_sample_common.rts:43",
      "samples/mr_sample_debug.rts:5",
      "samples/mr_sample_hedged.rts:3",
      "samples/mr_sample_long_only.rts:6",
      "samples/mr_sample_orders_alera.rts:41",
      "samples/mr_sample_orders_basket.rts:42",
      "samples/mr_sample_short_only.rts:6",
      "samples/mr_sample_test_scan.rts:46",
      "samples/mr_sample_tracking.rts:4",
      "samples/mr_sample_tracking_alloc.rts:5",
      "samples/ndx_rotate.rts:46",
      "samples/ndx_rotate_make_tradelist.rts:48",
      "samples/ndx_rotate_weekly_reduce.rts:47",
      "samples/simple_day_trade_basket_orders.rts:5",
      "samples/simple_day_trade_basket_scan.rts:5",
      "samples/tf_dynamic_size.rts:30",
      "samples/trend_following_basics.rts:82",
      "samples/turtles.rts:41",
      "samples/two_accounts.rts:70",
      "samples/two_accounts_rebalance.rts:70",
      "samples/vx_term_structure.rts:31"
    ]
  },
  {
    "name": "or",
    "category": "function",
    "signature": "or()",
    "description": "signs to the left of the ellipses to modify the bold and/or italic look for that element.Click on Background to change the background color or Font to change the typeface or size.Other options include:",
    "snippet": "Data:\n    Example_or: or(...)",
    "sources": [
      "manual.txt:2401",
      "samples/actual_trades.rts:4",
      "samples/anchored_vwap.rts:23",
      "samples/annual_taxes.rts:23",
      "samples/bensdorp_book.rts:6",
      "samples/breadth.rts:4",
      "samples/clenow_stocks_on_move.rts:65",
      "samples/combined.rts:29",
      "samples/combined_multi_bar_size.rts:27",
      "samples/combined_rebalance.rts:19",
      "samples/dividend_capture.rts:3",
      "samples/dividend_yield_series.rts:3",
      "samples/hybrid_asset_allocation.rts:37",
      "samples/hybrid_asset_allocation_dynamic.rts:36",
      "samples/import_tiingo.rts:7",
      "samples/industry_indices.rts:17",
      "samples/keller_baa.rts:38",
      "samples/keltner_pullback.rts:53",
      "samples/mhp_classic.rts:44",
      "samples/mr_sample.rts:18",
      "samples/mr_sample_common.rts:43",
      "samples/mr_sample_debug.rts:22",
      "samples/mr_sample_long_only.rts:21",
      "samples/mr_sample_orders.rts:27",
      "samples/mr_sample_orders_alera.rts:41",
      "samples/mr_sample_orders_basket.rts:42",
      "samples/mr_sample_scan.rts:41",
      "samples/mr_sample_short_only.rts:19",
      "samples/mr_sample_test_scan.rts:46",
      "samples/mr_sample_tracking.rts:20",
      "samples/mr_sample_tracking_alloc.rts:13",
      "samples/ndx_plus_wtf_script.rts:46",
      "samples/ndx_rotate.rts:38",
      "samples/ndx_rotate_factor_test.rts:59",
      "samples/ndx_rotate_make_tradelist.rts:40",
      "samples/ndx_rotate_rebalance.rts:24",
      "samples/ndx_rotate_weekly_reduce.rts:35",
      "samples/oex_tf_top_down.rts:40",
      "samples/opex_and_vxex.rts:19",
      "samples/optimal_diversity.rts:7",
      "samples/Sample1.rts:4",
      "samples/Sample2a.rts:18",
      "samples/sctr.rts:29",
      "samples/spy_tlt_uis.rts:5",
      "samples/supertrend.rts:4",
      "samples/trend_following_basics.rts:72",
      "samples/turtles.rts:31",
      "samples/two_accounts.rts:80",
      "samples/two_accounts_rebalance.rts:80",
      "samples/vigilant_asset_allocation.rts:29",
      "samples/vx_futures.rts:53",
      "samples/vxx_long_short.rts:4"
    ]
  },
  {
    "name": "order",
    "category": "function",
    "signature": "order()",
    "description": "producing strategy elements showing the specific order types and attributes that will are generated:Strategy Elements Related Time Setting TYPE TIFGood Until Time",
    "snippet": "Data:\n    Example_order: order(...)",
    "sources": [
      "manual.txt:2776",
      "samples/actual_trades.rts:39",
      "samples/goal_30_15_asx.rts:5",
      "samples/goal_30_15_tsx.rts:5",
      "samples/keltner_pullback.rts:4",
      "samples/mr_sample_hedged.rts:19",
      "samples/mr_sample_orders_basket.rts:1",
      "samples/mr_sample_scan.rts:5",
      "samples/mr_sample_test_scan.rts:5",
      "samples/multi_moc_top_down.rts:78",
      "samples/ndx_rotate_rebalance.rts:14",
      "samples/weekly_moc_asx_daily_daily.rts:45"
    ]
  },
  {
    "name": "outer",
    "category": "function",
    "signature": "outer()",
    "description": "level \"script section\", Include is just a simple statement to allow a script to include other scripts. This capability is provided to make it easier to maintain common elements that several scripts share. Examples would be common Data Section items, a frequently used Import definition, or even a Strategy (e.g. an index benchmark) that you often add to other strategies in a script.",
    "snippet": "Data:\n    Example_outer: outer(...)",
    "sources": [
      "manual.txt:3118"
    ]
  },
  {
    "name": "over",
    "category": "function",
    "signature": "over()",
    "description": "fit the parameters to the data for actual trading.This is the end of the fourth and final written tutorial in this User Guide.A series of video tutorials can be found on the mhptrading youtube channel.",
    "snippet": "Data:\n    Example_over: over(...)",
    "sources": [
      "manual.txt:2321"
    ]
  },
  {
    "name": "past",
    "category": "function",
    "signature": "past()",
    "description": "only split-adjusted value for each date in the test, as if you had been trading on that day using the latest adjusted data, with no knowledge of future splits.You may have noticed in the above log output that each result includes both a value (e.g. 441.81) and a type (e.g. \"[price]\"). In order to correctly handle splits in any formula expression, RealTest needs to keep track of the \"type\" of each value, i.e., whether it is a price, a volume, or neither. An average of prices needs to be adjusted one way, an average of volume the other way, and an average of price*volume (approximate turnover) does not require adjustment.This knowledge of value type during formula evaluation ensures that split-adjustment is correct even when a formula refers to previously calculated data items. Those items know what the final type was when they were calculated, thus enabling their correct adjustment in any other formula.",
    "snippet": "Data:\n    Example_past: past(...)",
    "sources": [
      "manual.txt:2844",
      "samples/cii_rotate.rts:11",
      "samples/clenow_stocks_on_move.rts:9",
      "samples/clenow_stocks_on_move_dynamic.rts:9",
      "samples/combined.rts:9",
      "samples/combined_multi_bar_size.rts:9",
      "samples/correl_multi.rts:8",
      "samples/flipper.rts:6",
      "samples/goal_30_15.rts:6",
      "samples/goal_30_15_asx.rts:9",
      "samples/goal_30_15_tsx.rts:9",
      "samples/higher_lows.rts:5",
      "samples/import_norgate.rts:9",
      "samples/index_breadth.rts:8",
      "samples/industry_indices.rts:16",
      "samples/keltner_pullback.rts:20",
      "samples/mr_sample_common.rts:6",
      "samples/mr_sample_orders_alera.rts:6",
      "samples/mr_sample_orders_basket.rts:6",
      "samples/multi_moc_top_down.rts:7",
      "samples/ndx_plus_wtf_script.rts:6",
      "samples/ndx_rotate.rts:8",
      "samples/ndx_rotate_make_tradelist.rts:7",
      "samples/oex_tf_auto_track.rts:9",
      "samples/oex_tf_fresh_signal.rts:3",
      "samples/oex_tf_top_down.rts:9",
      "samples/optimal_diversity.rts:11",
      "samples/radge_bbo.rts:7",
      "samples/sector_etfs_breadth.rts:6",
      "samples/simple_day_trade.rts:6",
      "samples/tf_dynamic_size.rts:10",
      "samples/tf_sell_half_at_1R.rts:8",
      "samples/trend_following_basics.rts:8",
      "samples/two_accounts.rts:8",
      "samples/two_accounts_rebalance.rts:8",
      "samples/weekly_moc_asx.rts:8",
      "samples/weekly_trend_follow.rts:6",
      "samples/weekly_trend_follow_make_tradelist.rts:7",
      "samples/yield_rank.rts:8"
    ]
  },
  {
    "name": "per",
    "category": "function",
    "signature": "per()",
    "description": "symbol information when importing data. This is done using a special-purpose CSV file (or multiple such files).The first row of the file must contain column names from the first column of the following list:Column Content Type Script VariableSymbol string ?Symbol",
    "snippet": "Data:\n    Example_per: per(...)",
    "sources": [
      "manual.txt:2631",
      "samples/clenow_stocks_on_move_dynamic.rts:51",
      "samples/combined_rebalance.rts:26",
      "samples/dividend_capture.rts:27",
      "samples/futures_trend_follow_csi.rts:21",
      "samples/futures_trend_follow_simple.rts:14",
      "samples/higher_lows.rts:17",
      "samples/import_csv.rts:6",
      "samples/import_tiingo.rts:13",
      "samples/mhp_classic.rts:34",
      "samples/multi_filter_scan.rts:2",
      "samples/multi_moc_top_down.rts:31",
      "samples/oex_tf_auto_track.rts:31",
      "samples/trend_following_basics.rts:27",
      "samples/turtles.rts:37"
    ]
  },
  {
    "name": "percent",
    "category": "function",
    "signature": "percent()",
    "description": "based results statistics such as S.TWEQ, S.MaxDDPct and S.NetPct. Only override the default Allocation if you need these percentages to be calculated differently.An additional section called Combined can optionally be added explicitly. If present, it also supports all of the Max... items that StatsGroup does. Note that Combined as a strategy-like section is the only such section that cannot be named, and it also may not contain Using or Allocation definitions. When Max... constraints are specified for a StatsGroup or Combined, they are applied to all strategies in that group together. For example, if MaxExposure: 100 is defined for Combined: then a setup in any strategy will be skipped if adding that position would push the combined exposure above 100%.Similarly, these constraints in a StatsGroup ensure that setups will be skipped if entering those positions would exceed any them.See Also: Backtest Engine Details and Capacity Constraints",
    "snippet": "Data:\n    Example_percent: percent(...)",
    "sources": [
      "manual.txt:3083",
      "samples/cii_rotate.rts:60",
      "samples/combined.rts:32",
      "samples/combined_multi_bar_size.rts:31",
      "samples/combined_rebalance.rts:27",
      "samples/dalio_all_weather.rts:29",
      "samples/dalio_all_weather_maxdiff.rts:2",
      "samples/flipper.rts:38",
      "samples/futures_trend_follow_csi.rts:21",
      "samples/futures_trend_follow_simple.rts:14",
      "samples/goal_30_15.rts:47",
      "samples/goal_30_15_asx.rts:48",
      "samples/goal_30_15_tsx.rts:46",
      "samples/hybrid_asset_allocation.rts:44",
      "samples/ibd_rs.rts:15",
      "samples/keller_baa.rts:41",
      "samples/martingale.rts:21",
      "samples/mr_sample_common.rts:38",
      "samples/mr_sample_orders_alera.rts:36",
      "samples/mr_sample_orders_basket.rts:37",
      "samples/mr_sample_test_scan.rts:43",
      "samples/multi_moc_top_down.rts:71",
      "samples/ndx_plus_wtf_script.rts:44",
      "samples/ndx_plus_wtf_tradelists.rts:28",
      "samples/ndx_rotate.rts:36",
      "samples/ndx_rotate_factor_test.rts:55",
      "samples/ndx_rotate_make_tradelist.rts:38",
      "samples/ndx_rotate_rebalance.rts:32",
      "samples/ndx_rotate_weekly_reduce.rts:31",
      "samples/radge_bbo.rts:46",
      "samples/scale_in.rts:15",
      "samples/sctr.rts:8",
      "samples/sector_etfs.rts:34",
      "samples/sector_etfs_breadth.rts:62",
      "samples/simple_day_trade.rts:38",
      "samples/trend_following_basics.rts:53",
      "samples/two_accounts.rts:66",
      "samples/two_accounts_rebalance.rts:66",
      "samples/vigilant_asset_allocation.rts:38",
      "samples/vxx_long_short.rts:28",
      "samples/weekly_trend_follow.rts:35",
      "samples/weekly_trend_follow_make_tradelist.rts:39"
    ]
  },
  {
    "name": "places",
    "category": "function",
    "signature": "places()",
    "description": "with any of the above codes value as above, use red if negative the ABS is the number of decimal places// scans, trades, charts, graphs, results value as a date string n/a",
    "snippet": "Data:\n    Example_places: places(...)",
    "sources": [
      "manual.txt:2964",
      "samples/ndx_rotate_weekly_reduce.rts:38",
      "samples/scale_in.rts:18"
    ]
  },
  {
    "name": "point",
    "category": "function",
    "signature": "point()",
    "description": "in-time event information to specific dates for specific symbols. The most likely use of this feature would be to include historical earnings dates and values if you have access to such information.As with symbol information files, event lists use CSV format. The first row of the file must contain column names from the following list:\u00b7 Symbol \u2013 the symbol for which the event occurred\u00b7 Date \u2013 the date of the event\u00b7 Time \u2013 the time of the event (optional)\u00b7 Type \u2013 any numeric code > 0\u00b7 Value \u2013 any numeric value (e.g. dividend amount, or EPS, or index constituency flags)These columns can be in any order. The names are used to identify them.Rows after the header row can also be in any order. Each row defines one event for one symbol on one date.When first importing with an event list, it is suggested to use the LogFile option in your import definition. Events for which the symbol+date is not found in the imported bar data will be reported in the log.Imported event data is accessed in script formulas by using the Event(type) function, which returns the value field if an event exists for the current symbol on the current date, or 0 if no event was found (with an option to return the most recent event -- see the function link for details).The Time field stored with each event record determines which bar the Event function will align the event with. If Time <= 16:00:00 (160000) then the event will be aligned with the bar which has the specified date. If Time > 160000 then the event will be aligned with the next bar after the bar with the specified date. The intention with this distinction is to differentiate \"before the open\" vs. \"after the close\" earnings report times. If you have point-in-time earnings data and are using EventListFile to import it and Event(n) to reference it, you will want Event(n) to return a value only for the dates on which the market first reacted to earnings news.See also djia_earnings.rts and djia_earnings.csv in the Examples folder (note that this example does not use the Time field).",
    "snippet": "Data:\n    Example_point: point(...)",
    "sources": [
      "manual.txt:2638",
      "samples/import_ms.rts:7"
    ]
  },
  {
    "name": "pop",
    "category": "function",
    "signature": "pop()",
    "description": "up is dismissed.",
    "snippet": "Data:\n    Example_pop: pop(...)",
    "sources": [
      "manual.txt:3355"
    ]
  },
  {
    "name": "portfolio",
    "category": "function",
    "signature": "portfolio()",
    "description": "level optimizations involving thousands of tests across thousands of stocks across multiple years of time. Whether this approach is likely to discover a strategy that will be profitable in the future is another matter.\u00b7 Sequential mode loops over each variable in order. At the end of a loop, that variable keeps whichever value produced the highest score. Running 2 or 3 iterations of a sequential optimization will often be a quicker way to find areas of good parameter values than the combinatorial approach.\u00b7 Genetic mode is not a true genetic optimizer, but the concept is similar. Before each test, a random subset of the parameters is selected and then the values of those variables are selected at random from their value lists. (How many parameters to change each time is determined by the \"mutate\" option.) If the score from the test is higher than the prior best score, the new values are kept, otherwise the prior best values are restored. Genetic mode will generally converge on the best combinatorial result within approximately the square root of the total combination count. Note that to use genetic mode, you must specify the number of test iterations to be run.\u00b7 Random mode is similar to genetic mode except that it randomly selects a value for every variable before every test, and (therefore) completely ignores the score of each test. A good use of random mode is to select a reasonable value ranges for each parameter, run 100 test iterations (random combinations), and look at the median result. This might provide a reasonable estimate of how the system would perform in the future, given how arbitrary parameter selection can be. Note that to use random mode, you must specify the number of test iterations to be run.\u00b7 Defaults Only mode is equivalent to clearing all the check boxes.",
    "snippet": "Data:\n    Example_portfolio: portfolio(...)",
    "sources": [
      "manual.txt:2649",
      "samples/dalio_all_weather.rts:2",
      "samples/dalio_all_weather_maxdiff.rts:2",
      "samples/futures_trend_follow_csi.rts:6",
      "samples/mr_sample_orders_alera.rts:1",
      "samples/ndx_rotate_weekly_reduce.rts:14",
      "samples/optimal_diversity.rts:2",
      "samples/vigilant_asset_allocation.rts:28"
    ]
  },
  {
    "name": "position",
    "category": "function",
    "signature": "position()",
    "description": "context formula elements that are used in your strategy formulas, such as Shares, BarsHeld, FillPrice, etc.Another use case for TestScan is to generate data throughout a test. For example, you might want to create a CSV file listing each open position on each date of a backtest. To use TestScan in this way, add TestScanAllDates: True and SaveScanAs: <file path> to your Settings.The following shows what was required before full support for order generation was added to RealTest.If you were using a script like this for live trading, you would simply run it in Import mode and then run it in Test mode once per day.The TestScan section in mr_sample_test_scan.rts looks like this:",
    "snippet": "Data:\n    Example_position: position(...)",
    "sources": [
      "manual.txt:2811",
      "samples/clenow_stocks_on_move.rts:3",
      "samples/clenow_stocks_on_move_dynamic.rts:48",
      "samples/combined_rebalance.rts:26",
      "samples/futures_trend_follow_csi.rts:37",
      "samples/gc_kelly.rts:2",
      "samples/hybrid_asset_allocation.rts:39",
      "samples/hybrid_asset_allocation_dynamic.rts:38",
      "samples/keltner_pullback.rts:6",
      "samples/mr_sample_benchmark.rts:6",
      "samples/ndx_rotate.rts:46",
      "samples/ndx_rotate_make_tradelist.rts:48",
      "samples/ndx_rotate_rebalance.rts:33",
      "samples/ndx_rotate_weekly_reduce.rts:39",
      "samples/scale_in.rts:1",
      "samples/simple_day_trade.rts:37",
      "samples/tf_dynamic_size.rts:3",
      "samples/tf_sell_half_at_1R.rts:3",
      "samples/trend_following_basics.rts:69",
      "samples/turtles.rts:26"
    ]
  },
  {
    "name": "positionsChoicesLong",
    "category": "function",
    "signature": "positionsChoicesLong()",
    "description": "all entries are long buys Short - all entries are short salesBoth - entries can be either long or short (default)NotesIn most cases, it is best to use side-specific strategies when modeling a multi-strategy trading system.Both-way strategies are mainly useful for special needs such as hedging a long/short strategy pair using an index.When Side is not specified, the sign of the value of Quantity is used to determine the side of each entry.",
    "snippet": "Data:\n    Example_positionsChoicesLong: positionsChoicesLong(...)",
    "sources": [
      "manual.txt:4291"
    ]
  },
  {
    "name": "positionsChoicesThisClose",
    "category": "function",
    "signature": "positionsChoicesThisClose()",
    "description": "entries occur at the close of the current dayIntraday - entries occur when a trigger price is first touched tomorrow (default for limit and/or stop orders)NextOpen - entries occur at tomorrow's open (default for market orders)NextClose - entries occur at tomorrow's closeNotesUsing ThisClose implies an ability to generate realtime trading signals using live data. RealTest will not be able to generate Tomorrow's Orders for ThisClose entries.For strategies with no EntryLimit or EntryStop, EntryTime controls the time at which a market order is generated. NextOpen implies that a standard MKT order is placed before the open, to be filled at the open. (Intraday is interpreted as NextOpen for market orders.) NextClose implies that a MOC order is placed before the open, to be filled at the close.EntryTime also applies to strategies that use an EntryLimit and/or EntryStop price.Using ThisClose entry with EntryLimit specified is equivalent to adding \"and C < n\" to EntrySetup (for a long-side strategy) where \"n\" is the EntryLimit price. Similarly, a long EntryStop would be equivalent to \"and C > n\". Reverse these comparison operator directions for short-side strategies. As previously stated, orders cannot be generated in advance for this mode.With Intraday, NextOpen, or NextClose limit or stop entries, the trigger price is calculated using the prior bar, and the order can be placed in advance. A Intraday EntryLimit or EntryStop is a standard LMT DAY or STP DAY order.A NextOpen EntryLimit is a LMT OPG order, and a NextOpen EntryStop is STP GTD 9:31 EST. A NextClose EntryLimit is a LOC order, and a NextClose EntryStop is STP GAT 15:58 EST.In all of the above, if both EntryLimit and EntryStop are specified, the order becomes STPLMT with the same qualifiers.(All of the above order types are stated using Interactive Brokers order nomenclature, and can be automatically generated by adding OrdersTemplate: Examples\\ib_basket_trader.csv to your Settings and running your script in Orders mode.)For more information on how the backtest engine works in general, see Backtest Engine Details.",
    "snippet": "Data:\n    Example_positionsChoicesThisClose: positionsChoicesThisClose(...)",
    "sources": [
      "manual.txt:3593"
    ]
  },
  {
    "name": "pre",
    "category": "function",
    "signature": "pre()",
    "description": "calculated before any test or scan is run. The calculated values are stored in memory arrays alongside the loaded bar data. Their calculation is extremely fast since it can take advantage of multi-threading, and they can be retrieved from memory very efficiently when accessed since they're stored as fixed-size arrays.",
    "snippet": "Data:\n    Example_pre: pre(...)",
    "sources": [
      "manual.txt:3062",
      "samples/bensdorp_book.rts:19",
      "samples/keltner_pullback.rts:5",
      "samples/mr_sample.rts:9",
      "samples/ndx_rotate_factor_test.rts:30"
    ]
  },
  {
    "name": "price",
    "category": "function",
    "signature": "price()",
    "description": "derived lines such as moving averages or volatility bands. The lower pane, which can also be optionally hidden, shows color-coded volume bars, or can show another group of custom indicators (sharing the same scale). This pane automatically appears when it has content or when the data includes volume bars and disappears otherwise.The horizontal dividing line between the panes can be dragged up or down with the mouse to change the relative pane heights.Other features of chart windows:1.Clicking anywhere in the chart shows the cursor or moves it to that location2.The period (dot) key toggles the cursor3.Clicking beyond the range of bars (e.g. in the Y axis legend) or pressing ESC removes the cursor4.The X key toggles the cross-hairs5.Scroll Left/Right by doing any of the following:\u00b7 left/right arrow to move 1 bar",
    "snippet": "Data:\n    Example_price: price(...)",
    "sources": [
      "manual.txt:2520",
      "samples/anchored_vwap.rts:2",
      "samples/cl_term_structure.rts:47",
      "samples/dividend_capture.rts:3",
      "samples/futures_trend_follow_csi.rts:43",
      "samples/keltner_pullback.rts:35",
      "samples/mhp_classic.rts:4",
      "samples/mr_sample_common.rts:42",
      "samples/mr_sample_orders_alera.rts:40",
      "samples/mr_sample_orders_basket.rts:41",
      "samples/mr_sample_test_scan.rts:45",
      "samples/radge_bbo.rts:35",
      "samples/sample_scan.rts:15",
      "samples/scale_in.rts:1",
      "samples/simple_day_trade.rts:33",
      "samples/simple_day_trade_basket_scan.rts:23",
      "samples/trend_following_basics.rts:32",
      "samples/turtles.rts:111",
      "samples/weekly_moc_asx.rts:33",
      "samples/weekly_moc_asx_daily_daily.rts:23",
      "samples/weekly_moc_asx_daily_weekly.rts:23"
    ]
  },
  {
    "name": "probability",
    "category": "function",
    "signature": "probability()",
    "description": "based data to meaningful market values, aiding in the interpretation of logistic regression models.Logit(value) is calculated as Log(value / (1 - value)).",
    "snippet": "Data:\n    Example_probability: probability(...)",
    "sources": [
      "manual.txt:3827"
    ]
  },
  {
    "name": "processing.Choices0",
    "category": "function",
    "signature": "processing.Choices0()",
    "description": "(default) play back the trade list and superimpose strategy formulas (if provided) on those imported trades Latest - play back the trade list verbatim and ignore the strategy definitionany date - play back the trade list verbatim up through that date, then ignore the rest of the imported trades and apply the strategy definition thereafterNotesThe default \"0\" choice (or omitting this element) runs a TradeList strategy as was always done prior to release 2.0.29.2. The EntrySetup formula is ignored. Other strategy formulas, if specified, will modify the behavior of the imported trade.The \"Latest\" choice, or specifying any date after the backtest end date, causes a pure trade list playback regardless of what else is in the strategy definition.Specifying a date that is earlier than the backtest end date runs a pure trade list playback through that date and then switches to a pure strategy backtest.This strategy setting only applies when run mode is Test. In Orders run mode, the trade list (if present) is played back verbatim until the test end date and then the strategy rules are applied generate tomorrow's orders in so-called Hybrid Trade List mode.Another way to think of TLEndDate is that it enables hybrid trade list playback in Test mode.",
    "snippet": "Data:\n    Example_processing.Choices0: processing.Choices0(...)",
    "sources": [
      "manual.txt:4503"
    ]
  },
  {
    "name": "pseudo",
    "category": "function",
    "signature": "pseudo()",
    "description": "expression \"0 and this and that and the other thing\", nothing after the 0 would be evaluated, because it is logically impossible for an expression (or sub-expression) with \"0 and \u2026\" to be anything other than 0. Ditto with \"1 or \u2026\", \"0 * \u2026\", \"0 / \u2026\", etc. You can see this short-circuit in action if you experiment with some formulas in Debug Panel with \"show evaluation\" checked. You can then use this knowledge of how formulas are evaluated to make your tests run even faster, by putting the most-likely-to-be-false terms at the beginning of your conditional formulas.The best place to take advantage of short-circuit efficiency is in the Data section and in your EntrySetup formula. For example, say you have a multi-part EntrySetup concept, such as:\u00b7 price between 10 and 80\u00b7 20-day average volume at least 100K\u00b7 price above its 200-day moving average\u00b7 price down 3 days in a row",
    "snippet": "Data:\n    Example_pseudo: pseudo(...)",
    "sources": [
      "manual.txt:3134"
    ]
  },
  {
    "name": "quantityChoicesTrue",
    "category": "function",
    "signature": "quantityChoicesTrue()",
    "description": "change exit quantity to match entry quantity if needed (ignore any splits between them)False - (default) adjust exit quantity for any splits that happened since entryNotesThis is an advanced option provided for users who want to use Adjustment: TotalReturn data in their strategies.Total-return adjustment literally means convert dividends to splits. Once data is imported that way, dividends become indistinguishable from normal stock splits (which are more rare).A normal stock split changes the number of shares held in any open positions on the ex-split date. RealTest by default accounts for this fact when it generates exit orders (also in the trade lists of backtests).It is generally recommended to avoid using total-return adjustment for any live strategies because it can make exit order quantities incorrect, since the actual corporate action was a dividend, not a split.This option is provided to support users who nevertheless prefer total-return adjustment.If you use this option, be sure to keep an eye out for real splits in your positions. You will need to manually correct their exit order sizes.",
    "snippet": "Data:\n    Example_quantityChoicesTrue: quantityChoicesTrue(...)",
    "sources": [
      "manual.txt:3995"
    ]
  },
  {
    "name": "rd",
    "category": "function",
    "signature": "rd()",
    "description": "Party [that's us] Supported Plugin\".Norgate is the preferred data provider for use with this software. To import data from Norgate, the Norgate Data Updater (NDU) application must be currently running (open) on the same machine as RealTest.",
    "snippet": "Data:\n    Example_rd: rd(...)",
    "sources": [
      "manual.txt:2574"
    ]
  },
  {
    "name": "re",
    "category": "function",
    "signature": "re()",
    "description": "running scripts.It, of course, highly recommended to add your RealTest scripts folder(s) and the backup folder to your list of folders to be backed up by whatever automatic local or cloud backup services you are using, i.e., to also maintain backups of these critical files in a location other than your working computer.When configuring external backups of RealTest files and folders, it is advisable to exclude data files (*.rtd), as they can be quite large and are easy to recreate. It is also advisable to exclude your Data folder and/or *.rtd files from your anti-virus scanning software for better performance.",
    "snippet": "Data:\n    Example_re: re(...)",
    "sources": [
      "manual.txt:2231",
      "samples/actual_trades.rts:50",
      "samples/combined.rts:36",
      "samples/combined_multi_bar_size.rts:35",
      "samples/combined_rebalance.rts:31",
      "samples/hybrid_asset_allocation.rts:46",
      "samples/mr_sample_benchmark.rts:7",
      "samples/ndx_rotate_weekly_reduce.rts:47",
      "samples/optimal_diversity.rts:4",
      "samples/sector_etfs.rts:47",
      "samples/sector_etfs_breadth.rts:69",
      "samples/spy_tlt_uis.rts:20"
    ]
  },
  {
    "name": "read",
    "category": "function",
    "signature": "read()",
    "description": "only Script Window allowing you to view the exact script that was used to run the selected test.Log Test Settings opens a Log Window that shows the key settings that were used to run the selected test.Compare Trade Lists opens a dialog box to select two Test+Strategy pairs, then opens a Trade Comparison Window.List Unique Symbols opens a Log Window and writes a sorted list of each symbol that appears at least once in the selected test.Rename Test allows the text in the Name column of the selected test to be modified.Delete Test deletes the selected test from the Results Window. This cannot be undone.Delete All Tests clears the current Results Window.Copy List To Clipboard copies the entire contents of the list to the Windows clipboard as tab-delimited columnar text. This makes it easy to paste the data from the list into a program such as Excel.Save List As CSV File prompts for a file path and name, then saves the entire contents of the list to the specified file in comma-delimited text (CSV) format.Save Stats Data as CSV File prompts for a file path and name, then all formulas in the Graphs section are evaluated for the combined stats series for each date of the test and written in CSV columns as raw values (format codes are ignored).Save Trade List as CSV File prompts for a file path and name, then all standard and custom trade items for every trade in the test are written in CSV columns as raw values (format codes are ignored).Edit Column Formulas opens a script window with the script that contains the Results Section that was last applied to a Results Window. Most of the time, this will be results.rts unless you've recently applied a different script with a replacement Results section.Refresh Test List forces all the columns to be recalculated and the contents of the window to be redrawn.",
    "snippet": "Data:\n    Example_read: read(...)",
    "sources": [
      "manual.txt:2392"
    ]
  },
  {
    "name": "requestChoicesTrue",
    "category": "function",
    "signature": "requestChoicesTrue()",
    "description": "launch a Norgate updateFalse - don't launch a Norgate update (default)NotesThis import option makes it easy to ensure that Norgate has updated the data before you import it.When a Norgate import is run with Update: TRUE, the update process is launched and RealTest waits for it to finish before starting the import. The status of this operation is shown in the Status Bar. It is fine to be editing scripts, reviewing test results, etc. while an import (or any other task) is running.",
    "snippet": "Data:\n    Example_requestChoicesTrue: requestChoicesTrue(...)",
    "sources": [
      "manual.txt:4561"
    ]
  },
  {
    "name": "returns",
    "category": "function",
    "signature": "returns()",
    "description": "1 if a condition was NEVER true within the specified bar count (in this case the default of all available bars).",
    "snippet": "Data:\n    Example_returns: returns(...)",
    "sources": [
      "manual.txt:2878",
      "samples/beta_indicator.rts:19",
      "samples/djia_earnings.rts:24",
      "samples/martingale.rts:2",
      "samples/trend_following_basics.rts:40"
    ]
  },
  {
    "name": "right",
    "category": "function",
    "signature": "right()",
    "description": "click on a test result row reveals the following popup menu:",
    "snippet": "Data:\n    Example_right: right(...)",
    "sources": [
      "manual.txt:2258",
      "samples/mr_sample.rts:7",
      "samples/mr_sample_benchmark.rts:3",
      "samples/mr_sample_debug.rts:5",
      "samples/mr_sample_hedged.rts:3",
      "samples/mr_sample_long_only.rts:6",
      "samples/mr_sample_short_only.rts:6",
      "samples/mr_sample_tracking.rts:6",
      "samples/mr_sample_tracking_alloc.rts:5",
      "samples/simple_day_trade_basket_orders.rts:5",
      "samples/simple_day_trade_basket_scan.rts:5"
    ]
  },
  {
    "name": "risk",
    "category": "function",
    "signature": "risk()",
    "description": "free rate series. In this case, CashIntPct would typically be negative, e.g. -0.5 if your broker pays 0.5% less than the fed funds rate (with floor of zero).If RiskFreeRateSym is provided but CashIntPct is not provided or is 0 then no interest is received. You must specify a non-zero value of CashIntPct to include interest on excess cash in your backtests.If CashIntPct is provided when there is no RiskFreeRateSym then CashIntPct is simply a fixed annual interest rate.Daily net interest received or paid is added to combined S.Equity and therefore becomes part of the total return of the backtest.The stats series S.Interest can be used to graph or reference the cumulative net interest received or paid in the account.See also MarginIntPct which specifies the rate charged for negative excess cash (margin loan).",
    "snippet": "Data:\n    Example_risk: risk(...)",
    "sources": [
      "manual.txt:3407",
      "samples/futures_trend_follow_csi.rts:21",
      "samples/futures_trend_follow_simple.rts:14",
      "samples/higher_lows.rts:17",
      "samples/keltner_pullback.rts:6",
      "samples/oex_tf_auto_track.rts:31",
      "samples/oex_tf_fresh_signal.rts:16",
      "samples/oex_tf_top_down.rts:24",
      "samples/scale_in.rts:1",
      "samples/tf_dynamic_size.rts:22",
      "samples/tf_sell_half_at_1R.rts:20",
      "samples/trend_following_basics.rts:27",
      "samples/turtles.rts:26"
    ]
  },
  {
    "name": "roll",
    "category": "function",
    "signature": "roll()",
    "description": "over strategy?To solve this problem, RealTest does some extra processing on futures symbols during import. To take advantage of this feature your futures symbols, if your data is not from CSI or Norgate, must have the same format used by one of them.",
    "snippet": "Data:\n    Example_roll: roll(...)",
    "sources": [
      "manual.txt:3148",
      "samples/futures_trend_follow_csi.rts:40",
      "samples/vx_futures.rts:24"
    ]
  },
  {
    "name": "round",
    "category": "function",
    "signature": "round()",
    "description": "trip trades.Transaction lists are things like IB Flex Query output, where each row only specifies a single transaction (e.g. BUY 100 MSFT). RealTest automatically sorts the transaction list by symbol then date and time, and converts it to a round-trip trade list for use in a backtest.Round-trip trade lists include one row per round-trip trade, with both the entry and exit details included.",
    "snippet": "Data:\n    Example_round: round(...)",
    "sources": [
      "manual.txt:2716",
      "samples/clenow_stocks_on_move.rts:53",
      "samples/clenow_stocks_on_move_dynamic.rts:49",
      "samples/hybrid_asset_allocation_dynamic.rts:42",
      "samples/ibd_rs.rts:24",
      "samples/mr_sample_test_scan.rts:79",
      "samples/ndx_rotate_weekly_reduce.rts:40",
      "samples/simple_day_trade_basket_scan.rts:23",
      "samples/tf_dynamic_size.rts:31",
      "samples/turtles.rts:81"
    ]
  },
  {
    "name": "rule",
    "category": "function",
    "signature": "rule()",
    "description": "based exits (this is the default ExitTime). These two facts are why it is possible to determine \"tomorrow's orders\" ahead of time.For strategies that use ThisClose entries or exits, it is not possible to foresee what tomorrow's orders will be. In this case, this caveat will be indicated in the log (here demonstrated by temporarily ExitTime to ThisClose for these strategies):",
    "snippet": "Data:\n    Example_rule: rule(...)",
    "sources": [
      "manual.txt:2769",
      "samples/simple_day_trade.rts:44"
    ]
  },
  {
    "name": "run",
    "category": "function",
    "signature": "run()",
    "description": "mode-specific sections when you need different settings for different modes.Use ScanSettings for settings to apply only apply when running a Scan.Use TestSettings for settings to apply when running a Test or TestScan.Use OptimizeSettings for settings to apply specifically when running an Optimization.Use OrderSettings for settings to apply only when generating orders.",
    "snippet": "Data:\n    Example_run: run(...)",
    "sources": [
      "manual.txt:3056",
      "samples/actual_trades.rts:2",
      "samples/bensdorp_book.rts:36",
      "samples/breadth.rts:3",
      "samples/dividend_capture.rts:35",
      "samples/dividend_yield_series.rts:27",
      "samples/djia_earnings.rts:4",
      "samples/djia_make_syminfo.rts:3",
      "samples/djia_use_syminfo.rts:3",
      "samples/es_compare.rts:4",
      "samples/hybrid_asset_allocation.rts:54",
      "samples/import_norgate.rts:14",
      "samples/import_tiingo.rts:13",
      "samples/mr_sample_orders.rts:8",
      "samples/mr_sample_orders_alera.rts:11",
      "samples/mr_sample_orders_basket.rts:11",
      "samples/mr_sample_scan.rts:15",
      "samples/mr_sample_test_scan.rts:17",
      "samples/mr_sample_tradelist.rts:4",
      "samples/ndx_rotate_factor_test.rts:3",
      "samples/optimal_diversity.rts:6",
      "samples/Sample1.rts:3",
      "samples/simple_day_trade.rts:12",
      "samples/simple_day_trade_basket_scan.rts:19",
      "samples/spy_tlt_uis.rts:6",
      "samples/supertrend.rts:3",
      "samples/weekly_moc_asx_daily_daily.rts:35",
      "samples/weekly_moc_asx_daily_weekly.rts:33"
    ]
  },
  {
    "name": "same",
    "category": "function",
    "signature": "same()",
    "description": "day MOC exitNearCloseTime same as above \"Good After\" time for \"ThisClose\" or \"NextClose\" entry or exit MKT orders including MOC if not supported by exchange (date determined automatically)EarlyLastMocTime same as above LastMocTime for early-close daysEarlyNearCloseTimesame as above NearCloseTime for early-close daysLateLocTime same as above closing auction LOC placement timeEarlyLateLocTime same as above ditto on early close daysWeeklyLastMocTimesame as above Friday \"Good Until\" time for weekly MOCLastOpenTime same as above GTD time for \"at-open\" STP ordersFuturesOpenTime time of day time after which to increment date when processing fill reports (0 or blank means never do so)AllHours 0 or 1 always generate GTD rather than DAY orders (set OutsideRTH flag in brokerage order)",
    "snippet": "Data:\n    Example_same: same(...)",
    "sources": [
      "manual.txt:3609",
      "samples/combined.rts:3",
      "samples/combined_multi_bar_size.rts:3",
      "samples/futures_calendar_spread.rts:16",
      "samples/mr_sample_orders_alera.rts:62",
      "samples/mr_sample_test_scan.rts:47",
      "samples/oc_all_actual.rts:4",
      "samples/weekly_moc_asx_daily_daily.rts:45"
    ]
  },
  {
    "name": "sample1.rts",
    "category": "function",
    "signature": "sample1.rts()",
    "description": "simple moving average crossover strategy for SPY (see Tutorial 1)\u00b7 sample2.rts - a parameterized version of sample1, allowing for optimization (see Tutorial 2)\u00b7 sample2a.rts - a three-parameter version of sample2 (also used in Tutorial 2)\u00b7 sample_scan.rts - introduces the Data section and the scanner (see Tutorial 3)\u00b7 sector_etfs.rts - implements a monthly rotational strategy for the S&P 500 sector ETFs (see Tutorial 4)",
    "snippet": "Data:\n    Example_sample1.rts: sample1.rts(...)",
    "sources": [
      "manual.txt:2234",
      "samples/Sample2.rts:6",
      "samples/Sample2a.rts:6",
      "samples/scale_in.rts:4"
    ]
  },
  {
    "name": "scaling",
    "category": "function",
    "signature": "scaling()",
    "description": "out concept -- sell one-fifth of the original position every day over 5 days:",
    "snippet": "Data:\n    Example_scaling: scaling(...)",
    "sources": [
      "manual.txt:2886"
    ]
  },
  {
    "name": "script",
    "category": "function",
    "signature": "script()",
    "description": "based approach, or a mixture of the two. This panel can be hidden or shown using the View Menu or by pressing the F11 key.",
    "snippet": "Data:\n    Example_script: script(...)",
    "sources": [
      "manual.txt:2424",
      "samples/annual_taxes.rts:2",
      "samples/cl_term_structure.rts:25",
      "samples/combined.rts:1",
      "samples/combined_multi_bar_size.rts:1",
      "samples/goal_30_15.rts:31",
      "samples/goal_30_15_asx.rts:32",
      "samples/goal_30_15_tsx.rts:30",
      "samples/management_fees.rts:2",
      "samples/mr_sample_debug.rts:8",
      "samples/mr_sample_hedged.rts:5",
      "samples/mr_sample_long_only.rts:9",
      "samples/mr_sample_orders.rts:8",
      "samples/mr_sample_orders_alera.rts:11",
      "samples/mr_sample_orders_basket.rts:11",
      "samples/mr_sample_tradelist.rts:4",
      "samples/multi_moc_top_down.rts:78",
      "samples/ndx_plus_wtf_script.rts:2",
      "samples/oc_all_actual.rts:2",
      "samples/optimal_diversity.rts:6",
      "samples/radge_bbo.rts:3",
      "samples/scale_in.rts:2",
      "samples/simple_day_trade.rts:12",
      "samples/simple_day_trade_basket_orders.rts:8",
      "samples/vx_term_structure.rts:31",
      "samples/weekly_moc_asx.rts:4",
      "samples/weekly_moc_asx_daily_daily.rts:8",
      "samples/weekly_moc_asx_daily_weekly.rts:2"
    ]
  },
  {
    "name": "sctr.rts",
    "category": "function",
    "signature": "sctr.rts()",
    "description": "shows how to calculate \"StockCharts Trend Rank\" for any universe of stocks\u00b7 stockbee_mm.rts - shows how to calculate current and historical values for the Stockbee Market Monitor breadth indicators",
    "snippet": "Data:\n    Example_sctr.rts: sctr.rts(...)",
    "sources": [
      "manual.txt:2237"
    ]
  },
  {
    "name": "sections",
    "category": "function",
    "signature": "sections()",
    "description": "- the example uses the S&P 100 Current & Past universe.)This is a far more complex example than the snippets above.The strategy's EntrySetup rule serves two purposes here: 1.Enter a new position if the condition specifed in the Data section \"setup\" variable is met and there is no current position.2.Add a new position portion whenever the target quantity exceeds the current total position quantity by more than X%.There are two separate exits:1.The entire position will be exited if the trailing ExitStop is hit.2.A partial exit will occur whenever the total position quantity exceeds the target quantity by more than X%.As the test runs and partial positions are dynamically added and closed at various sizes, the total position will consist of any number of sub positions. This is why MaxSameSym is set to an arbitrarily large number (99). Notice the special technique in the Library section of referring to extern(@tf_dynamic, shares). This",
    "snippet": "Data:\n    Example_sections: sections(...)",
    "sources": [
      "manual.txt:2890"
    ]
  },
  {
    "name": "self",
    "category": "function",
    "signature": "self()",
    "description": "referential data item formulas is an advanced programming technique that you will most likely never require. But if you do, this shows how they work.Data item formula calculation occurs in a loop from earliest to latest bar of each stock. (This is analogous to how you would set up a data series calculation in an Excel column, by typing a formula in the first cell, then doing \"fill down\". Excel automatically adjusts each cell reference to produce a running calculation.)As a first example, let's calculate and store an \"all-time high\" series for each stock.A typical formula for all-time high would be:",
    "snippet": "Data:\n    Example_self: self(...)",
    "sources": [
      "manual.txt:3012",
      "samples/flipper.rts:22",
      "samples/supertrend.rts:6"
    ]
  },
  {
    "name": "separatorChoicesPoint",
    "category": "function",
    "signature": "separatorChoicesPoint()",
    "description": "point (period) is used (default)Comma - comma is usedNotesBy default (and by definition) comma is the field separator in a CSV file, and point is the decimal",
    "snippet": "Data:\n    Example_separatorChoicesPoint: separatorChoicesPoint(...)",
    "sources": [
      "manual.txt:3490"
    ]
  },
  {
    "name": "settings",
    "category": "function",
    "signature": "settings()",
    "description": "level HolidayList will apply to all strategies in the script.A strategy-level HolidayList only applies to that strategy and will override the settings-level list of both are provided.For US stock strategies you can specify HolidayList: us_auto and RealTest will calculate all US market holidays for the next several years.You can optionally specify HolidayList: us_auto_log to cause the generated holiday list to be written to a log window when a test is run.Note that the us_auto holiday list is calculated using NYSE holiday rules and does not include one-time holidays such as 2025-01-09.To specify holidays that aren't the same as the standard US ones, e.g. for another country, provide a text file with one holiday date per line.The Examples folder includes holiday list files for US, AU, and CA.Only future market holidays need to be listed (typically there are about 10 per year).Dates on which the market closes early should also be included, preceded by an asterisk, e.g. *2022-11-25. Early-close dates are used when generating orders that include specific times (good after time, good until date).",
    "snippet": "Data:\n    Example_settings: settings(...)",
    "sources": [
      "manual.txt:3722",
      "samples/actual_trades.rts:14",
      "samples/anchored_vwap.rts:13",
      "samples/annual_taxes.rts:18",
      "samples/bensdorp_book.rts:12",
      "samples/beta_indicator.rts:21",
      "samples/breadth.rts:23",
      "samples/cii_rotate.rts:38",
      "samples/cl_term_structure.rts:37",
      "samples/clenow_stocks_on_move.rts:15",
      "samples/clenow_stocks_on_move_dynamic.rts:15",
      "samples/combined.rts:15",
      "samples/combined_multi_bar_size.rts:15",
      "samples/combined_rebalance.rts:4",
      "samples/correl_multi.rts:14",
      "samples/dalio_all_weather.rts:11",
      "samples/dalio_all_weather_maxdiff.rts:11",
      "samples/dividend_capture.rts:15",
      "samples/dividend_yield_series.rts:20",
      "samples/djia_earnings.rts:16",
      "samples/djia_make_syminfo.rts:13",
      "samples/djia_use_syminfo.rts:15",
      "samples/ehlers_windows.rts:12",
      "samples/es_compare.rts:14",
      "samples/flipper.rts:12",
      "samples/fundamentals.rts:14",
      "samples/futures_calendar_spread.rts:23",
      "samples/futures_trend_follow_csi.rts:11",
      "samples/futures_trend_follow_simple.rts:25",
      "samples/futures_volume_rank.rts:21",
      "samples/gc_kelly.rts:23",
      "samples/goal_30_15.rts:11",
      "samples/goal_30_15_asx.rts:14",
      "samples/goal_30_15_tsx.rts:14",
      "samples/higher_lows.rts:10",
      "samples/hybrid_asset_allocation.rts:17",
      "samples/hybrid_asset_allocation_dynamic.rts:16",
      "samples/ibd_rs.rts:6",
      "samples/import_multi.rts:38",
      "samples/import_norgate.rts:19",
      "samples/import_tiingo.rts:25",
      "samples/index_breadth.rts:19",
      "samples/industry_indices.rts:32",
      "samples/keller_baa.rts:16",
      "samples/keltner_pullback.rts:25",
      "samples/management_fees.rts:34",
      "samples/martingale.rts:10",
      "samples/mhp_classic.rts:13",
      "samples/mr_sample.rts:9",
      "samples/mr_sample_common.rts:13",
      "samples/mr_sample_debug.rts:8",
      "samples/mr_sample_long_only.rts:8",
      "samples/mr_sample_orders.rts:8",
      "samples/mr_sample_orders_alera.rts:11",
      "samples/mr_sample_orders_basket.rts:11",
      "samples/mr_sample_scan.rts:13",
      "samples/mr_sample_short_only.rts:8",
      "samples/mr_sample_test_scan.rts:13",
      "samples/mr_sample_tradelist.rts:14",
      "samples/multi_filter_scan.rts:4",
      "samples/multi_moc_top_down.rts:12",
      "samples/ndx_plus_wtf_script.rts:14",
      "samples/ndx_plus_wtf_tradelists.rts:13",
      "samples/ndx_rotate.rts:14",
      "samples/ndx_rotate_factor_test.rts:5",
      "samples/ndx_rotate_make_tradelist.rts:13",
      "samples/ndx_rotate_rebalance.rts:5",
      "samples/ndx_rotate_weekly_reduce.rts:6",
      "samples/oc_all_actual.rts:17",
      "samples/oex_tf_auto_track.rts:15",
      "samples/oex_tf_fresh_signal.rts:9",
      "samples/oex_tf_top_down.rts:15",
      "samples/opex_and_vxex.rts:11",
      "samples/optimal_diversity.rts:16",
      "samples/radge_bbo.rts:13",
      "samples/Sample1.rts:12",
      "samples/Sample2.rts:5",
      "samples/Sample2a.rts:5",
      "samples/sample_scan.rts:4",
      "samples/scale_in.rts:4",
      "samples/sctr.rts:28",
      "samples/sector_etfs.rts:12",
      "samples/sector_etfs_breadth.rts:14",
      "samples/simple_day_trade.rts:11",
      "samples/spy_tlt_uis.rts:29",
      "samples/stockbee_mm.rts:31",
      "samples/supertrend.rts:40",
      "samples/tf_dynamic_size.rts:15",
      "samples/tf_sell_half_at_1R.rts:13",
      "samples/trend_following_basics.rts:14",
      "samples/turtles.rts:13",
      "samples/two_accounts.rts:16",
      "samples/two_accounts_rebalance.rts:16",
      "samples/vigilant_asset_allocation.rts:14",
      "samples/vx_futures.rts:12",
      "samples/vx_term_structure.rts:13",
      "samples/vxx_long_short.rts:13",
      "samples/weekly_moc_asx.rts:14",
      "samples/weekly_moc_asx_daily_daily.rts:4",
      "samples/weekly_moc_asx_daily_weekly.rts:4",
      "samples/weekly_trend_follow.rts:12",
      "samples/weekly_trend_follow_make_tradelist.rts:13",
      "samples/yield_rank.rts:14"
    ]
  },
  {
    "name": "short",
    "category": "function",
    "signature": "short()",
    "description": "term daily trading strategies and even some intraday strategies (with MOC exit) using daily bars only.I have spent many years building and running short-term (average holding period 3 days) systems that were tested using daily bars, and have spent a lot of time comparing model to actual results and understanding the differences. The bottom line is that the slight loss of fidelity from not having intraday data in a backtest is dwarfed by the other sources of randomness in live trading. The standard deviation between model and actual per-trade results is large, but the differences always seem to cancel out, resulting in similar overall results over a large enough sample of trades. My view, therefore, is that most kinds of entry and exit techniques can be modeled using daily bars without compromising the validity of the system (unless, of course, your strategy aims to enter and exit multiple times per day).If you want to insist on complete fidelity between a model and actual trading, then the only choice available is to enter and exit all positions at the open.Entries or exits \"at the close\" are, with today\u2019s execution technologies, also completely practical. Orders can be submitted one minute before the close and be filled within seconds, unless you are trading very thin stocks and/or huge size.",
    "snippet": "Data:\n    Example_short: short(...)",
    "sources": [
      "manual.txt:2856",
      "samples/bensdorp_book.rts:44",
      "samples/combined.rts:62",
      "samples/combined_multi_bar_size.rts:59",
      "samples/combined_rebalance.rts:61",
      "samples/futures_trend_follow_csi.rts:2",
      "samples/goal_30_15.rts:2",
      "samples/goal_30_15_asx.rts:32",
      "samples/goal_30_15_tsx.rts:30",
      "samples/mhp_classic.rts:48",
      "samples/mr_sample.rts:2",
      "samples/mr_sample_debug.rts:41",
      "samples/mr_sample_hedged.rts:1",
      "samples/mr_sample_orders.rts:30",
      "samples/mr_sample_orders_alera.rts:52",
      "samples/mr_sample_orders_basket.rts:52",
      "samples/mr_sample_scan.rts:35",
      "samples/mr_sample_short_only.rts:2",
      "samples/mr_sample_test_scan.rts:36",
      "samples/mr_sample_tracking.rts:22",
      "samples/mr_sample_tracking_alloc.rts:21",
      "samples/mr_sample_tradelist.rts:30",
      "samples/multi_filter_scan.rts:29",
      "samples/ndx_rotate_factor_test.rts:23",
      "samples/sctr.rts:15",
      "samples/turtles.rts:73",
      "samples/two_accounts.rts:3",
      "samples/two_accounts_rebalance.rts:3",
      "samples/vx_futures.rts:2",
      "samples/vxx_long_short.rts:2"
    ]
  },
  {
    "name": "single",
    "category": "function",
    "signature": "single()",
    "description": "quoted' or \"double-quoted\". If you need literal quotes of one type within a string, surround it with the other type.Basic formula operators that work with strings are: <, <=, >, >=, ==, <>. For example, 'b' > 'a' will evaluate as 1 (true). In all cases, case-sensitive comparison is used. (For case-insensitive comparison, use ToLower('B') > ToLower('a'), for example.) You are not prevented from using other operators with strings, comparing strings to numbers, etc. but the results of doing so are unlikely to be meaningful.Several functions are provided to operate on strings, including:\u00b7 Format\u00b7 Match\u00b7 ToDate\u00b7 ToNum\u00b7 ToLower\u00b7 ToUpperThe most likely use of strings as mentioned above is in Scan output. They can also be used in Trades column definitions. You can experiment with string expressions in the Debug Panel.",
    "snippet": "Data:\n    Example_single: single(...)",
    "sources": [
      "manual.txt:2930",
      "samples/combined.rts:35",
      "samples/combined_multi_bar_size.rts:34",
      "samples/combined_rebalance.rts:30",
      "samples/goal_30_15.rts:2",
      "samples/import_csv.rts:6",
      "samples/import_multi.rts:44",
      "samples/mr_sample_tradelist.rts:2",
      "samples/sector_etfs.rts:19",
      "samples/trend_following_basics.rts:2"
    ]
  },
  {
    "name": "situations",
    "category": "function",
    "signature": "situations()",
    "description": "- think of this constraint as \"maximum intended exposure\".See Also: Backtest Engine Details and Capacity Constraints",
    "snippet": "Data:\n    Example_situations: situations(...)",
    "sources": [
      "manual.txt:3861"
    ]
  },
  {
    "name": "special",
    "category": "function",
    "signature": "special()",
    "description": "purpose scripts results.rts and graphs.rts, and can also be used in strategy formulas. Similar to a bar fields in that these represent a series of values, one per date. \u00b7 FunStat - ordinal number of a stat period within the calculation of a multi-bar function\u00b7 S.Alloc - current allocation amount\u00b7 S.BPY - strategy bars per year\u00b7 S.CashInOut - cumulative net cash in-out (excluded from backtest stats)\u00b7 S.Comms - total commissions this period\u00b7 S.Compounded - strategy compounding flag\u00b7 S.Date - date of the current stat period\u00b7 S.DDBars - current drawdown duration\u00b7 S.DDDlr - current dollar drawdown\u00b7 S.DDPct - current percent drawdown\u00b7 S.Dividends - total dividends this period\u00b7 S.Entries - count of positions entered this period\u00b7 S.EntryOrders - number of entry orders that were placed this period\u00b7 S.Equity - current equity amount\u00b7 S.Exits - count of positions exited this period\u00b7 S.Exposure - total percent of allocation held overnight in open positions\u00b7 S.FeesInOut - cumulative net fees in-out (included in backtest stats)\u00b7 S.First - period number in which first strategy trade entry occurred\u00b7 S.FreeCash - current free cash balance\u00b7 S.Interest - net interest received-paid this period\u00b7 S.Invested - total dollar value held overnight in all open positions\u00b7 S.LongExp - total percent of allocation held overnight in open long positions",
    "snippet": "Data:\n    Example_special: special(...)",
    "sources": [
      "manual.txt:3198",
      "samples/cii_rotate.rts:6",
      "samples/dividend_capture.rts:10",
      "samples/dividend_yield_series.rts:9",
      "samples/industry_indices.rts:8",
      "samples/yield_rank.rts:9"
    ]
  },
  {
    "name": "split",
    "category": "function",
    "signature": "split()",
    "description": "unadjusted. Any time any formula refers to \"Close\", the value returned is the real as-traded close for the current bar being evaluated.To avoid potential distortions when using bar offsets or calculating multi-bar indicators, RealTest temporarily split-adjusts all past bars to the current bar being evaluated while making such calculations. In other words, RealTest always adjusts for past splits, but never adjusts for future splits that could not have been known in advance.This method of past-only split adjustment makes all price and indicator values automatically \"as-traded\" in all situations, avoids distortions across past splits, and avoids subtle look-ahead bias which can occur when using data that is adjusted for future splits.As a simple example, consider TSLA stock in 2020.",
    "snippet": "Data:\n    Example_split: split(...)",
    "sources": [
      "manual.txt:2840",
      "samples/actual_trades.rts:58",
      "samples/dividend_capture.rts:9"
    ]
  },
  {
    "name": "squiggly",
    "category": "function",
    "signature": "squiggly()",
    "description": "brace comment style. If no format specification is provided, the \"general\" format will be used (as in Excel). As one quick example, the NetProfit formula in Results.rts is defined as {$0} S.Equity - S.StartEquity. The $0 tells RealTest to display this stat as a whole dollar value.You can see other examples of these codes in the section links above.Available Formatting CodesCode Used In Shows This Digits (if present) Specify# scans, trades, charts, graphs, results general-purpose numeric value number of decimal places",
    "snippet": "Data:\n    Example_squiggly: squiggly(...)",
    "sources": [
      "manual.txt:2961"
    ]
  },
  {
    "name": "stop",
    "category": "function",
    "signature": "stop()",
    "description": "based entry strategy where the opening gap is excessively large.When a strategy includes an EntryLimit and/or an EntryStop formula, all entry-related formulas are evaluated using the prior day as the current bar, so that there can be no possibility of a look-ahead error. EntrySetup is evaluated first, and no other entry formulas are evaluated if it returns 0. (The only exception is when EntryTime is ThisClose, which implies that a live data feed would be used to enter just before the close.)If the EntryLimit formula returns 0, this means \"always enter\", i.e., it becomes a market order (or a simple stop order if EntryStop was also specified).ExamplesEnter long when price drops 4% below yesterday's close: EntryLimit: C * 0.96Enter short when price touches an upper Bollinger Band: EntryLimit: BBTop(20, 2)Enter long when RSI(2) reaches 5: EntryLimit: RRSI(2,5)",
    "snippet": "Data:\n    Example_stop: stop(...)",
    "sources": [
      "manual.txt:3580",
      "samples/futures_trend_follow_csi.rts:22",
      "samples/futures_trend_follow_simple.rts:15",
      "samples/goal_30_15.rts:61",
      "samples/goal_30_15_asx.rts:62",
      "samples/goal_30_15_tsx.rts:60",
      "samples/higher_lows.rts:39",
      "samples/keltner_pullback.rts:4",
      "samples/mr_sample.rts:18",
      "samples/mr_sample_long_only.rts:21",
      "samples/mr_sample_short_only.rts:19",
      "samples/mr_sample_tracking.rts:20",
      "samples/ndx_plus_wtf_script.rts:63",
      "samples/tf_dynamic_size.rts:5",
      "samples/tf_sell_half_at_1R.rts:4",
      "samples/trend_following_basics.rts:3",
      "samples/turtles.rts:92",
      "samples/two_accounts.rts:97",
      "samples/two_accounts_rebalance.rts:97",
      "samples/weekly_trend_follow.rts:29",
      "samples/weekly_trend_follow_make_tradelist.rts:33"
    ]
  },
  {
    "name": "strategy",
    "category": "function",
    "signature": "strategy()",
    "description": "level BarSize setting as well. This is used when you want to combine strategies that use different bar sizes. The strategy-level setting overrides the global setting for all formulas defined within that strategy (including any Library formulas they reference, since these are context-dependent, unlike data items).Regardless of the current global or strategy-level bar size, any part of any expression can explicitly specify a different bar size by using the Extern function with the special tilde (~) symbol. For example, Extern(~Weekly, MA(C,20)) would return a 20-week moving average of close, starting with the most recently completed week and going back 20 weeks from there, regardless of the current bar size setting.The Data Section has both unique capabilities and unique constraints with regard to bar size, which are described here.For an example of a script that makes use of multiple bar sizes, see combined_multi_bar_size.rts in the Examples folder.",
    "snippet": "Data:\n    Example_strategy: strategy(...)",
    "sources": [
      "manual.txt:2861",
      "samples/actual_trades.rts:22",
      "samples/anchored_vwap.rts:32",
      "samples/annual_taxes.rts:29",
      "samples/bensdorp_book.rts:36",
      "samples/cii_rotate.rts:57",
      "samples/clenow_stocks_on_move.rts:2",
      "samples/clenow_stocks_on_move_dynamic.rts:2",
      "samples/combined.rts:8",
      "samples/combined_multi_bar_size.rts:2",
      "samples/combined_rebalance.rts:2",
      "samples/dalio_all_weather.rts:24",
      "samples/dalio_all_weather_maxdiff.rts:31",
      "samples/dividend_capture.rts:2",
      "samples/es_compare.rts:27",
      "samples/flipper.rts:2",
      "samples/futures_trend_follow_csi.rts:45",
      "samples/futures_trend_follow_simple.rts:2",
      "samples/futures_volume_rank.rts:4",
      "samples/gc_kelly.rts:2",
      "samples/goal_30_15.rts:56",
      "samples/goal_30_15_asx.rts:57",
      "samples/goal_30_15_tsx.rts:55",
      "samples/higher_lows.rts:1",
      "samples/hybrid_asset_allocation.rts:41",
      "samples/hybrid_asset_allocation_dynamic.rts:44",
      "samples/keller_baa.rts:35",
      "samples/keltner_pullback.rts:2",
      "samples/management_fees.rts:3",
      "samples/martingale.rts:1",
      "samples/mhp_classic.rts:39",
      "samples/mr_sample.rts:2",
      "samples/mr_sample_common.rts:36",
      "samples/mr_sample_debug.rts:27",
      "samples/mr_sample_hedged.rts:1",
      "samples/mr_sample_long_only.rts:10",
      "samples/mr_sample_orders.rts:20",
      "samples/mr_sample_orders_alera.rts:18",
      "samples/mr_sample_orders_basket.rts:35",
      "samples/mr_sample_short_only.rts:9",
      "samples/mr_sample_test_scan.rts:41",
      "samples/mr_sample_tracking.rts:2",
      "samples/mr_sample_tracking_alloc.rts:1",
      "samples/mr_sample_tradelist.rts:2",
      "samples/multi_moc_top_down.rts:2",
      "samples/ndx_plus_wtf_script.rts:41",
      "samples/ndx_plus_wtf_tradelists.rts:24",
      "samples/ndx_rotate.rts:33",
      "samples/ndx_rotate_factor_test.rts:52",
      "samples/ndx_rotate_make_tradelist.rts:35",
      "samples/ndx_rotate_rebalance.rts:30",
      "samples/ndx_rotate_weekly_reduce.rts:15",
      "samples/oc_all_actual.rts:27",
      "samples/oex_tf_auto_track.rts:2",
      "samples/oex_tf_fresh_signal.rts:29",
      "samples/oex_tf_top_down.rts:2",
      "samples/optimal_diversity.rts:5",
      "samples/radge_bbo.rts:2",
      "samples/Sample1.rts:18",
      "samples/Sample2.rts:15",
      "samples/Sample2a.rts:16",
      "samples/scale_in.rts:12",
      "samples/sector_etfs.rts:31",
      "samples/sector_etfs_breadth.rts:59",
      "samples/simple_day_trade.rts:2",
      "samples/spy_tlt_uis.rts:2",
      "samples/supertrend.rts:45",
      "samples/tf_dynamic_size.rts:2",
      "samples/tf_sell_half_at_1R.rts:2",
      "samples/trend_following_basics.rts:2",
      "samples/turtles.rts:20",
      "samples/two_accounts.rts:61",
      "samples/two_accounts_rebalance.rts:61",
      "samples/vigilant_asset_allocation.rts:35",
      "samples/vx_futures.rts:2",
      "samples/vxx_long_short.rts:2",
      "samples/weekly_moc_asx.rts:2",
      "samples/weekly_moc_asx_daily_daily.rts:2",
      "samples/weekly_moc_asx_daily_weekly.rts:2",
      "samples/weekly_trend_follow.rts:2",
      "samples/weekly_trend_follow_make_tradelist.rts:33"
    ]
  },
  {
    "name": "strategy.ChoicesNone",
    "category": "function",
    "signature": "strategy.ChoicesNone()",
    "description": "do not add a tracking benchmark (default)Hidden - add a tracking benchmark that will not appear in graphs or reports",
    "snippet": "Data:\n    Example_strategy.ChoicesNone: strategy.ChoicesNone(...)",
    "sources": [
      "manual.txt:4531"
    ]
  },
  {
    "name": "strategyChoicesFalse",
    "category": "function",
    "signature": "strategyChoicesFalse()",
    "description": "do not adopt positions entered before the start date (default)True - do adopt themNotesTrades entered before the start date will only be adopted by the strategy if they were exited after the start date or have no exit specified.When such trades are adopted, their entry dates are changed to match the test's start date.",
    "snippet": "Data:\n    Example_strategyChoicesFalse: strategyChoicesFalse(...)",
    "sources": [
      "manual.txt:4497"
    ]
  },
  {
    "name": "sub",
    "category": "function",
    "signature": "sub()",
    "description": "sections that correspond to the various tasks involved in the trading system research workflow.",
    "snippet": "Data:\n    Example_sub: sub(...)",
    "sources": [
      "manual.txt:2226",
      "samples/clenow_stocks_on_move.rts:3",
      "samples/scale_in.rts:12",
      "samples/tf_dynamic_size.rts:38"
    ]
  },
  {
    "name": "symbol",
    "category": "function",
    "signature": "symbol()",
    "description": "specific, just the summary-level stats (S.xxx) of the strategy",
    "snippet": "Data:\n    Example_symbol: symbol(...)",
    "sources": [
      "manual.txt:3042",
      "samples/actual_trades.rts:4",
      "samples/annual_taxes.rts:23",
      "samples/bensdorp_book.rts:165",
      "samples/breadth.rts:30",
      "samples/cii_rotate.rts:7",
      "samples/cl_term_structure.rts:16",
      "samples/clenow_stocks_on_move.rts:72",
      "samples/clenow_stocks_on_move_dynamic.rts:48",
      "samples/combined.rts:1",
      "samples/combined_multi_bar_size.rts:1",
      "samples/combined_rebalance.rts:28",
      "samples/correl_multi.rts:41",
      "samples/dalio_all_weather.rts:28",
      "samples/dalio_all_weather_maxdiff.rts:27",
      "samples/djia_earnings.rts:14",
      "samples/djia_make_syminfo.rts:21",
      "samples/djia_use_syminfo.rts:2",
      "samples/es_compare.rts:19",
      "samples/futures_calendar_spread.rts:12",
      "samples/futures_volume_rank.rts:41",
      "samples/hybrid_asset_allocation_dynamic.rts:41",
      "samples/import_csv.rts:16",
      "samples/import_multi.rts:15",
      "samples/import_norgate.rts:3",
      "samples/import_tiingo.rts:32",
      "samples/index_breadth.rts:27",
      "samples/industry_indices.rts:7",
      "samples/management_fees.rts:23",
      "samples/mr_sample_benchmark.rts:6",
      "samples/mr_sample_debug.rts:17",
      "samples/mr_sample_hedged.rts:12",
      "samples/multi_filter_scan.rts:2",
      "samples/oc_all_actual.rts:6",
      "samples/opex_and_vxex.rts:32",
      "samples/optimal_diversity.rts:46",
      "samples/radge_bbo.rts:26",
      "samples/sector_etfs.rts:46",
      "samples/sector_etfs_breadth.rts:22",
      "samples/simple_day_trade_basket_scan.rts:20",
      "samples/spy_tlt_uis.rts:58",
      "samples/stockbee_mm.rts:37",
      "samples/tf_dynamic_size.rts:30",
      "samples/two_accounts.rts:67",
      "samples/two_accounts_rebalance.rts:67",
      "samples/vx_term_structure.rts:22",
      "samples/vxx_long_short.rts:23"
    ]
  },
  {
    "name": "systems",
    "category": "function",
    "signature": "systems()",
    "description": "- systems for which all orders for the upcoming day can be specified when the market is not currently open. In other words, RealTest does NOT support live trading of strategies that would require live data to evaluate realtime intraday trading signals. In practice, since RealTest can't backtest intraday strategies either, this is not a major limitation to its order generation capabilities.After a test is run in Orders mode, a new Log Window is opened showing the list of orders that would need to be placed with a broker before the open of the next day after the last date of the test. This can also be thought of as Tomorrow's Orders.See Generated Order Types for details about how RealTest maps strategy rules to generated orders.To best illustrate this feature, open the mr_sample.rts example script, and modify its Settings section to look like the following:",
    "snippet": "Data:\n    Example_systems: systems(...)",
    "sources": [
      "manual.txt:2765",
      "samples/bensdorp_book.rts:2",
      "samples/mhp_classic.rts:2",
      "samples/turtles.rts:1"
    ]
  },
  {
    "name": "tab",
    "category": "function",
    "signature": "tab()",
    "description": "delimited columnar text. This makes it easy to paste the data from the list into a program such as Excel.Save List As CSV File prompts for a file path and name, then saves the entire contents of the list to the specified file in comma-delimited text (CSV) format.",
    "snippet": "Data:\n    Example_tab: tab(...)",
    "sources": [
      "manual.txt:2376"
    ]
  },
  {
    "name": "ten",
    "category": "function",
    "signature": "ten()",
    "description": "share interval.QtyRound: 0.1 means round to the next lower tenth-of-a-share interval.When rounded, Quantity is always rounded down (truncated), e.g. 12.99 will be rounded to 12 if QtyRound: 1 is in use.Quantity is rounded down by default to avoid the possibility of share rounding pushing a position value slightly over the MaxInvested threshold.If you want to round up, or round nearest, specify QtyRound: 0 and use the Round function in your Quantity formula while keeping QtyType as Shares (the default).",
    "snippet": "Data:\n    Example_ten: ten(...)",
    "sources": [
      "manual.txt:4037"
    ]
  },
  {
    "name": "test",
    "category": "function",
    "signature": "test()",
    "description": "level statistic, the values returned will be the same for every strategy regardless of strategy-specific bar size.",
    "snippet": "Data:\n    Example_test: test(...)",
    "sources": [
      "manual.txt:4097",
      "samples/actual_trades.rts:2",
      "samples/bensdorp_book.rts:8",
      "samples/cii_rotate.rts:57",
      "samples/combined_multi_bar_size.rts:29",
      "samples/es_compare.rts:2",
      "samples/higher_lows.rts:41",
      "samples/martingale.rts:18",
      "samples/mr_sample_debug.rts:2",
      "samples/mr_sample_orders.rts:2",
      "samples/mr_sample_orders_alera.rts:2",
      "samples/mr_sample_orders_basket.rts:2",
      "samples/mr_sample_scan.rts:29",
      "samples/mr_sample_test_scan.rts:3",
      "samples/ndx_rotate_factor_test.rts:2",
      "samples/ndx_rotate_rebalance.rts:14",
      "samples/Sample1.rts:3",
      "samples/sector_etfs.rts:19",
      "samples/simple_day_trade.rts:23",
      "samples/spy_tlt_uis.rts:14"
    ]
  },
  {
    "name": "testChoicesDefault",
    "category": "function",
    "signature": "testChoicesDefault()",
    "description": "assume that if Close > Open then Low preceded High, or if Close < Open then High preceded Low (best guess)Stop - always exit at the stop price if that price was touched (most pessimistic) Target - always exit at the target (limit) price if that price was touched (most optimistic)Neither - do not exit if exit price cannot be determined with zero ambiguity (most strict)",
    "snippet": "Data:\n    Example_testChoicesDefault: testChoicesDefault(...)",
    "sources": [
      "manual.txt:3342"
    ]
  },
  {
    "name": "testChoicesTrue",
    "category": "function",
    "signature": "testChoicesTrue()",
    "description": "include all datesFalse - (default) only run the scan on the last date of the test (before doing end-of-test exits)NotesSee Test Output Scan for more information.",
    "snippet": "Data:\n    Example_testChoicesTrue: testChoicesTrue(...)",
    "sources": [
      "manual.txt:4485"
    ]
  },
  {
    "name": "the",
    "category": "function",
    "signature": "the()",
    "description": "inifile command line option.For example RealTest -inifile project1.ini would run RealTest using that settings file rather than the default RealTest.ini.This use of multiple ini files can help avoid the potential confusion of two instances both updating the same ini file.It can also provide a way to maintain separate settings, open and recent file lists, etc. for different projects.",
    "snippet": "Data:\n    Example_the: the(...)",
    "sources": [
      "manual.txt:2741",
      "samples/actual_trades.rts:24",
      "samples/anchored_vwap.rts:3",
      "samples/bensdorp_book.rts:2",
      "samples/beta_indicator.rts:19",
      "samples/breadth.rts:2",
      "samples/cii_rotate.rts:2",
      "samples/cl_term_structure.rts:2",
      "samples/clenow_stocks_on_move.rts:2",
      "samples/clenow_stocks_on_move_dynamic.rts:2",
      "samples/combined.rts:24",
      "samples/combined_multi_bar_size.rts:23",
      "samples/combined_rebalance.rts:12",
      "samples/dalio_all_weather.rts:18",
      "samples/dalio_all_weather_maxdiff.rts:18",
      "samples/dividend_capture.rts:3",
      "samples/djia_earnings.rts:5",
      "samples/djia_use_syminfo.rts:3",
      "samples/ehlers_windows.rts:3",
      "samples/es_compare.rts:3",
      "samples/flipper.rts:2",
      "samples/fundamentals.rts:3",
      "samples/futures_calendar_spread.rts:12",
      "samples/futures_trend_follow_csi.rts:43",
      "samples/gics_indu_rank.rts:2",
      "samples/goal_30_15.rts:1",
      "samples/goal_30_15_asx.rts:1",
      "samples/goal_30_15_tsx.rts:1",
      "samples/hybrid_asset_allocation.rts:13",
      "samples/hybrid_asset_allocation_dynamic.rts:12",
      "samples/ibd_rs.rts:13",
      "samples/import_csv.rts:9",
      "samples/import_ms.rts:3",
      "samples/import_multi.rts:5",
      "samples/import_norgate.rts:4",
      "samples/import_tiingo.rts:2",
      "samples/import_yahoo.rts:2",
      "samples/index_breadth.rts:2",
      "samples/industry_indices.rts:5",
      "samples/keller_baa.rts:43",
      "samples/keltner_pullback.rts:8",
      "samples/management_fees.rts:3",
      "samples/mhp_classic.rts:2",
      "samples/mr_sample.rts:4",
      "samples/mr_sample_benchmark.rts:1",
      "samples/mr_sample_common.rts:2",
      "samples/mr_sample_debug.rts:3",
      "samples/mr_sample_hedged.rts:1",
      "samples/mr_sample_long_only.rts:9",
      "samples/mr_sample_orders.rts:3",
      "samples/mr_sample_orders_alera.rts:61",
      "samples/mr_sample_orders_basket.rts:1",
      "samples/mr_sample_scan.rts:1",
      "samples/mr_sample_short_only.rts:13",
      "samples/mr_sample_test_scan.rts:1",
      "samples/mr_sample_tracking.rts:3",
      "samples/mr_sample_tracking_alloc.rts:18",
      "samples/mr_sample_tradelist.rts:6",
      "samples/multi_moc_top_down.rts:2",
      "samples/ndx_plus_wtf_script.rts:2",
      "samples/ndx_plus_wtf_tradelists.rts:2",
      "samples/ndx_rotate_factor_test.rts:3",
      "samples/ndx_rotate_weekly_reduce.rts:14",
      "samples/oc_all_actual.rts:4",
      "samples/oex_tf_auto_track.rts:65",
      "samples/opex_and_vxex.rts:23",
      "samples/optimal_diversity.rts:3",
      "samples/Sample1.rts:3",
      "samples/sctr.rts:21",
      "samples/sector_etfs.rts:5",
      "samples/sector_etfs_breadth.rts:2",
      "samples/simple_day_trade.rts:44",
      "samples/simple_day_trade_basket_orders.rts:2",
      "samples/simple_day_trade_basket_scan.rts:14",
      "samples/spy_tlt_uis.rts:5",
      "samples/supertrend.rts:6",
      "samples/tf_sell_half_at_1R.rts:3",
      "samples/trend_following_basics.rts:21",
      "samples/turtles.rts:1",
      "samples/two_accounts.rts:63",
      "samples/two_accounts_rebalance.rts:63",
      "samples/vigilant_asset_allocation.rts:10",
      "samples/vx_futures.rts:7",
      "samples/vx_term_structure.rts:2",
      "samples/weekly_moc_asx_daily_daily.rts:32",
      "samples/weekly_trend_follow.rts:29",
      "samples/weekly_trend_follow_make_tradelist.rts:33",
      "samples/yield_rank.rts:4"
    ]
  },
  {
    "name": "three",
    "category": "function",
    "signature": "three()",
    "description": "letter currency abbreviation such as AUD, CAD, USD, JPY etc. (do not include quotation marks)NotesOnly specify a base currency when you specifically want to test multi-currency strategies, e.g. trading US stocks in a non-US account.For this setting to work, the active data file must include the appropriate exchange rate series, e.g. AUDUSD, and the stock metadata must specify the currency for each symbol.See Testing Multi-Currency Strategies for details on how this works.",
    "snippet": "Data:\n    Example_three: three(...)",
    "sources": [
      "manual.txt:3493",
      "samples/cii_rotate.rts:35",
      "samples/dividend_capture.rts:36",
      "samples/higher_lows.rts:1",
      "samples/oex_tf_top_down.rts:2"
    ]
  },
  {
    "name": "time",
    "category": "function",
    "signature": "time()",
    "description": "in-force (DAY, GTD, OPG)allhours whether order is active all hours (0) or regular hours (1)gat good-after-time time (e.g. 15:58:00 EST)gtd good-until-date time (e.g. 15:45:00 EST)oca OCA group (automatically added if both stop and limit exits are used)id order id (use when attaching target/stop exits to entry orders)parent parent order id (use when attaching target/stop exits to entry orders)primary listing exchange of stock or contractsectype security type of stock or contractstrat strategy name (typically for the order reference field)side side of new or existing position: will be 1 for long, -1 for shortmaxent MaxEntries value (for The Chartist API \"Max Fill\" column)exit whether order is for an exit (1) vs. an entry (0)note OrderNote value (could be used as Account, FAGroup, etc.)extraN OrderExtraN value, where N is a number from 1 to 9nocommasuppresses the comma in the CSV output of this columntradeid round-trip trade ID (required for OrderClerk, not needed otherwise)uniqueida specific artificial order ID that is kept unique across sessions",
    "snippet": "Data:\n    Example_time: time(...)",
    "sources": [
      "manual.txt:2801",
      "samples/actual_trades.rts:49",
      "samples/correl_multi.rts:3",
      "samples/dividend_capture.rts:48",
      "samples/dividend_yield_series.rts:2",
      "samples/goal_30_15.rts:61",
      "samples/goal_30_15_asx.rts:62",
      "samples/goal_30_15_tsx.rts:60",
      "samples/keltner_pullback.rts:53",
      "samples/mr_sample.rts:18",
      "samples/mr_sample_long_only.rts:21",
      "samples/mr_sample_short_only.rts:19",
      "samples/mr_sample_tracking.rts:20",
      "samples/Sample1.rts:3",
      "samples/simple_day_trade.rts:26",
      "samples/spy_tlt_uis.rts:14",
      "samples/two_accounts.rts:97",
      "samples/two_accounts_rebalance.rts:97"
    ]
  },
  {
    "name": "top",
    "category": "function",
    "signature": "top()",
    "description": "level folders need to be given. RealTest will recursively traverse the entire folder tree under each specified folder.",
    "snippet": "Data:\n    Example_top: top(...)",
    "sources": [
      "manual.txt:2613",
      "samples/cii_rotate.rts:35",
      "samples/combined.rts:45",
      "samples/combined_multi_bar_size.rts:44",
      "samples/combined_rebalance.rts:42",
      "samples/gics_indu_rank.rts:2",
      "samples/goal_30_15.rts:33",
      "samples/keltner_pullback.rts:15",
      "samples/mr_sample_common.rts:26",
      "samples/mr_sample_orders_alera.rts:25",
      "samples/mr_sample_orders_basket.rts:26",
      "samples/mr_sample_scan.rts:27",
      "samples/mr_sample_test_scan.rts:29",
      "samples/multi_moc_top_down.rts:3",
      "samples/oex_tf_top_down.rts:3",
      "samples/spy_tlt_uis.rts:11",
      "samples/two_accounts.rts:38",
      "samples/two_accounts_rebalance.rts:38",
      "samples/yield_rank.rts:4"
    ]
  },
  {
    "name": "total",
    "category": "function",
    "signature": "total()",
    "description": "return adjustment. Dividends are integrated with the price series by converting them to the equivalent of stock splits. For example if a $100 stock paid a $1/share dividend, that would appear as a 101:100 split. The split",
    "snippet": "Data:\n    Example_total: total(...)",
    "sources": [
      "manual.txt:2848",
      "samples/breadth.rts:19",
      "samples/trend_following_basics.rts:70",
      "samples/turtles.rts:8",
      "samples/two_accounts.rts:65",
      "samples/two_accounts_rebalance.rts:65"
    ]
  },
  {
    "name": "trade",
    "category": "function",
    "signature": "trade()",
    "description": "level profit curve, Monte Carlo analysis, etc.)\u00b7 Scan (list of date/symbol / custom data output from a scan)\u00b7 Charts (bar or candlestick chart from a trade list or scan)\u00b7 Lists (general-purpose tabular data display)\u00b7 Logs (optional text output from testing, analysis or debugging)In addition to these child windows, there are two permanent dialog boxes:1. Settings Panel (shown above)2. Debug Panel (not shown above)Each of these two dialogs can easily be hidden or shown using the \"View\" menu and/or dedicated function keys (F11 and F12).The Window Tabs, Tool Bar and Status Bar can also be optionally hidden or shown using the View menu.",
    "snippet": "Data:\n    Example_trade: trade(...)",
    "sources": [
      "manual.txt:2326",
      "samples/actual_trades.rts:24",
      "samples/dividend_capture.rts:38",
      "samples/futures_trend_follow_csi.rts:21",
      "samples/futures_trend_follow_simple.rts:14",
      "samples/futures_volume_rank.rts:4",
      "samples/goal_30_15.rts:36",
      "samples/goal_30_15_asx.rts:37",
      "samples/goal_30_15_tsx.rts:35",
      "samples/higher_lows.rts:17",
      "samples/mr_sample_long_only.rts:10",
      "samples/mr_sample_tracking.rts:3",
      "samples/mr_sample_tradelist.rts:4",
      "samples/ndx_plus_wtf_tradelists.rts:2",
      "samples/ndx_rotate_make_tradelist.rts:2",
      "samples/oc_all_actual.rts:12",
      "samples/oex_tf_auto_track.rts:4",
      "samples/simple_day_trade.rts:2",
      "samples/spy_tlt_uis.rts:83",
      "samples/trend_following_basics.rts:27",
      "samples/turtles.rts:19",
      "samples/two_accounts.rts:2",
      "samples/two_accounts_rebalance.rts:2",
      "samples/vxx_long_short.rts:4",
      "samples/weekly_trend_follow.rts:29",
      "samples/weekly_trend_follow_make_tradelist.rts:2"
    ]
  },
  {
    "name": "trend",
    "category": "function",
    "signature": "trend()",
    "description": "following strategy for gold futures\u00b7 vx_futures.rts - be long or short the front-month VX futures contract depending on the term structure\u00b7 vx_term_structure.rts - illustrates how to plot the entire VX futures term structure in the indicator pane of a $VIX chart",
    "snippet": "Data:\n    Example_trend: trend(...)",
    "sources": [
      "manual.txt:2245",
      "samples/bensdorp_book.rts:38",
      "samples/futures_trend_follow_csi.rts:2",
      "samples/futures_trend_follow_simple.rts:2",
      "samples/futures_volume_rank.rts:4",
      "samples/gc_kelly.rts:2",
      "samples/higher_lows.rts:1",
      "samples/keltner_pullback.rts:4",
      "samples/ndx_rotate_factor_test.rts:24",
      "samples/oex_tf_auto_track.rts:2",
      "samples/oex_tf_top_down.rts:2",
      "samples/supertrend.rts:6",
      "samples/tf_dynamic_size.rts:2",
      "samples/tf_sell_half_at_1R.rts:2",
      "samples/trend_following_basics.rts:2",
      "samples/weekly_trend_follow.rts:2"
    ]
  },
  {
    "name": "two",
    "category": "function",
    "signature": "two()",
    "description": "parameter optimization results displayed in a rotating 3D graph. Though these look flashy, they add no new information to what is already discernible from a simple heat map.)",
    "snippet": "Data:\n    Example_two: two(...)",
    "sources": [
      "manual.txt:2281",
      "samples/clenow_stocks_on_move.rts:5",
      "samples/clenow_stocks_on_move_dynamic.rts:5",
      "samples/dividend_capture.rts:36",
      "samples/futures_calendar_spread.rts:2",
      "samples/mr_sample_orders_alera.rts:62",
      "samples/mr_sample_tradelist.rts:6",
      "samples/multi_filter_scan.rts:2",
      "samples/ndx_rotate.rts:45",
      "samples/ndx_rotate_make_tradelist.rts:47",
      "samples/ndx_rotate_weekly_reduce.rts:38",
      "samples/simple_day_trade.rts:44",
      "samples/simple_day_trade_basket_scan.rts:14",
      "samples/spy_tlt_uis.rts:11"
    ]
  },
  {
    "name": "un",
    "category": "function",
    "signature": "un()",
    "description": "comment a block of lines by adding or removing a C++ style comment on each line. It is often convenient to use this feature to comment out some of the strategies in a script while focusing on different ones in your research, then later comment them back in.A special version of the curly brace comment style is also used in some formulas to specify number formatting in results, graphs, charts and scans.In addition to the above, RealTest also supports Conditional Comments. See that topic for details.",
    "snippet": "Data:\n    Example_un: un(...)",
    "sources": [
      "manual.txt:2947"
    ]
  },
  {
    "name": "upper",
    "category": "function",
    "signature": "upper()",
    "description": "left corner, where the Parameters that were defined in the script are shown. Also notice the lower-right corner, where the number of tests to be run is calculated and displayed.Click on the check box for each of the two parameters and observe what happens to the Maximum Test Count value. Once both have been checked it should indicate that 40 tests will be performed.",
    "snippet": "Data:\n    Example_upper: upper(...)",
    "sources": [
      "manual.txt:2272",
      "samples/dividend_yield_series.rts:32",
      "samples/ehlers_windows.rts:47",
      "samples/keltner_pullback.rts:13"
    ]
  },
  {
    "name": "usedChoicesFalse",
    "category": "function",
    "signature": "usedChoicesFalse()",
    "description": "only import the symbols in the IncludeList if specified (default)True - import all files (symbols) found even when IncludeList is specifiedNotesWith database (whether local or cloud) data sources (Norgate, Tiingo, Yahoo, etc.) it is always true that only the symbols listed in one or more IncludeList definitions will be imported. With local file data sources (CSV, CSIFutures, CSIStocks, Metastock) we often want to simply import all the files found in the specified DataPath locations.By default, with local file sources, the use of an IncludeList acts like a filter, meaning \"only include",
    "snippet": "Data:\n    Example_usedChoicesFalse: usedChoicesFalse(...)",
    "sources": [
      "manual.txt:3794"
    ]
  },
  {
    "name": "usedChoicesThisClose",
    "category": "function",
    "signature": "usedChoicesThisClose()",
    "description": "exit at today's close if today's closing price touches or exceeds the limit price (impractical)Intraday - ExitLimit specifies the price of a live limit order to be placed tomorrow (default)NextOpen - exit at tomorrow's open if today's close touched or exceeded the limit priceNextClose - exit at tomorrow's close if tomorrow's close touches or exceeds the limit price (calculated from today's bar)NotesUsing ThisClose with ExitLimit equivalent to adding \"and C > n\", where \"n\" is the ExitLimit price (for a long-side strategy), to the ExitRule of a strategy with ExitTime ThisClose. In either case, orders could not be generated in advance for this mode.With Intraday, NextOpen, or NextClose ExitLimit orders, the trigger price is calculated using the prior bar, and the order can be placed in advance. A Intraday ExitLimit is a standard LMT DAY order.A NextOpen ExitLimit is a MKT order that is placed if the prior close touched the limit price.A NextClose ExitLimit is a LOC (limit on close) order at the specified limit price.Note that the Exit Logic of a strategy works differently from its Entry Logic. Specifically, there is always only one Entry order, while there can be up to three Exit orders. The three exit order types each have their own time specifier and function as a \"one-cancels-all\" order bracket, where the order to logically trigger first becomes the position exit and the others do not.To implement a trailing limit price, use PrevExitLimit in the ExitLimit price calculation.For more information on how the backtest engine works in general, see Backtest Engine Details.",
    "snippet": "Data:\n    Example_usedChoicesThisClose: usedChoicesThisClose(...)",
    "sources": [
      "manual.txt:3622"
    ]
  },
  {
    "name": "user",
    "category": "function",
    "signature": "user()",
    "description": "defined data column values are included after the standard bar data.",
    "snippet": "Data:\n    Example_user: user(...)",
    "sources": [
      "manual.txt:2446",
      "samples/cl_term_structure.rts:8"
    ]
  },
  {
    "name": "value",
    "category": "function",
    "signature": "value()",
    "description": "formula",
    "snippet": "Data:\n    Example_value: value(...)",
    "sources": [
      "manual.txt:3653",
      "samples/cii_rotate.rts:6",
      "samples/djia_earnings.rts:24",
      "samples/gics_indu_rank.rts:20",
      "samples/index_breadth.rts:26",
      "samples/mr_sample_hedged.rts:15",
      "samples/ndx_rotate_rebalance.rts:36",
      "samples/optimal_diversity.rts:35",
      "samples/sector_etfs.rts:19",
      "samples/spy_tlt_uis.rts:52",
      "samples/two_accounts.rts:65",
      "samples/two_accounts_rebalance.rts:65"
    ]
  },
  {
    "name": "value2",
    "category": "function",
    "signature": "value2()",
    "description": "any formula... - any number of additional comma-separated formulasNotesThis function evaluates each of the formulas passed to it and returns the smallest value found.",
    "snippet": "Data:\n    Example_value2: value2(...)",
    "sources": [
      "manual.txt:3912"
    ]
  },
  {
    "name": "volume",
    "category": "function",
    "signature": "volume()",
    "description": "weighted average price of all entry transactions in the current position.For non-pyramiding strategies, FillPriceAvg simply returns FillPrice.",
    "snippet": "Data:\n    Example_volume: volume(...)",
    "sources": [
      "manual.txt:3670",
      "samples/anchored_vwap.rts:2",
      "samples/breadth.rts:37",
      "samples/cl_term_structure.rts:4",
      "samples/ehlers_windows.rts:41",
      "samples/futures_trend_follow_csi.rts:19",
      "samples/futures_trend_follow_simple.rts:12",
      "samples/futures_volume_rank.rts:15",
      "samples/import_csv.rts:8",
      "samples/import_multi.rts:22",
      "samples/opex_and_vxex.rts:28",
      "samples/vx_term_structure.rts:4"
    ]
  },
  {
    "name": "vrealtest",
    "category": "function",
    "signature": "vrealtest()",
    "description": "import script.rts\u00b7 runs script.rts in Import mode\u00b7 saves data to RTD file if import definition includes a SaveAs pathvrealtest -scan script.rts\u00b7 runs script.rts in Scan mode\u00b7 saves scan output to CSV if ScanSettings include a SaveScanAs pathvrealtest -test script.rts\u00b7 runs script.rts in Test mode\u00b7 saves results data to RTR if the Settings include a ResultsFile path\u00b7 saves results window contents to CSV if test settings include a SaveTestListAs path\u00b7 saves stats to CSV if test settings include a SaveStatsAs path\u00b7 saves final position list to CSV if test settings include a SavePositionsAs path\u00b7 saves trade list to CSV if test settings include a SaveTradesAs pathvrealtest -orders script.rts\u00b7 runs script.rts in Orders mode\u00b7 generates and saves Order List file(s) as specified in the script\u00b7 also saves results and other output as is done for Test modeMultiple run modes can precede a script name, e.g. realtest -import -test script.rts will run that script first for import and then for backtest.Multiple scripts can follow a run mode, e.g. realtest -orders orders1.rts orders2.rts orders3.rts will generate orders from three different scripts.If all scripts ran successfully, the program return code will be 0. If there were errors, the return code will be one of the following:Code Meaning1 unknown command line task2 license error3 file open/read/write error4 memory error5 script error (syntax etc.)6 import error7 can't load data file8 other / unspecified",
    "snippet": "Data:\n    Example_vrealtest: vrealtest(...)",
    "sources": [
      "manual.txt:2729"
    ]
  },
  {
    "name": "walk",
    "category": "function",
    "signature": "walk()",
    "description": "forward test but can also be used to simply produce a series of results for different time periods. (It is OK to run a script in Optimize mode even if it contains no optimization parameters.) In particular, it can often be useful to set the time unit to \"Years\", simply to run a strategy for each year of a date range separately.By default each date interval is a sliding window of the same length. The Anchor setting lets you optionally lock the start or end date.",
    "snippet": "Data:\n    Example_walk: walk(...)",
    "sources": [
      "manual.txt:2656",
      "samples/spy_tlt_uis.rts:11"
    ]
  },
  {
    "name": "wide",
    "category": "function",
    "signature": "wide()",
    "description": "range bar. Another is a limit order entry and target exit within a single bar. The \"Default\" (best guess) choice is used if Ambiguity is not specified, and in most situations this will provide the most realistic results.In order to see how often this setting is being applied, run your test with TestOutput: Log and then search the log file for the word \"assuming\".",
    "snippet": "Data:\n    Example_wide: wide(...)",
    "sources": [
      "manual.txt:3343"
    ]
  },
  {
    "name": "yyyy",
    "category": "function",
    "signature": "yyyy()",
    "description": "mm-dd\u00b7 yyyy.mm.dd\u00b7 yyyymmdd\u00b7 dd-mmm-yy (where mmm is the first three letters of the month name)\u00b7 dd-mmm-yyyy (ditto)\u00b7 Earliest (use the earliest available date as a StartDate)\u00b7 Latest (use the latest available date as an EndDate)Date constants are used in the Import and Settings script sections.The DateInput setting determines whether x/x/y is interpreted as d/m/y vs. m/d/y.To override the current DateInput setting for a CSV import and/or EventListFile, add a CSVDateFmt definition. To override the current DateInput setting for a strategy's imported TradeList, add a TLDateFmt definition.To specify a literal date within a formula, e.g. EntrySetup: BarDate > 20240101 and other_conditions, if(Date = 20200607), it must be formatted as YYYYMMDD as in this example.To parse a date string within a formula, use the ToDate function.To format a numeric date in a non-default way, use the FormatDate function.To control how dates are displayed by default in the user interface or output files, use the DateDisplay setting.",
    "snippet": "Data:\n    Example_yyyy: yyyy(...)",
    "sources": [
      "manual.txt:2923"
    ]
  },
  {
    "name": "zero",
    "category": "function",
    "signature": "zero()",
    "description": "volume bars.)By default RealTest will not allow an entry or an exit in a backtest to occur on any bar for which the prior bar's date is not the prior date in the trading calendar of the exchange (the prior date of most other symbols). This models a daily process that only places orders for tomorrow for stocks that had trades today. Accordingly, RealTest won't generate orders after a missing bars by default either.If you want RealTest to simulate and generate orders even when the most recent bar is missing, specify AllowMissingBar: True in that Strategy definition.See also the general topic of Calendar Alignment and the MissingBars function, which can be used to count missing bars.",
    "snippet": "Data:\n    Example_zero: zero(...)",
    "sources": [
      "manual.txt:3333"
    ]
  }
]