?start: rts_file

rts_file: section+

section: notes_section
       | parameters_section
       | charts_section
       | strategy_section
       | benchmark_section
       | generic_section

benchmark_section: "Benchmark" ":" generic_section_body

strategy_section: "Strategy" ":" strategy_section_body
strategy_section_body: strategy_header_value? NEWLINE strategy_item*

strategy_header_value: (IDENTIFIER | decorated_expression)? COMMENT?

strategy_item: using_statement
             | include_list_item
             | tl_fields_item
             | key_value_item
             | COMMENT
             | BLOCK_COMMENT
             | NEWLINE

notes_section: "Notes" ":" NOTE_BLOCK

parameters_section: "Parameters" ":" parameters_section_body
parameters_section_body: NEWLINE parameters_item*
                       | parameters_item parameters_item*
                       | COMMENT NEWLINE parameters_item*
                       | BLOCK_COMMENT NEWLINE parameters_item*
parameters_item: parameter_definition_line
               | using_statement
               | include_list_item
               | tl_fields_item
               | key_value_item
               | COMMENT NEWLINE?
               | BLOCK_COMMENT
               | NEWLINE

parameter_definition_line: IDENTIFIER ":" parameter_value chart_decorator? COMMENT? NEWLINE

parameter_value: parameter_range
               | parameter_list
               | INT

parameter_range: "from" NUMBER "to" NUMBER parameter_range_suffix?
parameter_range_suffix: "step" NUMBER parameter_range_def?
                     | "def" NUMBER
parameter_range_def: "def" NUMBER

parameter_list: NUMBER ("," NUMBER)+

charts_section: "Charts" ":" NEWLINE charts_item*
charts_item: chart_definition
           | COMMENT NEWLINE?
           | BLOCK_COMMENT
           | NEWLINE

chart_definition: IDENTIFIER ":" chart_value NEWLINE

?chart_value: COMMENT
            | chart_expression

chart_expression: COMMENT? decorated_expression COMMENT?

?decorated_expression: chart_decorator* expression_series chart_decorator*

expression_series: decorated_expr_item ("," _arg_sep decorated_expr_item)*

decorated_expr_item: chart_decorator* expression chart_decorator*

_expr_sep: (NEWLINE | COMMENT | BLOCK_COMMENT)*

_arg_sep: _expr_sep


chart_decorator: "{" CHART_DECORATOR_BODY? "}"

generic_section: SECTION_NAME ":" generic_section_body
generic_section_body: NEWLINE section_item*
                    | section_header_value NEWLINE section_item*
                    | section_item section_item*

section_item: using_statement
            | include_list_item
            | tl_fields_item
            | key_value_item
            | COMMENT
            | BLOCK_COMMENT
            | NEWLINE

using_statement: "Using" ":" reference_list COMMENT? NEWLINE
include_list_item: "IncludeList" ":" include_value COMMENT? NEWLINE

reference_list: reference_item ("," reference_item)*
reference_item: SECTION_NAME
              | IDENTIFIER
              | SYMBOL
              | STRING


section_header_value: COMMENT?
                    | BLOCK_COMMENT
                    | COMMENT? decorated_expression COMMENT?

tl_fields_item: "TLFields" ":" tl_fields_list COMMENT? NEWLINE

key_value_item: KEY_ID ":" value NEWLINE?
include_value: include_entry ("," include_entry)*
include_entry: include_atom+ chart_decorator? COMMENT?
include_atom: FILENAME_PATH
            | WATCHLIST_REF
            | QUESTION_IDENT
            | IDENTIFIER
            | SYMBOL
            | STRING
            | NUMBER
            | AMPERSAND

?value: _expr_sep decorated_expression _expr_sep
      | path_value
      | COMMENT
      | BLOCK_COMMENT

path_value: FILENAME_PATH (FILENAME_PATH | IDENTIFIER | NUMBER | SYMBOL | STRING)* COMMENT?

?expression: logical_or

?logical_or: logical_and ((_expr_sep OR) _expr_sep logical_and)*
?logical_and: comparison ((_expr_sep AND) _expr_sep comparison)*
?comparison: NOT _expr_sep comparison
          | arith_expr ((_expr_sep COMP_OP) _expr_sep arith_expr)*
?arith_expr: term ((_expr_sep ("+"|"-")) _expr_sep term)*
?term: factor ((_expr_sep ("*"|"/"|"%")) _expr_sep factor)*
?factor: aggregator_prefix factor
       | ("+"|"-") _expr_sep factor
       | power

aggregator_prefix: AGGREGATOR+
?power: atom ((_expr_sep "^") _expr_sep factor)?
?atom: postfix
?postfix: base_atom trailer*
base_atom: NUMBER
         | SYMBOL
         | QUESTION_IDENT
         | WATCHLIST_REF
         | TILDE_IDENT
         | function_call
         | "(" _expr_sep expression _expr_sep ")"
         | IDENTIFIER
         | STRING
         | FILENAME_PATH

QUESTION_IDENT: /\?[A-Za-z0-9_]+/

trailer: "[" _expr_sep expression _expr_sep "]"
function_call: IDENTIFIER "(" _expr_sep [arguments] _expr_sep ")"
arguments: decorated_expr_item ("," _arg_sep decorated_expr_item)*

tl_fields_list: tl_field ("," tl_field)*
tl_field: tl_field_token?
tl_field_token: IDENTIFIER
              | SYMBOL
              | STRING
              | NUMBER

FILENAME_PATH: /(?!\/\/)(?:\?(?:scriptpath|scriptname|desktop)\?)?(?=[^ \t\r\n(),]*(?:[\.\/\\]|:[^ \t\r\n(),]))[^ \t\r\n(),]+/
NOTE_BLOCK: /(?:[^\r\n]*\r?\n)+?(?=^[A-Z][a-zA-Z0-9_]*:|\Z)/m
CHART_DECORATOR_BODY: /(?<=\{)[^}\r\n]+/
WATCHLIST_REF: /&[-A-Za-z0-9_.@]+/
AMPERSAND: "&"

SECTION_NAME: "Charts" | "Combined" | "Data" | "Import" | "Include" | "Library" | "Namespace" | "Notes" | "OptimizeSettings" | "OrderSettings" | "Parameters" | "Scan" | "ScanSettings" | "Settings" | "StatsGroup" | "StratData" | "Strategy" | "Template" | "TestData" | "TestScan" | "TestSettings" | "WalkForward"
KEY_ID: /(?!^(Strategy|Template|OrderSettings|Benchmark|Charts|Combined|Data|Import|Include|Library|Namespace|Notes|OptimizeSettings|Parameters|Scan|ScanSettings|Settings|StatsGroup|StratData|TestData|TestScan|TestSettings|WalkForward)$)(?:[.a-zA-Z_@][a-zA-Z0-9_.@]*)/
AND: /(?i)and/
OR: /(?i)or/
NOT: /(?i)not/
IDENTIFIER: /[.a-zA-Z_@][a-zA-Z0-9_.@]*/
SYMBOL: /[$%](?:[$&])?[A-Za-z0-9_.@]+/
STRING: /"(?:[^"\\]|\\.)*"/ | /'(?:[^'\\]|\\.)*'/
AGGREGATOR: /#[A-Za-z_][A-Za-z0-9_]*/

COMMENT: /\/\/[^\n]*/
BLOCK_COMMENT: /\/\*.*?\*\//s
TILDE_IDENT: /~[A-Za-z0-9_]+/

%import common.SIGNED_NUMBER -> NUMBER
%import common.SIGNED_INT -> INT
%import common.WS_INLINE
%import common.NEWLINE

%ignore WS_INLINE

COMP_OP: ">=" | "<=" | "==" | "!=" | "<>" | ">" | "<" | "="
