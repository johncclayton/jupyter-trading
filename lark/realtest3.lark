?start: rts_file

rts_file: section+

section: notes_section | parameters_section | charts_section | generic_section

notes_section: "Notes" ":" notes_content
notes_content: notes_entry*

parameters_section: "Parameters" ":" NEWLINE parameters_item*
parameters_item: parameter_definition_line
               | using_statement
               | include_list_item
               | tl_fields_item
               | key_value_item
               | COMMENT NEWLINE?
               | NEWLINE

parameter_definition_line: IDENTIFIER ":" parameter_value COMMENT? NEWLINE

parameter_value: parameter_range
               | parameter_list
               | INT

parameter_range: "from" NUMBER "to" NUMBER "step" NUMBER ("def" NUMBER)?

parameter_list: NUMBER ("," NUMBER)+

charts_section: "Charts" ":" NEWLINE charts_item*
charts_item: chart_definition
           | COMMENT NEWLINE?
           | NEWLINE

chart_definition: IDENTIFIER ":" chart_value NEWLINE

?chart_value: COMMENT
            | chart_expression

chart_expression: COMMENT? expression chart_decorator? COMMENT?

chart_decorator: "{" CHART_DECORATOR_BODY? "}"

generic_section: section_header section_item*
section_item: using_statement
            | include_list_item
            | tl_fields_item
            | key_value_item
            | COMMENT

using_statement: "Using" ":" section_ref_list COMMENT? NEWLINE
include_list_item: "IncludeList" ":" include_value COMMENT? NEWLINE

section_ref_list: SECTION_NAME ("," SECTION_NAME)*

section_header: SECTION_NAME ":" NEWLINE

tl_fields_item: "TLFields" ":" tl_fields_list COMMENT? NEWLINE

key_value_item: KEY ":" value NEWLINE
include_value: include_entry 
include_entry: FILENAME_PATH COMMENT?

?value: COMMENT? expression COMMENT?
      | COMMENT

?expression: logical_or

?logical_or: logical_and ("or" logical_and)*
?logical_and: comparison ("and" comparison)*
?comparison: arith_expr (COMP_OP arith_expr)*
?arith_expr: term (("+"|"-") term)*
?term: factor (("*"|"/") factor)*
?factor: ("+"|"-") factor | power
?power: atom ("^" factor)?
?atom: NUMBER
     | SYMBOL
     | array_access
     | function_call
     | "(" expression ")"
     | IDENTIFIER
     | STRING
     | FILENAME_PATH

array_access: IDENTIFIER "[" expression "]"
function_call: IDENTIFIER "(" [arguments] ")"
arguments: expression ("," expression)*

tl_fields_list: tl_field ("," tl_field)*
tl_field: tl_field_token?
tl_field_token: IDENTIFIER
              | SYMBOL
              | STRING
              | NUMBER

notes_entry: COMMENT NEWLINE?
           | NOTE_TEXT NEWLINE
           | NEWLINE
           
NOTE_TEXT: /(?![ \t]*[.a-zA-Z_@][a-zA-Z0-9_.]*:)[^\n\r]+/
FILENAME_PATH: /(?!\/\/)(?:\?(?:scriptpath|scriptname|desktop)\?)?[^ \t\r\n]+/
CHART_DECORATOR_BODY: /[^}\r\n]+/

KEY: IDENTIFIER
SECTION_NAME: IDENTIFIER
IDENTIFIER: /[.a-zA-Z_@][a-zA-Z0-9_.@]*/
SYMBOL: /\$[a-zA-Z0-9_]+/
STRING: /"(?:[^"\\]|\\.)*"/ | /'(?:[^'\\]|\\.)*'/

COMMENT: /\/\/[^\n]*/

%import common.SIGNED_NUMBER -> NUMBER
%import common.SIGNED_INT -> INT
%import common.WS_INLINE
%import common.NEWLINE

%ignore WS_INLINE

COMP_OP: ">" | "<" | ">=" | "<=" | "=" | "!="

// Define whitespace handling to allow for multi-line expressions
%ignore /(\s)+/
